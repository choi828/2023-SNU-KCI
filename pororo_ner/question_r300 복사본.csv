template_idx,NL,NL_mask,entity_list,NL_substituted,Cypher,Cypher_mask,Cypher_substituted,weight,level
0,[mask_1]의 인구는 몇명이야? ,apt_name,신반포21차아파트,신반포21차아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (k {name:’신반포21차아파트’}) RETURN k.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,방배래미안아파트,방배래미안아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’방배래미안아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,아크로리버파크아파트,아크로리버파크아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’아크로리버파크아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,방배자이아파트,방배자이아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’방배자이아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,마제스타시티힐스테이트서리풀아파트,마제스타시티힐스테이트서리풀아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’마제스타시티힐스테이트서리풀아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,신화아파트,신화아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (k {name:’신화아파트’}) RETURN k.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,서초자이아파트,서초자이아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’서초자이아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,서초네이처힐3단지아파트,서초네이처힐3단지아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’서초네이처힐3단지아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,한라비발디스튜디오193(도시형)아파트,한라비발디스튜디오193(도시형)아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’한라비발디스튜디오193(도시형)아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,반포르엘아파트,반포르엘아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’반포르엘아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,신반포4차아파트,신반포4차아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (k {name:’신반포4차아파트’}) RETURN k.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,방배e-편한세상1차아파트,방배e-편한세상1차아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’방배e-편한세상1차아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,반포미도2차아파트,반포미도2차아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’반포미도2차아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,힐스테이트서초젠트리스아파트,힐스테이트서초젠트리스아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’힐스테이트서초젠트리스아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,현대성우아파트,현대성우아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’현대성우아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,디에이치라클라스아파트,디에이치라클라스아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (k {name:’디에이치라클라스아파트’}) RETURN k.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,래미안신반포팰리스아파트,래미안신반포팰리스아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’래미안신반포팰리스아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,방배그랑자이아파트,방배그랑자이아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’방배그랑자이아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,래미안퍼스티지아파트,래미안퍼스티지아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’래미안퍼스티지아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,서초롯데캐슬프레지던트아파트,서초롯데캐슬프레지던트아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’서초롯데캐슬프레지던트아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,신반포21차아파트,신반포21차아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’신반포21차아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,서초래미안아파트,서초래미안아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’서초래미안아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,우면한라아파트,우면한라아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’우면한라아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,서초네이처힐4단지아파트,서초네이처힐4단지아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (k {name:’서초네이처힐4단지아파트’}) RETURN k.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,신반포27차아파트,신반포27차아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’신반포27차아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,래미안원베일리아파트,래미안원베일리아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’래미안원베일리아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,현대ESA아파트,현대ESA아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’현대ESA아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,LH서초5단지아파트,LH서초5단지아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’LH서초5단지아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,킴스빌리지아파트,킴스빌리지아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’킴스빌리지아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,방배아크로타워아파트,방배아크로타워아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’방배아크로타워아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,블루힐하우스아파트,블루힐하우스아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’블루힐하우스아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,방배대우디오빌아파트,방배대우디오빌아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’방배대우디오빌아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,서초교대e편한세상아파트,서초교대e편한세상아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’서초교대e편한세상아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,서초e-편한세상5차아파트,서초e-편한세상5차아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’서초e-편한세상5차아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,삼익아파트,삼익아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (k {name:’삼익아파트’}) RETURN k.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,한신타운아파트,한신타운아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (k {name:’한신타운아파트’}) RETURN k.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,신반포2차아파트,신반포2차아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’신반포2차아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,서초현대아파트,서초현대아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (k {name:’서초현대아파트’}) RETURN k.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,아크로리버파크아파트,아크로리버파크아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (k {name:’아크로리버파크아파트’}) RETURN k.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,디에이치라클라스아파트,디에이치라클라스아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (k {name:’디에이치라클라스아파트’}) RETURN k.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,신반포11차아파트,신반포11차아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’신반포11차아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,롯데캐슬헤론아파트,롯데캐슬헤론아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’롯데캐슬헤론아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,반포미도1차아파트,반포미도1차아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (k {name:’반포미도1차아파트’}) RETURN k.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,금호베스트빌아파트,금호베스트빌아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’금호베스트빌아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,신동아1차아파트,신동아1차아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (k {name:’신동아1차아파트’}) RETURN k.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,킴스빌리지아파트,킴스빌리지아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’킴스빌리지아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,디에이치라클라스아파트,디에이치라클라스아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’디에이치라클라스아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,마제스타시티힐스테이트서리풀아파트,마제스타시티힐스테이트서리풀아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (k {name:’마제스타시티힐스테이트서리풀아파트’}) RETURN k.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,한라비발디스튜디오193(도시형)아파트,한라비발디스튜디오193(도시형)아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’한라비발디스튜디오193(도시형)아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,신반포15차아파트,신반포15차아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’신반포15차아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,신반포자이아파트,신반포자이아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’신반포자이아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,서초LH4단지아파트,서초LH4단지아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’서초LH4단지아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,래미안리더스원아파트,래미안리더스원아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’래미안리더스원아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,신반포12차아파트,신반포12차아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (k {name:’신반포12차아파트’}) RETURN k.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,삼호가든맨션5차아파트,삼호가든맨션5차아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (k {name:’삼호가든맨션5차아파트’}) RETURN k.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,서초호반써밋아파트,서초호반써밋아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (k {name:’서초호반써밋아파트’}) RETURN k.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,래미안서초에스티지S아파트,래미안서초에스티지S아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’래미안서초에스티지S아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,신반포15차아파트,신반포15차아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’신반포15차아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,래미안서초에스티지S아파트,래미안서초에스티지S아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (k {name:’래미안서초에스티지S아파트’}) RETURN k.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,서초e-편한세상2차아파트,서초e-편한세상2차아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’서초e-편한세상2차아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,래미안리더스원아파트,래미안리더스원아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (k {name:’래미안리더스원아파트’}) RETURN k.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,대림아파트,대림아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (k {name:’대림아파트’}) RETURN k.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,반포미도2차아파트,반포미도2차아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’반포미도2차아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,서초센트럴아이파크아파트,서초센트럴아이파크아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’서초센트럴아이파크아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,잠원대우아이빌아파트,잠원대우아이빌아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’잠원대우아이빌아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,서초포레스타7단지아파트,서초포레스타7단지아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (k {name:’서초포레스타7단지아파트’}) RETURN k.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,잠원현대아파트,잠원현대아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’잠원현대아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,신반포11차아파트,신반포11차아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’신반포11차아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,잠원대우아이빌아파트,잠원대우아이빌아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’잠원대우아이빌아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,현대멤피스아파트,현대멤피스아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (k {name:’현대멤피스아파트’}) RETURN k.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,방배래미안아파트,방배래미안아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’방배래미안아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,롯데캐슬주피터아파트,롯데캐슬주피터아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’롯데캐슬주피터아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,잠원대우아이빌아파트,잠원대우아이빌아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’잠원대우아이빌아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,방배아트자이아파트,방배아트자이아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (k {name:’방배아트자이아파트’}) RETURN k.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,아크로리버뷰신반포아파트,아크로리버뷰신반포아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (k {name:’아크로리버뷰신반포아파트’}) RETURN k.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,래미안신반포팰리스아파트,래미안신반포팰리스아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (k {name:’래미안신반포팰리스아파트’}) RETURN k.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,"임광1,2차아파트","임광1,2차아파트의 인구는 몇명이야? ",MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,"MATCH (k {name:’임광1,2차아파트’}) RETURN k.pop",1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,반포써밋아파트,반포써밋아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’반포써밋아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,한신타운아파트,한신타운아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’한신타운아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,삼환나띠르빌아파트,삼환나띠르빌아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’삼환나띠르빌아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,서초롯데캐슬프레지던트아파트,서초롯데캐슬프레지던트아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (k {name:’서초롯데캐슬프레지던트아파트’}) RETURN k.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,잠원대우아이빌아파트,잠원대우아이빌아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (k {name:’잠원대우아이빌아파트’}) RETURN k.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,방배아크로리버아파트,방배아크로리버아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’방배아크로리버아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,서초트라팰리스아파트,서초트라팰리스아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (k {name:’서초트라팰리스아파트’}) RETURN k.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,서초센트럴아이파크아파트,서초센트럴아이파크아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’서초센트럴아이파크아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,신반포25차아파트,신반포25차아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (k {name:’신반포25차아파트’}) RETURN k.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,신반포18차(337동)아파트,신반포18차(337동)아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’신반포18차(337동)아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,래미안서초에스티지S아파트,래미안서초에스티지S아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’래미안서초에스티지S아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,서초아이파크아파트,서초아이파크아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’서초아이파크아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,LH서초5단지아파트,LH서초5단지아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (k {name:’LH서초5단지아파트’}) RETURN k.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,래미안서초에스티지S아파트,래미안서초에스티지S아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’래미안서초에스티지S아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,현대ESA2아파트,현대ESA2아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’현대ESA2아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,양재우성KBS(113동)아파트,양재우성KBS(113동)아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’양재우성KBS(113동)아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,방배롯데캐슬로제아파트,방배롯데캐슬로제아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’방배롯데캐슬로제아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,방배래미안타워아파트,방배래미안타워아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’방배래미안타워아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,서초더샵포레아파트,서초더샵포레아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’서초더샵포레아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,방배우성아파트,방배우성아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (k {name:’방배우성아파트’}) RETURN k.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,삼풍아파트,삼풍아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (k {name:’삼풍아파트’}) RETURN k.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,신반포청구아파트,신반포청구아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’신반포청구아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,래미안리더스원아파트,래미안리더스원아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’래미안리더스원아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,서초현대아파트,서초현대아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (k {name:’서초현대아파트’}) RETURN k.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,래미안원베일리아파트,래미안원베일리아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’래미안원베일리아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,서초e-편한세상5차아파트,서초e-편한세상5차아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’서초e-편한세상5차아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,신반포궁전아파트,신반포궁전아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’신반포궁전아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,서초포레스타3단지아파트,서초포레스타3단지아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’서초포레스타3단지아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,지웰홈스서초아파트,지웰홈스서초아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (k {name:’지웰홈스서초아파트’}) RETURN k.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,서초래미안아파트,서초래미안아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’서초래미안아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,반포힐스테이트아파트,반포힐스테이트아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’반포힐스테이트아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,서초더샵포레아파트,서초더샵포레아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’서초더샵포레아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,임광3차아파트,임광3차아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’임광3차아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,진흥아파트,진흥아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (k {name:’진흥아파트’}) RETURN k.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,방배우성아파트,방배우성아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’방배우성아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,신반포25차아파트,신반포25차아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’신반포25차아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,서초대우아이빌아파트,서초대우아이빌아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’서초대우아이빌아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,신반포19차아파트,신반포19차아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (k {name:’신반포19차아파트’}) RETURN k.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,잠원대우아이빌아파트,잠원대우아이빌아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (k {name:’잠원대우아이빌아파트’}) RETURN k.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,한강아파트,한강아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (k {name:’한강아파트’}) RETURN k.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,신반포9차아파트,신반포9차아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (k {name:’신반포9차아파트’}) RETURN k.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,잠원현대훼밀리아파트,잠원현대훼밀리아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’잠원현대훼밀리아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,신반포25차아파트,신반포25차아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’신반포25차아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,잠원한신아파트,잠원한신아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’잠원한신아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,신화아파트,신화아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (k {name:’신화아파트’}) RETURN k.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,방배현대홈타운2차아파트,방배현대홈타운2차아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’방배현대홈타운2차아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,신반포18차(337동)아파트,신반포18차(337동)아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’신반포18차(337동)아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,코오롱아파트,코오롱아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’코오롱아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,반포센트레빌아스테리움아파트,반포센트레빌아스테리움아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (k {name:’반포센트레빌아스테리움아파트’}) RETURN k.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,방배마에스트로아파트,방배마에스트로아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’방배마에스트로아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,서초e-편한세상1차아파트,서초e-편한세상1차아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’서초e-편한세상1차아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,래미안신반포리오센트아파트,래미안신반포리오센트아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’래미안신반포리오센트아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,롯데캐슬클래식아파트,롯데캐슬클래식아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’롯데캐슬클래식아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,힐스테이트서초젠트리스아파트,힐스테이트서초젠트리스아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’힐스테이트서초젠트리스아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,방배브라운가아파트,방배브라운가아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’방배브라운가아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,현대ESA2아파트,현대ESA2아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (k {name:’현대ESA2아파트’}) RETURN k.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,서초더샵포레아파트,서초더샵포레아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’서초더샵포레아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,더샵서초아파트,더샵서초아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’더샵서초아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,반포자이아파트,반포자이아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’반포자이아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,서초자이아파트,서초자이아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’서초자이아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,반포푸르지오아파트,반포푸르지오아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (k {name:’반포푸르지오아파트’}) RETURN k.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,잠원훼미리아파트,잠원훼미리아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (k {name:’잠원훼미리아파트’}) RETURN k.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,디에이치라클라스아파트,디에이치라클라스아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’디에이치라클라스아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,서초포레스타6단지아파트,서초포레스타6단지아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’서초포레스타6단지아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,"임광1,2차아파트","임광1,2차아파트의 인구는 몇명이야? ",MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,"MATCH (n {name:’임광1,2차아파트’}) RETURN n.pop",1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,서초한빛삼성아파트,서초한빛삼성아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’서초한빛삼성아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,방배래미안아트힐아파트,방배래미안아트힐아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (k {name:’방배래미안아트힐아파트’}) RETURN k.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,서초한신리빙타워아파트,서초한신리빙타워아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’서초한신리빙타워아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,현대아파트,현대아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’현대아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,신반포17차아파트,신반포17차아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’신반포17차아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,녹원한신아파트,녹원한신아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’녹원한신아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,우면한라아파트,우면한라아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’우면한라아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,방배브라운가아파트,방배브라운가아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (k {name:’방배브라운가아파트’}) RETURN k.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,삼호4차아파트,삼호4차아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (k {name:’삼호4차아파트’}) RETURN k.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,현대동궁아파트,현대동궁아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’현대동궁아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,서초네이처힐2단지아파트,서초네이처힐2단지아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’서초네이처힐2단지아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,서초쌍용플래티넘아파트,서초쌍용플래티넘아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’서초쌍용플래티넘아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,반포래미안아이파크아파트,반포래미안아이파크아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’반포래미안아이파크아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,반포힐스테이트아파트,반포힐스테이트아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’반포힐스테이트아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,서초네이처힐6단지아파트,서초네이처힐6단지아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’서초네이처힐6단지아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,신반포9차아파트,신반포9차아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (k {name:’신반포9차아파트’}) RETURN k.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,신반포12차아파트,신반포12차아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’신반포12차아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,방배그랑자이아파트,방배그랑자이아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (k {name:’방배그랑자이아파트’}) RETURN k.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,롯데캐슬헤론아파트,롯데캐슬헤론아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’롯데캐슬헤론아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,서초포레스타6단지아파트,서초포레스타6단지아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (k {name:’서초포레스타6단지아파트’}) RETURN k.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,서초네이처힐1단지아파트,서초네이처힐1단지아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (k {name:’서초네이처힐1단지아파트’}) RETURN k.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,금호베스트빌아파트,금호베스트빌아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’금호베스트빌아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,반포주공1단지아파트,반포주공1단지아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’반포주공1단지아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,신반포17차아파트,신반포17차아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’신반포17차아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,방배래미안아파트,방배래미안아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’방배래미안아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,롯데캐슬주피터아파트,롯데캐슬주피터아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’롯데캐슬주피터아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,양재우성아파트,양재우성아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’양재우성아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,서초LH4단지아파트,서초LH4단지아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’서초LH4단지아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,서초더샵포레아파트,서초더샵포레아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (k {name:’서초더샵포레아파트’}) RETURN k.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,방배우성아파트,방배우성아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’방배우성아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,임광3차아파트,임광3차아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (k {name:’임광3차아파트’}) RETURN k.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,현대동궁아파트,현대동궁아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (k {name:’현대동궁아파트’}) RETURN k.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,블루힐하우스아파트,블루힐하우스아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (k {name:’블루힐하우스아파트’}) RETURN k.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,동고아파트,동고아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’동고아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,서초포레스타7단지아파트,서초포레스타7단지아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (k {name:’서초포레스타7단지아파트’}) RETURN k.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,신반포12차아파트,신반포12차아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (k {name:’신반포12차아파트’}) RETURN k.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,삼호1차아파트,삼호1차아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’삼호1차아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,서초네이처힐7단지아파트,서초네이처힐7단지아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’서초네이처힐7단지아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,방배래미안아트힐아파트,방배래미안아트힐아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’방배래미안아트힐아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,서초한신아파트,서초한신아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (k {name:’서초한신아파트’}) RETURN k.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,방배한신트리플아파트,방배한신트리플아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (k {name:’방배한신트리플아파트’}) RETURN k.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,삼익아파트,삼익아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (k {name:’삼익아파트’}) RETURN k.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,신동아2차아파트,신동아2차아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’신동아2차아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,방배e-편한세상3차아파트,방배e-편한세상3차아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’방배e-편한세상3차아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,쌍용예가클래식아파트,쌍용예가클래식아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’쌍용예가클래식아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,잠원한신그린아파트,잠원한신그린아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’잠원한신그린아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,방배e-편한세상3차아파트,방배e-편한세상3차아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’방배e-편한세상3차아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,동아아파트,동아아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’동아아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,방배서리풀e-편한세상아파트,방배서리풀e-편한세상아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’방배서리풀e-편한세상아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,방배롯데캐슬로제아파트,방배롯데캐슬로제아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (k {name:’방배롯데캐슬로제아파트’}) RETURN k.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,서초래미안아파트,서초래미안아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’서초래미안아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,신반포자이아파트,신반포자이아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’신반포자이아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,서초아이파크아파트,서초아이파크아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’서초아이파크아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,금호베스트빌아파트,금호베스트빌아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (k {name:’금호베스트빌아파트’}) RETURN k.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,헤센파크힐아파트,헤센파크힐아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (k {name:’헤센파크힐아파트’}) RETURN k.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,엠브이아파트,엠브이아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’엠브이아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,더샵반포리버파크(도시형)아파트,더샵반포리버파크(도시형)아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’더샵반포리버파크(도시형)아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,방배현대홈타운2차아파트,방배현대홈타운2차아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’방배현대홈타운2차아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,현대동궁아파트,현대동궁아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (k {name:’현대동궁아파트’}) RETURN k.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,래미안신반포리오센트아파트,래미안신반포리오센트아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’래미안신반포리오센트아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,지웰홈스서초아파트,지웰홈스서초아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’지웰홈스서초아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,방배아트자이아파트,방배아트자이아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’방배아트자이아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,방배현대홈타운1차아파트,방배현대홈타운1차아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’방배현대홈타운1차아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,잠원대우아이빌아파트,잠원대우아이빌아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (k {name:’잠원대우아이빌아파트’}) RETURN k.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,신반포12차아파트,신반포12차아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’신반포12차아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,코오롱아파트,코오롱아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’코오롱아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,신반포27차아파트,신반포27차아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’신반포27차아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,래미안서초유니빌아파트,래미안서초유니빌아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (k {name:’래미안서초유니빌아파트’}) RETURN k.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,래미안신반포리오센트아파트,래미안신반포리오센트아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’래미안신반포리오센트아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,롯데캐슬갤럭시2차아파트,롯데캐슬갤럭시2차아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’롯데캐슬갤럭시2차아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,LH서초5단지아파트,LH서초5단지아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’LH서초5단지아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,잠원훼미리아파트,잠원훼미리아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’잠원훼미리아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,금호베스트빌아파트,금호베스트빌아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’금호베스트빌아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,서초e-편한세상1차아파트,서초e-편한세상1차아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’서초e-편한세상1차아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,서초한신리빙타워아파트,서초한신리빙타워아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (k {name:’서초한신리빙타워아파트’}) RETURN k.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,반포힐스테이트아파트,반포힐스테이트아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’반포힐스테이트아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,아크로비스타아파트,아크로비스타아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (k {name:’아크로비스타아파트’}) RETURN k.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,신반포4차아파트,신반포4차아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’신반포4차아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,래미안리더스원아파트,래미안리더스원아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’래미안리더스원아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,DK밸리뷰서초(주)아파트,DK밸리뷰서초(주)아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’DK밸리뷰서초(주)아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,방배아이파크아파트,방배아이파크아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (k {name:’방배아이파크아파트’}) RETURN k.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,신동아2차아파트,신동아2차아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’신동아2차아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,DK밸리뷰서초(주)아파트,DK밸리뷰서초(주)아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’DK밸리뷰서초(주)아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,잠원현대훼밀리아파트,잠원현대훼밀리아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’잠원현대훼밀리아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,"임광1,2차아파트","임광1,2차아파트의 인구는 몇명이야? ",MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,"MATCH (n {name:’임광1,2차아파트’}) RETURN n.pop",1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,잠원현대훼밀리아파트,잠원현대훼밀리아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (k {name:’잠원현대훼밀리아파트’}) RETURN k.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,서초래미안아파트,서초래미안아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’서초래미안아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,잠원훼미리아파트,잠원훼미리아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (k {name:’잠원훼미리아파트’}) RETURN k.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,서초LH4단지아파트,서초LH4단지아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (k {name:’서초LH4단지아파트’}) RETURN k.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,신반포궁전아파트,신반포궁전아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (k {name:’신반포궁전아파트’}) RETURN k.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,서초아이파크아파트,서초아이파크아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’서초아이파크아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,서초포레스타5단지아파트,서초포레스타5단지아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’서초포레스타5단지아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,신반포19차아파트,신반포19차아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (k {name:’신반포19차아파트’}) RETURN k.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,잠원중앙하이츠(B동)아파트,잠원중앙하이츠(B동)아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’잠원중앙하이츠(B동)아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,신반포18차(337동)아파트,신반포18차(337동)아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (k {name:’신반포18차(337동)아파트’}) RETURN k.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,현대동궁아파트,현대동궁아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (k {name:’현대동궁아파트’}) RETURN k.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,래미안신반포리오센트아파트,래미안신반포리오센트아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’래미안신반포리오센트아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,롯데캐슬갤럭시1차아파트,롯데캐슬갤럭시1차아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (k {name:’롯데캐슬갤럭시1차아파트’}) RETURN k.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,신동아1차아파트,신동아1차아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (k {name:’신동아1차아파트’}) RETURN k.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,반포센트레빌아스테리움아파트,반포센트레빌아스테리움아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’반포센트레빌아스테리움아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,마제스타시티힐스테이트서리풀아파트,마제스타시티힐스테이트서리풀아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’마제스타시티힐스테이트서리풀아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,르엘신반포파크애비뉴아파트,르엘신반포파크애비뉴아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (k {name:’르엘신반포파크애비뉴아파트’}) RETURN k.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,신반포자이아파트,신반포자이아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (k {name:’신반포자이아파트’}) RETURN k.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,코오롱아파트,코오롱아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’코오롱아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,서초대우디오빌프라임아파트,서초대우디오빌프라임아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (k {name:’서초대우디오빌프라임아파트’}) RETURN k.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,디에이치라클라스아파트,디에이치라클라스아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’디에이치라클라스아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,르엘신반포파크애비뉴아파트,르엘신반포파크애비뉴아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (k {name:’르엘신반포파크애비뉴아파트’}) RETURN k.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,래미안서초스위트아파트,래미안서초스위트아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’래미안서초스위트아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,신동아1차아파트,신동아1차아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’신동아1차아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,서초현대아파트,서초현대아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (k {name:’서초현대아파트’}) RETURN k.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,신반포19차아파트,신반포19차아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’신반포19차아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,방배마에스트로아파트,방배마에스트로아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’방배마에스트로아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,신반포22차아파트,신반포22차아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’신반포22차아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,더샵서초아파트,더샵서초아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (k {name:’더샵서초아파트’}) RETURN k.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,풍림아이원플러스아파트,풍림아이원플러스아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (k {name:’풍림아이원플러스아파트’}) RETURN k.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,서초리시온아파트,서초리시온아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (k {name:’서초리시온아파트’}) RETURN k.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,코오롱아파트,코오롱아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’코오롱아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,서초네이처힐7단지아파트,서초네이처힐7단지아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’서초네이처힐7단지아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,방배래미안타워아파트,방배래미안타워아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (k {name:’방배래미안타워아파트’}) RETURN k.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,삼호1차아파트,삼호1차아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (k {name:’삼호1차아파트’}) RETURN k.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,방배한신트리플아파트,방배한신트리플아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’방배한신트리플아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,방배브라운스톤아파트,방배브라운스톤아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (k {name:’방배브라운스톤아파트’}) RETURN k.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,강남역푸르지오시티(도시형)아파트,강남역푸르지오시티(도시형)아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (k {name:’강남역푸르지오시티(도시형)아파트’}) RETURN k.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,서초대우아이빌아파트,서초대우아이빌아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’서초대우아이빌아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,신반포27차아파트,신반포27차아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’신반포27차아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,서초더샵포레아파트,서초더샵포레아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’서초더샵포레아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,신반포10차아파트,신반포10차아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’신반포10차아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,쌍용예가클래식아파트,쌍용예가클래식아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’쌍용예가클래식아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,반포미도2차아파트,반포미도2차아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’반포미도2차아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,마제스타시티힐스테이트서리풀아파트,마제스타시티힐스테이트서리풀아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’마제스타시티힐스테이트서리풀아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,삼호한숲아파트,삼호한숲아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’삼호한숲아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,현대아파트,현대아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’현대아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,아남아파트,아남아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (k {name:’아남아파트’}) RETURN k.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,반포주공1단지아파트,반포주공1단지아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’반포주공1단지아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,대우효령아파트,대우효령아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’대우효령아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,서초네이처힐3단지아파트,서초네이처힐3단지아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’서초네이처힐3단지아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,방배아트자이아파트,방배아트자이아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’방배아트자이아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,방배한신트리플아파트,방배한신트리플아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (k {name:’방배한신트리플아파트’}) RETURN k.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,디에이치라클라스아파트,디에이치라클라스아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’디에이치라클라스아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,강남역푸르지오시티(도시형)아파트,강남역푸르지오시티(도시형)아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’강남역푸르지오시티(도시형)아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,잠원중앙하이츠(B동)아파트,잠원중앙하이츠(B동)아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’잠원중앙하이츠(B동)아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,동원베네스트아파트,동원베네스트아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’동원베네스트아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,방배롯데캐슬로제아파트,방배롯데캐슬로제아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (k {name:’방배롯데캐슬로제아파트’}) RETURN k.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,신영체르니아파트,신영체르니아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (k {name:’신영체르니아파트’}) RETURN k.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,한강아파트,한강아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (k {name:’한강아파트’}) RETURN k.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,삼호1차아파트,삼호1차아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’삼호1차아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,잠원한신아파트,잠원한신아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (k {name:’잠원한신아파트’}) RETURN k.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,서초트라팰리스아파트,서초트라팰리스아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (k {name:’서초트라팰리스아파트’}) RETURN k.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,현대슈퍼빌아파트,현대슈퍼빌아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’현대슈퍼빌아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,방배현대홈타운1차아파트,방배현대홈타운1차아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’방배현대홈타운1차아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,DK밸리뷰서초(주)아파트,DK밸리뷰서초(주)아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (k {name:’DK밸리뷰서초(주)아파트’}) RETURN k.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,서초대우디오빌프라임아파트,서초대우디오빌프라임아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’서초대우디오빌프라임아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,삼호2차아파트,삼호2차아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’삼호2차아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,신반포19차아파트,신반포19차아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’신반포19차아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,롯데캐슬클래식아파트,롯데캐슬클래식아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (k {name:’롯데캐슬클래식아파트’}) RETURN k.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,방배자이아파트,방배자이아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’방배자이아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,잠원중앙하이츠(B동)아파트,잠원중앙하이츠(B동)아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’잠원중앙하이츠(B동)아파트’}) RETURN n.pop,1,0
0,[mask_1]의 인구는 몇명이야? ,apt_name,반포주공1단지아파트,반포주공1단지아파트의 인구는 몇명이야? ,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].pop,apt_name,MATCH (n {name:’반포주공1단지아파트’}) RETURN n.pop,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,서초교대e편한세상아파트,서초교대e편한세상아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’서초교대e편한세상아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,서초래미안아파트,서초래미안아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’서초래미안아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,삼환나띠르빌아파트,삼환나띠르빌아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’삼환나띠르빌아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,잠원대우아이빌아파트,잠원대우아이빌아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’잠원대우아이빌아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,서초e-편한세상2차아파트,서초e-편한세상2차아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’서초e-편한세상2차아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,서초리시온아파트,서초리시온아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (k {name:’서초리시온아파트’}) RETURN k.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,디에이치라클라스아파트,디에이치라클라스아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’디에이치라클라스아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,방배우성아파트,방배우성아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (k {name:’방배우성아파트’}) RETURN k.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,서초포레스타6단지아파트,서초포레스타6단지아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’서초포레스타6단지아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,서초리시온아파트,서초리시온아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’서초리시온아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,디에이치라클라스아파트,디에이치라클라스아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’디에이치라클라스아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,현대슈퍼빌아파트,현대슈퍼빌아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (k {name:’현대슈퍼빌아파트’}) RETURN k.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,잠원한신그린아파트,잠원한신그린아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’잠원한신그린아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,서초대우디오빌프라임아파트,서초대우디오빌프라임아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’서초대우디오빌프라임아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,강남역푸르지오시티(도시형)아파트,강남역푸르지오시티(도시형)아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’강남역푸르지오시티(도시형)아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,서초한신아파트,서초한신아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’서초한신아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,반포미도2차아파트,반포미도2차아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’반포미도2차아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,방배롯데캐슬아르떼아파트,방배롯데캐슬아르떼아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’방배롯데캐슬아르떼아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,신반포10차아파트,신반포10차아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (k {name:’신반포10차아파트’}) RETURN k.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,킴스빌리지아파트,킴스빌리지아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (k {name:’킴스빌리지아파트’}) RETURN k.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,신반포2차아파트,신반포2차아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’신반포2차아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,방배서리풀e-편한세상아파트,방배서리풀e-편한세상아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (k {name:’방배서리풀e-편한세상아파트’}) RETURN k.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,방배래미안아파트,방배래미안아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (k {name:’방배래미안아파트’}) RETURN k.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,현대동궁아파트,현대동궁아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’현대동궁아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,래미안퍼스티지아파트,래미안퍼스티지아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (k {name:’래미안퍼스티지아파트’}) RETURN k.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,삼호4차아파트,삼호4차아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’삼호4차아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,삼호4차아파트,삼호4차아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’삼호4차아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,지웰홈스서초아파트,지웰홈스서초아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’지웰홈스서초아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,방배아크로타워아파트,방배아크로타워아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’방배아크로타워아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,서초한신아파트,서초한신아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’서초한신아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,잠원훼미리아파트,잠원훼미리아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’잠원훼미리아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,방배마에스트로아파트,방배마에스트로아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’방배마에스트로아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,롯데캐슬주피터아파트,롯데캐슬주피터아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (k {name:’롯데캐슬주피터아파트’}) RETURN k.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,서초리시온아파트,서초리시온아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’서초리시온아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,서초LH4단지아파트,서초LH4단지아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (k {name:’서초LH4단지아파트’}) RETURN k.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,삼성서초가든스위트아파트,삼성서초가든스위트아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (k {name:’삼성서초가든스위트아파트’}) RETURN k.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,신반포2차아파트,신반포2차아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’신반포2차아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,신반포궁전아파트,신반포궁전아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’신반포궁전아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,아크로리버뷰신반포아파트,아크로리버뷰신반포아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’아크로리버뷰신반포아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,방배동부센트레빌아파트,방배동부센트레빌아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (k {name:’방배동부센트레빌아파트’}) RETURN k.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,서초롯데캐슬리버티아파트,서초롯데캐슬리버티아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’서초롯데캐슬리버티아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,잠원훼미리아파트,잠원훼미리아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’잠원훼미리아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,방배우성아파트,방배우성아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (k {name:’방배우성아파트’}) RETURN k.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,현대슈퍼빌아파트,현대슈퍼빌아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’현대슈퍼빌아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,"임광1,2차아파트","임광1,2차아파트의 평균 소득은 얼마야?",MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,"MATCH (n {name:’임광1,2차아파트’}) RETURN n.average_income_year",1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,서초푸르지오써밋아파트,서초푸르지오써밋아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (k {name:’서초푸르지오써밋아파트’}) RETURN k.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,서초네이처힐6단지아파트,서초네이처힐6단지아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (k {name:’서초네이처힐6단지아파트’}) RETURN k.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,신반포9차아파트,신반포9차아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’신반포9차아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,서초현대4차아파트,서초현대4차아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’서초현대4차아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,방배자이아파트,방배자이아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’방배자이아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,양재우성KBS(113동)아파트,양재우성KBS(113동)아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’양재우성KBS(113동)아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,잠원현대아파트,잠원현대아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’잠원현대아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,서초아트자이아파트,서초아트자이아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’서초아트자이아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,신반포8차아파트,신반포8차아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (k {name:’신반포8차아파트’}) RETURN k.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,서초힐스아파트,서초힐스아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’서초힐스아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,현대아파트,현대아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (k {name:’현대아파트’}) RETURN k.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,아크로리버뷰신반포아파트,아크로리버뷰신반포아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’아크로리버뷰신반포아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,서초자이아파트,서초자이아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’서초자이아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,신반포4차아파트,신반포4차아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’신반포4차아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,서초현대아파트,서초현대아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’서초현대아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,쌍용예가클래식아파트,쌍용예가클래식아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’쌍용예가클래식아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,삼호2차아파트,삼호2차아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (k {name:’삼호2차아파트’}) RETURN k.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,신반포2차아파트,신반포2차아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’신반포2차아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,삼풍아파트,삼풍아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’삼풍아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,르엘신반포파크애비뉴아파트,르엘신반포파크애비뉴아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’르엘신반포파크애비뉴아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,신반포4차아파트,신반포4차아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (k {name:’신반포4차아파트’}) RETURN k.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,엠브이아파트,엠브이아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (k {name:’엠브이아파트’}) RETURN k.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,서초대우아이빌아파트,서초대우아이빌아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’서초대우아이빌아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,신반포8차아파트,신반포8차아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (k {name:’신반포8차아파트’}) RETURN k.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,힐스테이트서초젠트리스아파트,힐스테이트서초젠트리스아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’힐스테이트서초젠트리스아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,현대ESA아파트,현대ESA아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’현대ESA아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,삼호3차아파트,삼호3차아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (k {name:’삼호3차아파트’}) RETURN k.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,래미안서초스위트아파트,래미안서초스위트아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’래미안서초스위트아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,신동아아파트,신동아아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (k {name:’신동아아파트’}) RETURN k.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,강변아파트,강변아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’강변아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,서초이오빌아파트,서초이오빌아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’서초이오빌아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,밀라텔쉐르빌(엠쉐르빌)아파트,밀라텔쉐르빌(엠쉐르빌)아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (k {name:’밀라텔쉐르빌(엠쉐르빌)아파트’}) RETURN k.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,한신로얄아파트,한신로얄아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’한신로얄아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,아크로리버파크아파트,아크로리버파크아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’아크로리버파크아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,신반포16차아파트,신반포16차아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’신반포16차아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,방배아크로리버아파트,방배아크로리버아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’방배아크로리버아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,신반포15차아파트,신반포15차아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’신반포15차아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,삼성서초가든스위트아파트,삼성서초가든스위트아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’삼성서초가든스위트아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,방배자이아파트,방배자이아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’방배자이아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,신반포궁전아파트,신반포궁전아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (k {name:’신반포궁전아파트’}) RETURN k.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,잠원중앙하이츠(B동)아파트,잠원중앙하이츠(B동)아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’잠원중앙하이츠(B동)아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,서초삼성래미안아파트,서초삼성래미안아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (k {name:’서초삼성래미안아파트’}) RETURN k.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,신반포27차아파트,신반포27차아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’신반포27차아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,방배브라운가아파트,방배브라운가아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (k {name:’방배브라운가아파트’}) RETURN k.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,삼호4차아파트,삼호4차아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (k {name:’삼호4차아파트’}) RETURN k.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,"임광1,2차아파트","임광1,2차아파트의 평균 소득은 얼마야?",MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,"MATCH (n {name:’임광1,2차아파트’}) RETURN n.average_income_year",1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,래미안서초유니빌아파트,래미안서초유니빌아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’래미안서초유니빌아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,신반포청구아파트,신반포청구아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’신반포청구아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,반포래미안아이파크아파트,반포래미안아이파크아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (k {name:’반포래미안아이파크아파트’}) RETURN k.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,삼호3차아파트,삼호3차아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (k {name:’삼호3차아파트’}) RETURN k.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,서초e-편한세상2차아파트,서초e-편한세상2차아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’서초e-편한세상2차아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,서초한빛삼성아파트,서초한빛삼성아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’서초한빛삼성아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,서초롯데캐슬리버티아파트,서초롯데캐슬리버티아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’서초롯데캐슬리버티아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,래미안서초유니빌아파트,래미안서초유니빌아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’래미안서초유니빌아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,한신타운아파트,한신타운아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’한신타운아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,신반포27차아파트,신반포27차아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’신반포27차아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,방배아크로리버아파트,방배아크로리버아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (k {name:’방배아크로리버아파트’}) RETURN k.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,신반포7차아파트,신반포7차아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (k {name:’신반포7차아파트’}) RETURN k.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,방배래미안타워아파트,방배래미안타워아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’방배래미안타워아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,래미안신반포팰리스아파트,래미안신반포팰리스아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’래미안신반포팰리스아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,서초푸르지오써밋아파트,서초푸르지오써밋아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (k {name:’서초푸르지오써밋아파트’}) RETURN k.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,신반포20차아파트,신반포20차아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’신반포20차아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,래미안신반포리오센트아파트,래미안신반포리오센트아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’래미안신반포리오센트아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,금호베스트빌아파트,금호베스트빌아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (k {name:’금호베스트빌아파트’}) RETURN k.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,방배아이파크아파트,방배아이파크아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (k {name:’방배아이파크아파트’}) RETURN k.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,방배롯데캐슬아르떼아파트,방배롯데캐슬아르떼아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’방배롯데캐슬아르떼아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,서초한신아파트,서초한신아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’서초한신아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,방배우성아파트,방배우성아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’방배우성아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,서초포레스타3단지아파트,서초포레스타3단지아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (k {name:’서초포레스타3단지아파트’}) RETURN k.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,잠원현대훼밀리아파트,잠원현대훼밀리아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’잠원현대훼밀리아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,반포푸르지오아파트,반포푸르지오아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (k {name:’반포푸르지오아파트’}) RETURN k.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,지웰홈스서초아파트,지웰홈스서초아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’지웰홈스서초아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,서초트라팰리스아파트,서초트라팰리스아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (k {name:’서초트라팰리스아파트’}) RETURN k.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,래미안신반포리오센트아파트,래미안신반포리오센트아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (k {name:’래미안신반포리오센트아파트’}) RETURN k.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,잠원한신그린아파트,잠원한신그린아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’잠원한신그린아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,현대성우아파트,현대성우아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’현대성우아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,강변아파트,강변아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’강변아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,방배현대홈타운3차아파트,방배현대홈타운3차아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’방배현대홈타운3차아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,서초포레스타2단지아파트,서초포레스타2단지아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’서초포레스타2단지아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,방배자이아파트,방배자이아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (k {name:’방배자이아파트’}) RETURN k.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,대우효령아파트,대우효령아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’대우효령아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,서초현대4차아파트,서초현대4차아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’서초현대4차아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,아크로리버파크아파트,아크로리버파크아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’아크로리버파크아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,반포리체아파트,반포리체아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (k {name:’반포리체아파트’}) RETURN k.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,서초현대4차아파트,서초현대4차아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (k {name:’서초현대4차아파트’}) RETURN k.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,서초푸르지오써밋아파트,서초푸르지오써밋아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (k {name:’서초푸르지오써밋아파트’}) RETURN k.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,방배e-편한세상3차아파트,방배e-편한세상3차아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’방배e-편한세상3차아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,신반포궁전아파트,신반포궁전아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’신반포궁전아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,서초호반써밋아파트,서초호반써밋아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (k {name:’서초호반써밋아파트’}) RETURN k.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,서초롯데캐슬리버티아파트,서초롯데캐슬리버티아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’서초롯데캐슬리버티아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,LH서초5단지아파트,LH서초5단지아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’LH서초5단지아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,서초e-편한세상2차아파트,서초e-편한세상2차아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’서초e-편한세상2차아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,엠브이아파트,엠브이아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (k {name:’엠브이아파트’}) RETURN k.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,서초한신리빙타워아파트,서초한신리빙타워아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (k {name:’서초한신리빙타워아파트’}) RETURN k.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,삼성쉐르빌II아파트,삼성쉐르빌II아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’삼성쉐르빌II아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,마제스타시티힐스테이트서리풀아파트,마제스타시티힐스테이트서리풀아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’마제스타시티힐스테이트서리풀아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,반포리체아파트,반포리체아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’반포리체아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,서초롯데캐슬리버티아파트,서초롯데캐슬리버티아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (k {name:’서초롯데캐슬리버티아파트’}) RETURN k.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,래미안서초유니빌아파트,래미안서초유니빌아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’래미안서초유니빌아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,우면한라아파트,우면한라아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’우면한라아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,서초한빛삼성아파트,서초한빛삼성아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’서초한빛삼성아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,래미안원베일리아파트,래미안원베일리아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’래미안원베일리아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,한라비발디스튜디오193(도시형)아파트,한라비발디스튜디오193(도시형)아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (k {name:’한라비발디스튜디오193(도시형)아파트’}) RETURN k.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,서초e-편한세상5차아파트,서초e-편한세상5차아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’서초e-편한세상5차아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,방배마에스트로아파트,방배마에스트로아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (k {name:’방배마에스트로아파트’}) RETURN k.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,신반포2차아파트,신반포2차아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (k {name:’신반포2차아파트’}) RETURN k.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,서초네이처힐3단지아파트,서초네이처힐3단지아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’서초네이처힐3단지아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,현대ESA2아파트,현대ESA2아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’현대ESA2아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,킴스빌리지아파트,킴스빌리지아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (k {name:’킴스빌리지아파트’}) RETURN k.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,서초센트럴아이파크아파트,서초센트럴아이파크아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’서초센트럴아이파크아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,강남역푸르지오시티(도시형)아파트,강남역푸르지오시티(도시형)아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (k {name:’강남역푸르지오시티(도시형)아파트’}) RETURN k.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,잠원대우아이빌아파트,잠원대우아이빌아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’잠원대우아이빌아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,서초현대4차아파트,서초현대4차아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’서초현대4차아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,신반포2차아파트,신반포2차아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (k {name:’신반포2차아파트’}) RETURN k.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,삼익아파트,삼익아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (k {name:’삼익아파트’}) RETURN k.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,서초포레스타5단지아파트,서초포레스타5단지아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’서초포레스타5단지아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,반포미도2차아파트,반포미도2차아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’반포미도2차아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,래미안신반포리오센트아파트,래미안신반포리오센트아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (k {name:’래미안신반포리오센트아파트’}) RETURN k.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,대림아파트,대림아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’대림아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,동원베네스트아파트,동원베네스트아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’동원베네스트아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,신반포4차아파트,신반포4차아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’신반포4차아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,아크로비스타아파트,아크로비스타아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’아크로비스타아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,한강아파트,한강아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’한강아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,밀라텔쉐르빌(엠쉐르빌)아파트,밀라텔쉐르빌(엠쉐르빌)아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (k {name:’밀라텔쉐르빌(엠쉐르빌)아파트’}) RETURN k.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,반포센트럴자이아파트,반포센트럴자이아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’반포센트럴자이아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,LH서초5단지아파트,LH서초5단지아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (k {name:’LH서초5단지아파트’}) RETURN k.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,래미안서초에스티지S아파트,래미안서초에스티지S아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’래미안서초에스티지S아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,서초대우디오빌프라임아파트,서초대우디오빌프라임아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (k {name:’서초대우디오빌프라임아파트’}) RETURN k.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,서초리시온아파트,서초리시온아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’서초리시온아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,아남아파트,아남아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’아남아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,서초네이처힐3단지아파트,서초네이처힐3단지아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’서초네이처힐3단지아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,방배e-편한세상1차아파트,방배e-편한세상1차아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’방배e-편한세상1차아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,엠브이아파트,엠브이아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’엠브이아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,서초자이아파트,서초자이아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’서초자이아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,서초쌍용플래티넘아파트,서초쌍용플래티넘아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’서초쌍용플래티넘아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,삼호4차아파트,삼호4차아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’삼호4차아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,서초포레스타3단지아파트,서초포레스타3단지아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (k {name:’서초포레스타3단지아파트’}) RETURN k.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,우면한라아파트,우면한라아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’우면한라아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,힐스테이트서초젠트리스아파트,힐스테이트서초젠트리스아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (k {name:’힐스테이트서초젠트리스아파트’}) RETURN k.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,현대ESA아파트,현대ESA아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’현대ESA아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,풍림아이원플러스아파트,풍림아이원플러스아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’풍림아이원플러스아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,잠원한신아파트,잠원한신아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’잠원한신아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,"임광1,2차아파트","임광1,2차아파트의 평균 소득은 얼마야?",MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,"MATCH (k {name:’임광1,2차아파트’}) RETURN k.average_income_year",1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,반포센트레빌아스테리움아파트,반포센트레빌아스테리움아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’반포센트레빌아스테리움아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,신반포자이아파트,신반포자이아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’신반포자이아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,신반포19차아파트,신반포19차아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’신반포19차아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,서초포레스타7단지아파트,서초포레스타7단지아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’서초포레스타7단지아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,현대ESA아파트,현대ESA아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (k {name:’현대ESA아파트’}) RETURN k.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,서초LH4단지아파트,서초LH4단지아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’서초LH4단지아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,신반포12차아파트,신반포12차아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’신반포12차아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,신반포자이아파트,신반포자이아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (k {name:’신반포자이아파트’}) RETURN k.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,롯데캐슬클래식아파트,롯데캐슬클래식아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’롯데캐슬클래식아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,DK밸리뷰서초(주)아파트,DK밸리뷰서초(주)아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (k {name:’DK밸리뷰서초(주)아파트’}) RETURN k.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,방배e-편한세상3차아파트,방배e-편한세상3차아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’방배e-편한세상3차아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,DK밸리뷰서초(주)아파트,DK밸리뷰서초(주)아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’DK밸리뷰서초(주)아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,강변아파트,강변아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’강변아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,삼성쉐르빌II아파트,삼성쉐르빌II아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (k {name:’삼성쉐르빌II아파트’}) RETURN k.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,방배아트자이아파트,방배아트자이아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’방배아트자이아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,래미안서초에스티지S아파트,래미안서초에스티지S아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (k {name:’래미안서초에스티지S아파트’}) RETURN k.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,서초삼성래미안아파트,서초삼성래미안아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’서초삼성래미안아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,신반포21차아파트,신반포21차아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’신반포21차아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,삼익아파트,삼익아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’삼익아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,강변아파트,강변아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (k {name:’강변아파트’}) RETURN k.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,삼호1차아파트,삼호1차아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’삼호1차아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,반포주공1단지아파트,반포주공1단지아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (k {name:’반포주공1단지아파트’}) RETURN k.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,반포미도2차아파트,반포미도2차아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’반포미도2차아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,방배e-편한세상1차아파트,방배e-편한세상1차아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’방배e-편한세상1차아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,신반포25차아파트,신반포25차아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’신반포25차아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,아크로리버파크아파트,아크로리버파크아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (k {name:’아크로리버파크아파트’}) RETURN k.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,래미안리더스원아파트,래미안리더스원아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’래미안리더스원아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,현대성우아파트,현대성우아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (k {name:’현대성우아파트’}) RETURN k.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,방배롯데캐슬아르떼아파트,방배롯데캐슬아르떼아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’방배롯데캐슬아르떼아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,삼환나띠르빌아파트,삼환나띠르빌아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’삼환나띠르빌아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,방배아이파크아파트,방배아이파크아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’방배아이파크아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,잠원중앙하이츠(B동)아파트,잠원중앙하이츠(B동)아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (k {name:’잠원중앙하이츠(B동)아파트’}) RETURN k.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,강남역푸르지오시티(도시형)아파트,강남역푸르지오시티(도시형)아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’강남역푸르지오시티(도시형)아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,쌍용예가클래식아파트,쌍용예가클래식아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (k {name:’쌍용예가클래식아파트’}) RETURN k.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,서초포레스타3단지아파트,서초포레스타3단지아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (k {name:’서초포레스타3단지아파트’}) RETURN k.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,방배브라운가아파트,방배브라운가아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (k {name:’방배브라운가아파트’}) RETURN k.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,서초아이파크아파트,서초아이파크아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (k {name:’서초아이파크아파트’}) RETURN k.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,서초이오빌아파트,서초이오빌아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’서초이오빌아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,서초e-편한세상5차아파트,서초e-편한세상5차아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (k {name:’서초e-편한세상5차아파트’}) RETURN k.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,방배래미안타워아파트,방배래미안타워아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’방배래미안타워아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,서초한신아파트,서초한신아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (k {name:’서초한신아파트’}) RETURN k.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,녹원한신아파트,녹원한신아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’녹원한신아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,서초삼성래미안아파트,서초삼성래미안아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (k {name:’서초삼성래미안아파트’}) RETURN k.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,래미안신반포리오센트아파트,래미안신반포리오센트아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (k {name:’래미안신반포리오센트아파트’}) RETURN k.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,방배현대홈타운1차아파트,방배현대홈타운1차아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’방배현대홈타운1차아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,르엘신반포파크애비뉴아파트,르엘신반포파크애비뉴아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’르엘신반포파크애비뉴아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,서초포레스타3단지아파트,서초포레스타3단지아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’서초포레스타3단지아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,동고아파트,동고아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (k {name:’동고아파트’}) RETURN k.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,방배서리풀e-편한세상아파트,방배서리풀e-편한세상아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’방배서리풀e-편한세상아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,임광3차아파트,임광3차아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’임광3차아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,한신서래아파트,한신서래아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’한신서래아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,지웰홈스서초아파트,지웰홈스서초아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’지웰홈스서초아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,서초자이아파트,서초자이아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (k {name:’서초자이아파트’}) RETURN k.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,반포힐스테이트아파트,반포힐스테이트아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’반포힐스테이트아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,서초e-편한세상5차아파트,서초e-편한세상5차아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’서초e-편한세상5차아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,서초현대4차아파트,서초현대4차아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’서초현대4차아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,삼익아파트,삼익아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (k {name:’삼익아파트’}) RETURN k.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,한강아파트,한강아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (k {name:’한강아파트’}) RETURN k.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,서초현대아파트,서초현대아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’서초현대아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,마제스타시티힐스테이트서리풀아파트,마제스타시티힐스테이트서리풀아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’마제스타시티힐스테이트서리풀아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,래미안신반포팰리스아파트,래미안신반포팰리스아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (k {name:’래미안신반포팰리스아파트’}) RETURN k.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,롯데캐슬헤론아파트,롯데캐슬헤론아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’롯데캐슬헤론아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,삼익아파트,삼익아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (k {name:’삼익아파트’}) RETURN k.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,강남원효성아파트,강남원효성아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’강남원효성아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,서초e-편한세상2차아파트,서초e-편한세상2차아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (k {name:’서초e-편한세상2차아파트’}) RETURN k.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,롯데캐슬주피터아파트,롯데캐슬주피터아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (k {name:’롯데캐슬주피터아파트’}) RETURN k.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,롯데캐슬클래식아파트,롯데캐슬클래식아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’롯데캐슬클래식아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,롯데캐슬헤론아파트,롯데캐슬헤론아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (k {name:’롯데캐슬헤론아파트’}) RETURN k.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,방배브라운가아파트,방배브라운가아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’방배브라운가아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,서초네이처힐6단지아파트,서초네이처힐6단지아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (k {name:’서초네이처힐6단지아파트’}) RETURN k.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,서초현대4차아파트,서초현대4차아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’서초현대4차아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,래미안서초에스티지아파트,래미안서초에스티지아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’래미안서초에스티지아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,더샵서초아파트,더샵서초아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’더샵서초아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,방배래미안타워아파트,방배래미안타워아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’방배래미안타워아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,삼성쉐르빌II아파트,삼성쉐르빌II아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (k {name:’삼성쉐르빌II아파트’}) RETURN k.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,방배e-편한세상3차아파트,방배e-편한세상3차아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’방배e-편한세상3차아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,힐스테이트서초젠트리스아파트,힐스테이트서초젠트리스아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’힐스테이트서초젠트리스아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,신반포18차(337동)아파트,신반포18차(337동)아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’신반포18차(337동)아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,양재우성KBS(113동)아파트,양재우성KBS(113동)아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’양재우성KBS(113동)아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,서초리시온아파트,서초리시온아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’서초리시온아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,서초호반써밋아파트,서초호반써밋아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’서초호반써밋아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,대우효령아파트,대우효령아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’대우효령아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,잠원훼미리아파트,잠원훼미리아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’잠원훼미리아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,대우효령아파트,대우효령아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’대우효령아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,신동아1차아파트,신동아1차아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (k {name:’신동아1차아파트’}) RETURN k.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,삼익아파트,삼익아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (k {name:’삼익아파트’}) RETURN k.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,아남아파트,아남아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’아남아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,신동아2차아파트,신동아2차아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’신동아2차아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,현대ESA2아파트,현대ESA2아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’현대ESA2아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,반포미도1차아파트,반포미도1차아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (k {name:’반포미도1차아파트’}) RETURN k.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,방배현대홈타운2차아파트,방배현대홈타운2차아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’방배현대홈타운2차아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,현대슈퍼빌아파트,현대슈퍼빌아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (k {name:’현대슈퍼빌아파트’}) RETURN k.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,롯데캐슬클래식아파트,롯데캐슬클래식아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (k {name:’롯데캐슬클래식아파트’}) RETURN k.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,마제스타시티힐스테이트서리풀아파트,마제스타시티힐스테이트서리풀아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (k {name:’마제스타시티힐스테이트서리풀아파트’}) RETURN k.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,현대ESA아파트,현대ESA아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (k {name:’현대ESA아파트’}) RETURN k.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,방배롯데캐슬아르떼아파트,방배롯데캐슬아르떼아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’방배롯데캐슬아르떼아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,방배아이파크아파트,방배아이파크아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’방배아이파크아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,방배현대홈타운3차아파트,방배현대홈타운3차아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’방배현대홈타운3차아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,롯데캐슬헤론아파트,롯데캐슬헤론아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’롯데캐슬헤론아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,신반포16차아파트,신반포16차아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’신반포16차아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,현대ESA아파트,현대ESA아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’현대ESA아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,"임광1,2차아파트","임광1,2차아파트의 평균 소득은 얼마야?",MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,"MATCH (n {name:’임광1,2차아파트’}) RETURN n.average_income_year",1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,신반포11차아파트,신반포11차아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’신반포11차아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,지웰홈스서초아파트,지웰홈스서초아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’지웰홈스서초아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,현대ESA아파트,현대ESA아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’현대ESA아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,방배브라운스톤아파트,방배브라운스톤아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (k {name:’방배브라운스톤아파트’}) RETURN k.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,녹원한신아파트,녹원한신아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’녹원한신아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,반포센트럴자이아파트,반포센트럴자이아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’반포센트럴자이아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,더샵반포리버파크(도시형)아파트,더샵반포리버파크(도시형)아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (k {name:’더샵반포리버파크(도시형)아파트’}) RETURN k.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,방배동부센트레빌아파트,방배동부센트레빌아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’방배동부센트레빌아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,신반포9차아파트,신반포9차아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’신반포9차아파트’}) RETURN n.average_income_year,1,0
1,[mask_1]의 평균 소득은 얼마야?,apt_name,방배그랑자이아파트,방배그랑자이아파트의 평균 소득은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].average_income_year,apt_name,MATCH (n {name:’방배그랑자이아파트’}) RETURN n.average_income_year,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,롯데캐슬주피터아파트,롯데캐슬주피터아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (k {name:’롯데캐슬주피터아파트’}) RETURN k.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,르엘신반포파크애비뉴아파트,르엘신반포파크애비뉴아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’르엘신반포파크애비뉴아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,반포미도1차아파트,반포미도1차아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’반포미도1차아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,신반포4차아파트,신반포4차아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’신반포4차아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,래미안원베일리아파트,래미안원베일리아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’래미안원베일리아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,방배우성아파트,방배우성아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (k {name:’방배우성아파트’}) RETURN k.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,방배우성아파트,방배우성아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (k {name:’방배우성아파트’}) RETURN k.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,방배서리풀e-편한세상아파트,방배서리풀e-편한세상아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’방배서리풀e-편한세상아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,래미안신반포리오센트아파트,래미안신반포리오센트아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’래미안신반포리오센트아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,반포래미안아이파크아파트,반포래미안아이파크아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (k {name:’반포래미안아이파크아파트’}) RETURN k.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,우성5차아파트,우성5차아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’우성5차아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,서초네이처힐1단지아파트,서초네이처힐1단지아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (k {name:’서초네이처힐1단지아파트’}) RETURN k.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,삼성서초가든스위트아파트,삼성서초가든스위트아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (k {name:’삼성서초가든스위트아파트’}) RETURN k.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,방배한신트리플아파트,방배한신트리플아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (k {name:’방배한신트리플아파트’}) RETURN k.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,반포한신타워아파트,반포한신타워아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’반포한신타워아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,신반포자이아파트,신반포자이아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (k {name:’신반포자이아파트’}) RETURN k.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,서초대우아이빌아파트,서초대우아이빌아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’서초대우아이빌아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,녹원한신아파트,녹원한신아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (k {name:’녹원한신아파트’}) RETURN k.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,방배서리풀e-편한세상아파트,방배서리풀e-편한세상아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (k {name:’방배서리풀e-편한세상아파트’}) RETURN k.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,서초대우아이빌아파트,서초대우아이빌아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’서초대우아이빌아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,서초대우아이빌아파트,서초대우아이빌아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’서초대우아이빌아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,블루힐하우스아파트,블루힐하우스아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (k {name:’블루힐하우스아파트’}) RETURN k.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,한신타운아파트,한신타운아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’한신타운아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,서초e-편한세상5차아파트,서초e-편한세상5차아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (k {name:’서초e-편한세상5차아파트’}) RETURN k.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,삼호4차아파트,삼호4차아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’삼호4차아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,방배현대홈타운1차아파트,방배현대홈타운1차아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’방배현대홈타운1차아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,잠원중앙하이츠(B동)아파트,잠원중앙하이츠(B동)아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’잠원중앙하이츠(B동)아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,방배현대홈타운2차아파트,방배현대홈타운2차아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (k {name:’방배현대홈타운2차아파트’}) RETURN k.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,강변아파트,강변아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (k {name:’강변아파트’}) RETURN k.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,서초네이처힐1단지아파트,서초네이처힐1단지아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (k {name:’서초네이처힐1단지아파트’}) RETURN k.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,삼호가든맨션5차아파트,삼호가든맨션5차아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (k {name:’삼호가든맨션5차아파트’}) RETURN k.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,신반포15차아파트,신반포15차아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’신반포15차아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,신반포18차(337동)아파트,신반포18차(337동)아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (k {name:’신반포18차(337동)아파트’}) RETURN k.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,신반포16차아파트,신반포16차아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’신반포16차아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,한라비발디스튜디오193(도시형)아파트,한라비발디스튜디오193(도시형)아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (k {name:’한라비발디스튜디오193(도시형)아파트’}) RETURN k.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,신반포19차아파트,신반포19차아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (k {name:’신반포19차아파트’}) RETURN k.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,서초네이처힐2단지아파트,서초네이처힐2단지아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (k {name:’서초네이처힐2단지아파트’}) RETURN k.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,서초한신리빙타워아파트,서초한신리빙타워아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (k {name:’서초한신리빙타워아파트’}) RETURN k.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,서초센트럴아이파크아파트,서초센트럴아이파크아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’서초센트럴아이파크아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,반포센트럴자이아파트,반포센트럴자이아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’반포센트럴자이아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,금호베스트빌아파트,금호베스트빌아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (k {name:’금호베스트빌아파트’}) RETURN k.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,서초롯데캐슬프레지던트아파트,서초롯데캐슬프레지던트아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (k {name:’서초롯데캐슬프레지던트아파트’}) RETURN k.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,반포센트레빌아스테리움아파트,반포센트레빌아스테리움아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’반포센트레빌아스테리움아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,동원베네스트아파트,동원베네스트아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’동원베네스트아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,쌍용예가클래식아파트,쌍용예가클래식아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (k {name:’쌍용예가클래식아파트’}) RETURN k.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,신반포16차아파트,신반포16차아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (k {name:’신반포16차아파트’}) RETURN k.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,서초이오빌아파트,서초이오빌아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’서초이오빌아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,신반포10차아파트,신반포10차아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’신반포10차아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,서초한신아파트,서초한신아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’서초한신아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,잠원현대훼밀리아파트,잠원현대훼밀리아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’잠원현대훼밀리아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,방배아크로타워아파트,방배아크로타워아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (k {name:’방배아크로타워아파트’}) RETURN k.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,잠원현대아파트,잠원현대아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’잠원현대아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,반포센트레빌아스테리움아파트,반포센트레빌아스테리움아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’반포센트레빌아스테리움아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,반포센트레빌아스테리움아파트,반포센트레빌아스테리움아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’반포센트레빌아스테리움아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,방배한신트리플아파트,방배한신트리플아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’방배한신트리플아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,방배브라운가아파트,방배브라운가아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’방배브라운가아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,방배동부센트레빌아파트,방배동부센트레빌아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’방배동부센트레빌아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,서초교대e편한세상아파트,서초교대e편한세상아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’서초교대e편한세상아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,헤센파크힐아파트,헤센파크힐아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’헤센파크힐아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,우면한라아파트,우면한라아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’우면한라아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,동아아파트,동아아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’동아아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,삼환나띠르빌아파트,삼환나띠르빌아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (k {name:’삼환나띠르빌아파트’}) RETURN k.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,서초네이처힐3단지아파트,서초네이처힐3단지아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’서초네이처힐3단지아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,롯데캐슬주피터아파트,롯데캐슬주피터아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’롯데캐슬주피터아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,서초아이파크아파트,서초아이파크아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’서초아이파크아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,방배래미안아트힐아파트,방배래미안아트힐아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’방배래미안아트힐아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,방배아크로리버아파트,방배아크로리버아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’방배아크로리버아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,신반포궁전아파트,신반포궁전아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’신반포궁전아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,서초LH4단지아파트,서초LH4단지아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’서초LH4단지아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,방배우성아파트,방배우성아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’방배우성아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,한라비발디스튜디오193(도시형)아파트,한라비발디스튜디오193(도시형)아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (k {name:’한라비발디스튜디오193(도시형)아파트’}) RETURN k.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,래미안신반포팰리스아파트,래미안신반포팰리스아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’래미안신반포팰리스아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,양재우성KBS(113동)아파트,양재우성KBS(113동)아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’양재우성KBS(113동)아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,방배현대홈타운1차아파트,방배현대홈타운1차아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’방배현대홈타운1차아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,서초교대e편한세상아파트,서초교대e편한세상아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’서초교대e편한세상아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,아크로리버뷰신반포아파트,아크로리버뷰신반포아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (k {name:’아크로리버뷰신반포아파트’}) RETURN k.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,신반포17차아파트,신반포17차아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (k {name:’신반포17차아파트’}) RETURN k.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,방배브라운스톤아파트,방배브라운스톤아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’방배브라운스톤아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,우성5차아파트,우성5차아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (k {name:’우성5차아파트’}) RETURN k.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,방배래미안아트힐아파트,방배래미안아트힐아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’방배래미안아트힐아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,서초힐스아파트,서초힐스아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’서초힐스아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,힐스테이트서초젠트리스아파트,힐스테이트서초젠트리스아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’힐스테이트서초젠트리스아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,한신서래아파트,한신서래아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (k {name:’한신서래아파트’}) RETURN k.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,삼호2차아파트,삼호2차아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’삼호2차아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,서초삼성래미안아파트,서초삼성래미안아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’서초삼성래미안아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,양재우성아파트,양재우성아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (k {name:’양재우성아파트’}) RETURN k.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,디에이치라클라스아파트,디에이치라클라스아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’디에이치라클라스아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,현대멤피스아파트,현대멤피스아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (k {name:’현대멤피스아파트’}) RETURN k.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,아남아파트,아남아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’아남아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,서초삼성래미안아파트,서초삼성래미안아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (k {name:’서초삼성래미안아파트’}) RETURN k.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,양재우성아파트,양재우성아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’양재우성아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,아남아파트,아남아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’아남아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,삼익아파트,삼익아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’삼익아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,서초센트럴아이파크아파트,서초센트럴아이파크아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’서초센트럴아이파크아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,신반포10차아파트,신반포10차아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’신반포10차아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,서초푸르지오써밋아파트,서초푸르지오써밋아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’서초푸르지오써밋아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,한신로얄아파트,한신로얄아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (k {name:’한신로얄아파트’}) RETURN k.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,강남역푸르지오시티(도시형)아파트,강남역푸르지오시티(도시형)아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’강남역푸르지오시티(도시형)아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,블루힐하우스아파트,블루힐하우스아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’블루힐하우스아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,신반포17차아파트,신반포17차아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’신반포17차아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,현대슈퍼빌아파트,현대슈퍼빌아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (k {name:’현대슈퍼빌아파트’}) RETURN k.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,현대성우아파트,현대성우아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’현대성우아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,한신서래아파트,한신서래아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’한신서래아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,방배서리풀e-편한세상아파트,방배서리풀e-편한세상아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (k {name:’방배서리풀e-편한세상아파트’}) RETURN k.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,방배아크로리버아파트,방배아크로리버아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (k {name:’방배아크로리버아파트’}) RETURN k.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,한신서래아파트,한신서래아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’한신서래아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,방배현대홈타운1차아파트,방배현대홈타운1차아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (k {name:’방배현대홈타운1차아파트’}) RETURN k.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,녹원한신아파트,녹원한신아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’녹원한신아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,서초네이처힐2단지아파트,서초네이처힐2단지아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’서초네이처힐2단지아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,신동아1차아파트,신동아1차아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’신동아1차아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,신화아파트,신화아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’신화아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,"임광1,2차아파트","임광1,2차아파트의 준공년도는 언제야?",MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,"MATCH (k {name:’임광1,2차아파트’}) RETURN k.completion",1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,래미안서초에스티지아파트,래미안서초에스티지아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’래미안서초에스티지아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,반포한신타워아파트,반포한신타워아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’반포한신타워아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,우성5차아파트,우성5차아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’우성5차아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,서초교대e편한세상아파트,서초교대e편한세상아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (k {name:’서초교대e편한세상아파트’}) RETURN k.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,녹원한신아파트,녹원한신아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’녹원한신아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,서초포레스타2단지아파트,서초포레스타2단지아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’서초포레스타2단지아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,서초포레스타3단지아파트,서초포레스타3단지아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’서초포레스타3단지아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,양재우성KBS(113동)아파트,양재우성KBS(113동)아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (k {name:’양재우성KBS(113동)아파트’}) RETURN k.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,잠원중앙하이츠(B동)아파트,잠원중앙하이츠(B동)아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’잠원중앙하이츠(B동)아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,녹원한신아파트,녹원한신아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’녹원한신아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,반포래미안아이파크아파트,반포래미안아이파크아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’반포래미안아이파크아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,서초그랑자이아파트,서초그랑자이아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’서초그랑자이아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,서초롯데캐슬프레지던트아파트,서초롯데캐슬프레지던트아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (k {name:’서초롯데캐슬프레지던트아파트’}) RETURN k.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,반포힐스테이트아파트,반포힐스테이트아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (k {name:’반포힐스테이트아파트’}) RETURN k.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,반포힐스테이트아파트,반포힐스테이트아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’반포힐스테이트아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,반포센트럴자이아파트,반포센트럴자이아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’반포센트럴자이아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,힐스테이트서초젠트리스아파트,힐스테이트서초젠트리스아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’힐스테이트서초젠트리스아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,서초푸르지오써밋아파트,서초푸르지오써밋아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’서초푸르지오써밋아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,엠브이아파트,엠브이아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’엠브이아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,서초센트럴아이파크아파트,서초센트럴아이파크아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’서초센트럴아이파크아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,신반포4차아파트,신반포4차아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’신반포4차아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,서초LH4단지아파트,서초LH4단지아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’서초LH4단지아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,서초네이처힐4단지아파트,서초네이처힐4단지아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’서초네이처힐4단지아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,서초롯데캐슬리버티아파트,서초롯데캐슬리버티아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’서초롯데캐슬리버티아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,녹원한신아파트,녹원한신아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (k {name:’녹원한신아파트’}) RETURN k.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,삼호4차아파트,삼호4차아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (k {name:’삼호4차아파트’}) RETURN k.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,서초푸르지오써밋아파트,서초푸르지오써밋아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’서초푸르지오써밋아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,신동아1차아파트,신동아1차아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’신동아1차아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,서초한빛삼성아파트,서초한빛삼성아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (k {name:’서초한빛삼성아파트’}) RETURN k.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,신반포궁전아파트,신반포궁전아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’신반포궁전아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,반포미도2차아파트,반포미도2차아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’반포미도2차아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,서초리시온아파트,서초리시온아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (k {name:’서초리시온아파트’}) RETURN k.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,서초그랑자이아파트,서초그랑자이아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’서초그랑자이아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,서초e-편한세상5차아파트,서초e-편한세상5차아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’서초e-편한세상5차아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,서초대우아이빌아파트,서초대우아이빌아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (k {name:’서초대우아이빌아파트’}) RETURN k.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,동원베네스트아파트,동원베네스트아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’동원베네스트아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,방배마에스트로아파트,방배마에스트로아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’방배마에스트로아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,현대성우아파트,현대성우아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’현대성우아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,서초그랑자이아파트,서초그랑자이아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’서초그랑자이아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,반포미도2차아파트,반포미도2차아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’반포미도2차아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,신동아1차아파트,신동아1차아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’신동아1차아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,르엘신반포아파트,르엘신반포아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (k {name:’르엘신반포아파트’}) RETURN k.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,반포르엘아파트,반포르엘아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (k {name:’반포르엘아파트’}) RETURN k.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,방배동부센트레빌아파트,방배동부센트레빌아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (k {name:’방배동부센트레빌아파트’}) RETURN k.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,방배아크로리버아파트,방배아크로리버아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’방배아크로리버아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,현대멤피스아파트,현대멤피스아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’현대멤피스아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,동원베네스트아파트,동원베네스트아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (k {name:’동원베네스트아파트’}) RETURN k.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,신영체르니아파트,신영체르니아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’신영체르니아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,잠원현대아파트,잠원현대아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (k {name:’잠원현대아파트’}) RETURN k.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,서초네이처힐3단지아파트,서초네이처힐3단지아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’서초네이처힐3단지아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,서초네이처힐2단지아파트,서초네이처힐2단지아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’서초네이처힐2단지아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,서초한빛삼성아파트,서초한빛삼성아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’서초한빛삼성아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,서초e-편한세상2차아파트,서초e-편한세상2차아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’서초e-편한세상2차아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,한강아파트,한강아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’한강아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,반포힐스테이트아파트,반포힐스테이트아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’반포힐스테이트아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,현대동궁아파트,현대동궁아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’현대동궁아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,신반포17차아파트,신반포17차아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’신반포17차아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,한강아파트,한강아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’한강아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,삼호가든맨션5차아파트,삼호가든맨션5차아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’삼호가든맨션5차아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,서초네이처힐3단지아파트,서초네이처힐3단지아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’서초네이처힐3단지아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,서초교대e편한세상아파트,서초교대e편한세상아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (k {name:’서초교대e편한세상아파트’}) RETURN k.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,서초교대e편한세상아파트,서초교대e편한세상아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’서초교대e편한세상아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,방배자이아파트,방배자이아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’방배자이아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,서초현대4차아파트,서초현대4차아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’서초현대4차아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,반포센트럴자이아파트,반포센트럴자이아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’반포센트럴자이아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,방배마에스트로아파트,방배마에스트로아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’방배마에스트로아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,서초네이처힐4단지아파트,서초네이처힐4단지아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (k {name:’서초네이처힐4단지아파트’}) RETURN k.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,풍림아이원플러스아파트,풍림아이원플러스아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’풍림아이원플러스아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,방배대우디오빌아파트,방배대우디오빌아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’방배대우디오빌아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,래미안서초유니빌아파트,래미안서초유니빌아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’래미안서초유니빌아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,서초리시온아파트,서초리시온아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’서초리시온아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,방배우성아파트,방배우성아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’방배우성아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,반포주공1단지아파트,반포주공1단지아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (k {name:’반포주공1단지아파트’}) RETURN k.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,방배아이파크아파트,방배아이파크아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’방배아이파크아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,DK밸리뷰서초(주)아파트,DK밸리뷰서초(주)아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (k {name:’DK밸리뷰서초(주)아파트’}) RETURN k.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,현대동궁아파트,현대동궁아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’현대동궁아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,신반포21차아파트,신반포21차아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’신반포21차아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,서초네이처힐1단지아파트,서초네이처힐1단지아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’서초네이처힐1단지아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,신화아파트,신화아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (k {name:’신화아파트’}) RETURN k.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,서초네이처힐3단지아파트,서초네이처힐3단지아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’서초네이처힐3단지아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,서초한빛삼성아파트,서초한빛삼성아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’서초한빛삼성아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,서초네이처힐7단지아파트,서초네이처힐7단지아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (k {name:’서초네이처힐7단지아파트’}) RETURN k.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,반포래미안아이파크아파트,반포래미안아이파크아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’반포래미안아이파크아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,신반포17차아파트,신반포17차아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (k {name:’신반포17차아파트’}) RETURN k.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,신반포12차아파트,신반포12차아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’신반포12차아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,방배현대홈타운3차아파트,방배현대홈타운3차아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’방배현대홈타운3차아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,임광3차아파트,임광3차아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (k {name:’임광3차아파트’}) RETURN k.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,방배한신트리플아파트,방배한신트리플아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’방배한신트리플아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,코오롱아파트,코오롱아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’코오롱아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,강남역푸르지오시티(도시형)아파트,강남역푸르지오시티(도시형)아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (k {name:’강남역푸르지오시티(도시형)아파트’}) RETURN k.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,밀라텔쉐르빌(엠쉐르빌)아파트,밀라텔쉐르빌(엠쉐르빌)아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (k {name:’밀라텔쉐르빌(엠쉐르빌)아파트’}) RETURN k.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,쌍용예가클래식아파트,쌍용예가클래식아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’쌍용예가클래식아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,방배아이파크아파트,방배아이파크아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’방배아이파크아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,한신서래아파트,한신서래아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’한신서래아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,삼익아파트,삼익아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (k {name:’삼익아파트’}) RETURN k.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,잠원대우아이빌아파트,잠원대우아이빌아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (k {name:’잠원대우아이빌아파트’}) RETURN k.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,우성5차아파트,우성5차아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’우성5차아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,르엘신반포파크애비뉴아파트,르엘신반포파크애비뉴아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (k {name:’르엘신반포파크애비뉴아파트’}) RETURN k.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,방배현대홈타운2차아파트,방배현대홈타운2차아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’방배현대홈타운2차아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,현대멤피스아파트,현대멤피스아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’현대멤피스아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,서초네이처힐6단지아파트,서초네이처힐6단지아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (k {name:’서초네이처힐6단지아파트’}) RETURN k.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,삼호3차아파트,삼호3차아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’삼호3차아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,래미안서초에스티지아파트,래미안서초에스티지아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (k {name:’래미안서초에스티지아파트’}) RETURN k.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,삼익아파트,삼익아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’삼익아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,서초아이파크아파트,서초아이파크아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’서초아이파크아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,현대ESA2아파트,현대ESA2아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (k {name:’현대ESA2아파트’}) RETURN k.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,반포래미안아이파크아파트,반포래미안아이파크아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (k {name:’반포래미안아이파크아파트’}) RETURN k.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,잠원한신그린아파트,잠원한신그린아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’잠원한신그린아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,현대성우아파트,현대성우아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’현대성우아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,신반포27차아파트,신반포27차아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’신반포27차아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,강남역푸르지오시티(도시형)아파트,강남역푸르지오시티(도시형)아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’강남역푸르지오시티(도시형)아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,한강아파트,한강아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (k {name:’한강아파트’}) RETURN k.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,양재우성아파트,양재우성아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’양재우성아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,서초한신리빙타워아파트,서초한신리빙타워아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’서초한신리빙타워아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,방배롯데캐슬아르떼아파트,방배롯데캐슬아르떼아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’방배롯데캐슬아르떼아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,삼성서초가든스위트아파트,삼성서초가든스위트아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’삼성서초가든스위트아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,킴스빌리지아파트,킴스빌리지아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (k {name:’킴스빌리지아파트’}) RETURN k.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,현대아파트,현대아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (k {name:’현대아파트’}) RETURN k.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,방배대우디오빌아파트,방배대우디오빌아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’방배대우디오빌아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,래미안서초유니빌아파트,래미안서초유니빌아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’래미안서초유니빌아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,방배아이파크아파트,방배아이파크아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (k {name:’방배아이파크아파트’}) RETURN k.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,방배대우디오빌아파트,방배대우디오빌아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’방배대우디오빌아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,신화아파트,신화아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’신화아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,우성5차아파트,우성5차아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’우성5차아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,신반포25차아파트,신반포25차아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (k {name:’신반포25차아파트’}) RETURN k.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,서초네이처힐4단지아파트,서초네이처힐4단지아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (k {name:’서초네이처힐4단지아파트’}) RETURN k.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,삼익아파트,삼익아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’삼익아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,신반포2차아파트,신반포2차아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’신반포2차아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,헤센파크힐아파트,헤센파크힐아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (k {name:’헤센파크힐아파트’}) RETURN k.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,반포리체아파트,반포리체아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’반포리체아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,동아아파트,동아아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’동아아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,방배한신트리플아파트,방배한신트리플아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’방배한신트리플아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,롯데캐슬갤럭시2차아파트,롯데캐슬갤럭시2차아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (k {name:’롯데캐슬갤럭시2차아파트’}) RETURN k.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,현대동궁아파트,현대동궁아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’현대동궁아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,반포힐스테이트아파트,반포힐스테이트아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’반포힐스테이트아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,킴스빌리지아파트,킴스빌리지아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’킴스빌리지아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,방배롯데캐슬아르떼아파트,방배롯데캐슬아르떼아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (k {name:’방배롯데캐슬아르떼아파트’}) RETURN k.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,동원베네스트아파트,동원베네스트아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’동원베네스트아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,서초LH4단지아파트,서초LH4단지아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (k {name:’서초LH4단지아파트’}) RETURN k.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,삼성서초가든스위트아파트,삼성서초가든스위트아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’삼성서초가든스위트아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,래미안서초에스티지아파트,래미안서초에스티지아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’래미안서초에스티지아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,한신로얄아파트,한신로얄아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’한신로얄아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,방배현대홈타운3차아파트,방배현대홈타운3차아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’방배현대홈타운3차아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,대우효령아파트,대우효령아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (k {name:’대우효령아파트’}) RETURN k.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,반포르엘아파트,반포르엘아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (k {name:’반포르엘아파트’}) RETURN k.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,방배한신트리플아파트,방배한신트리플아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (k {name:’방배한신트리플아파트’}) RETURN k.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,방배e-편한세상1차아파트,방배e-편한세상1차아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’방배e-편한세상1차아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,LH서초5단지아파트,LH서초5단지아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’LH서초5단지아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,신반포청구아파트,신반포청구아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’신반포청구아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,서초LH4단지아파트,서초LH4단지아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’서초LH4단지아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,신화아파트,신화아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’신화아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,신반포19차아파트,신반포19차아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (k {name:’신반포19차아파트’}) RETURN k.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,엠브이아파트,엠브이아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’엠브이아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,신반포12차아파트,신반포12차아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (k {name:’신반포12차아파트’}) RETURN k.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,신영체르니아파트,신영체르니아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’신영체르니아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,서초현대아파트,서초현대아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’서초현대아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,신반포7차아파트,신반포7차아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (k {name:’신반포7차아파트’}) RETURN k.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,신반포15차아파트,신반포15차아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’신반포15차아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,방배현대홈타운2차아파트,방배현대홈타운2차아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’방배현대홈타운2차아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,금호베스트빌아파트,금호베스트빌아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (k {name:’금호베스트빌아파트’}) RETURN k.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,한신타운아파트,한신타운아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’한신타운아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,신반포9차아파트,신반포9차아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (k {name:’신반포9차아파트’}) RETURN k.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,반포센트럴자이아파트,반포센트럴자이아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’반포센트럴자이아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,아크로비스타아파트,아크로비스타아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (k {name:’아크로비스타아파트’}) RETURN k.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,신반포4차아파트,신반포4차아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’신반포4차아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,한라비발디스튜디오193(도시형)아파트,한라비발디스튜디오193(도시형)아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’한라비발디스튜디오193(도시형)아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,서초더샵포레아파트,서초더샵포레아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’서초더샵포레아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,서초포레스타3단지아파트,서초포레스타3단지아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’서초포레스타3단지아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,서초한신아파트,서초한신아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’서초한신아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,신반포4차아파트,신반포4차아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’신반포4차아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,방배아트자이아파트,방배아트자이아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’방배아트자이아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,현대성우아파트,현대성우아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’현대성우아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,반포한신타워아파트,반포한신타워아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (k {name:’반포한신타워아파트’}) RETURN k.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,래미안신반포리오센트아파트,래미안신반포리오센트아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’래미안신반포리오센트아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,서초포레스타7단지아파트,서초포레스타7단지아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’서초포레스타7단지아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,반포르엘아파트,반포르엘아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’반포르엘아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,르엘신반포아파트,르엘신반포아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (k {name:’르엘신반포아파트’}) RETURN k.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,롯데캐슬클래식아파트,롯데캐슬클래식아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’롯데캐슬클래식아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,동고아파트,동고아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’동고아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,방배e-편한세상1차아파트,방배e-편한세상1차아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’방배e-편한세상1차아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,서초한신리빙타워아파트,서초한신리빙타워아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’서초한신리빙타워아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,우면한라아파트,우면한라아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’우면한라아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,서초e-편한세상2차아파트,서초e-편한세상2차아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (k {name:’서초e-편한세상2차아파트’}) RETURN k.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,반포힐스테이트아파트,반포힐스테이트아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (k {name:’반포힐스테이트아파트’}) RETURN k.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,신반포20차아파트,신반포20차아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’신반포20차아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,잠원대우아이빌아파트,잠원대우아이빌아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (k {name:’잠원대우아이빌아파트’}) RETURN k.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,서초한신리빙타워아파트,서초한신리빙타워아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’서초한신리빙타워아파트’}) RETURN n.completion,1,0
2,[mask_1]의 준공년도는 언제야?,apt_name,서초e-편한세상2차아파트,서초e-편한세상2차아파트의 준공년도는 언제야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].completion,apt_name,MATCH (n {name:’서초e-편한세상2차아파트’}) RETURN n.completion,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,방배한신트리플아파트,방배한신트리플아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (k {name:’방배한신트리플아파트’}) RETURN k.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,한신로얄아파트,한신로얄아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’한신로얄아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,방배e-편한세상3차아파트,방배e-편한세상3차아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’방배e-편한세상3차아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,서초e-편한세상1차아파트,서초e-편한세상1차아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’서초e-편한세상1차아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,디에이치라클라스아파트,디에이치라클라스아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’디에이치라클라스아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,임광3차아파트,임광3차아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’임광3차아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,방배현대홈타운2차아파트,방배현대홈타운2차아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’방배현대홈타운2차아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,롯데캐슬주피터아파트,롯데캐슬주피터아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’롯데캐슬주피터아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,현대성우아파트,현대성우아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’현대성우아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,서초푸르지오써밋아파트,서초푸르지오써밋아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (k {name:’서초푸르지오써밋아파트’}) RETURN k.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,서초대우디오빌프라임아파트,서초대우디오빌프라임아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’서초대우디오빌프라임아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,신반포10차아파트,신반포10차아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (k {name:’신반포10차아파트’}) RETURN k.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,반포써밋아파트,반포써밋아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’반포써밋아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,동아아파트,동아아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (k {name:’동아아파트’}) RETURN k.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,현대ESA아파트,현대ESA아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (k {name:’현대ESA아파트’}) RETURN k.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,서초한빛삼성아파트,서초한빛삼성아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (k {name:’서초한빛삼성아파트’}) RETURN k.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,헤센파크힐아파트,헤센파크힐아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (k {name:’헤센파크힐아파트’}) RETURN k.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,아크로비스타아파트,아크로비스타아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’아크로비스타아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,서초자이아파트,서초자이아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’서초자이아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,잠원현대아파트,잠원현대아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’잠원현대아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,한라비발디스튜디오193(도시형)아파트,한라비발디스튜디오193(도시형)아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’한라비발디스튜디오193(도시형)아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,래미안서초에스티지아파트,래미안서초에스티지아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’래미안서초에스티지아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,신동아2차아파트,신동아2차아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’신동아2차아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,잠원현대훼밀리아파트,잠원현대훼밀리아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’잠원현대훼밀리아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,현대아파트,현대아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’현대아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,반포래미안아이파크아파트,반포래미안아이파크아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (k {name:’반포래미안아이파크아파트’}) RETURN k.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,래미안리더스원아파트,래미안리더스원아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’래미안리더스원아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,서초e-편한세상5차아파트,서초e-편한세상5차아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (k {name:’서초e-편한세상5차아파트’}) RETURN k.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,서초네이처힐4단지아파트,서초네이처힐4단지아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (k {name:’서초네이처힐4단지아파트’}) RETURN k.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,대림아파트,대림아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (k {name:’대림아파트’}) RETURN k.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,신반포12차아파트,신반포12차아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (k {name:’신반포12차아파트’}) RETURN k.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,방배자이아파트,방배자이아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’방배자이아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,롯데캐슬주피터아파트,롯데캐슬주피터아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (k {name:’롯데캐슬주피터아파트’}) RETURN k.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,방배아트자이아파트,방배아트자이아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’방배아트자이아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,신동아1차아파트,신동아1차아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (k {name:’신동아1차아파트’}) RETURN k.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,삼성쉐르빌II아파트,삼성쉐르빌II아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (k {name:’삼성쉐르빌II아파트’}) RETURN k.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,서초포레스타6단지아파트,서초포레스타6단지아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’서초포레스타6단지아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,잠원현대훼밀리아파트,잠원현대훼밀리아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’잠원현대훼밀리아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,방배마에스트로아파트,방배마에스트로아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’방배마에스트로아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,서초교대e편한세상아파트,서초교대e편한세상아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’서초교대e편한세상아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,서초센트럴아이파크아파트,서초센트럴아이파크아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (k {name:’서초센트럴아이파크아파트’}) RETURN k.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,방배그랑자이아파트,방배그랑자이아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’방배그랑자이아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,래미안서초에스티지아파트,래미안서초에스티지아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’래미안서초에스티지아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,신영체르니아파트,신영체르니아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (k {name:’신영체르니아파트’}) RETURN k.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,방배우성아파트,방배우성아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’방배우성아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,삼호4차아파트,삼호4차아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (k {name:’삼호4차아파트’}) RETURN k.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,반포미도1차아파트,반포미도1차아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’반포미도1차아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,래미안서초유니빌아파트,래미안서초유니빌아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (k {name:’래미안서초유니빌아파트’}) RETURN k.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,서초한빛삼성아파트,서초한빛삼성아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’서초한빛삼성아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,강변아파트,강변아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (k {name:’강변아파트’}) RETURN k.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,방배아크로타워아파트,방배아크로타워아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (k {name:’방배아크로타워아파트’}) RETURN k.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,한라비발디스튜디오193(도시형)아파트,한라비발디스튜디오193(도시형)아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’한라비발디스튜디오193(도시형)아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,신반포25차아파트,신반포25차아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’신반포25차아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,반포주공1단지아파트,반포주공1단지아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’반포주공1단지아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,금호베스트빌아파트,금호베스트빌아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (k {name:’금호베스트빌아파트’}) RETURN k.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,신반포2차아파트,신반포2차아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’신반포2차아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,LH서초5단지아파트,LH서초5단지아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’LH서초5단지아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,서초롯데캐슬프레지던트아파트,서초롯데캐슬프레지던트아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (k {name:’서초롯데캐슬프레지던트아파트’}) RETURN k.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,반포힐스테이트아파트,반포힐스테이트아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (k {name:’반포힐스테이트아파트’}) RETURN k.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,삼호1차아파트,삼호1차아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (k {name:’삼호1차아파트’}) RETURN k.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,강남원효성아파트,강남원효성아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (k {name:’강남원효성아파트’}) RETURN k.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,서초푸르지오써밋아파트,서초푸르지오써밋아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’서초푸르지오써밋아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,반포리체아파트,반포리체아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’반포리체아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,잠원대우아이빌아파트,잠원대우아이빌아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’잠원대우아이빌아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,잠원월드메르디앙아파트,잠원월드메르디앙아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’잠원월드메르디앙아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,강남원효성아파트,강남원효성아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’강남원효성아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,신동아2차아파트,신동아2차아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (k {name:’신동아2차아파트’}) RETURN k.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,롯데캐슬갤럭시2차아파트,롯데캐슬갤럭시2차아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’롯데캐슬갤럭시2차아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,"임광1,2차아파트","임광1,2차아파트의 가구당 주차대수는 몇 대야?",MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,"MATCH (k {name:’임광1,2차아파트’}) RETURN k.parking_per_house",1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,양재우성KBS(113동)아파트,양재우성KBS(113동)아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’양재우성KBS(113동)아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,신영체르니아파트,신영체르니아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’신영체르니아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,신반포9차아파트,신반포9차아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (k {name:’신반포9차아파트’}) RETURN k.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,롯데캐슬주피터아파트,롯데캐슬주피터아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’롯데캐슬주피터아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,서초자이아파트,서초자이아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (k {name:’서초자이아파트’}) RETURN k.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,더샵반포리버파크(도시형)아파트,더샵반포리버파크(도시형)아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’더샵반포리버파크(도시형)아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,신반포자이아파트,신반포자이아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’신반포자이아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,신영체르니아파트,신영체르니아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’신영체르니아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,우성5차아파트,우성5차아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’우성5차아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,서초현대아파트,서초현대아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (k {name:’서초현대아파트’}) RETURN k.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,서초현대아파트,서초현대아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’서초현대아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,신반포15차아파트,신반포15차아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (k {name:’신반포15차아파트’}) RETURN k.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,서초푸르지오써밋아파트,서초푸르지오써밋아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’서초푸르지오써밋아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,쌍용예가클래식아파트,쌍용예가클래식아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’쌍용예가클래식아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,"임광1,2차아파트","임광1,2차아파트의 가구당 주차대수는 몇 대야?",MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,"MATCH (n {name:’임광1,2차아파트’}) RETURN n.parking_per_house",1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,래미안서초스위트아파트,래미안서초스위트아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’래미안서초스위트아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,코오롱아파트,코오롱아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’코오롱아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,풍림아이원플러스아파트,풍림아이원플러스아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (k {name:’풍림아이원플러스아파트’}) RETURN k.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,방배아크로리버아파트,방배아크로리버아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’방배아크로리버아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,방배아이파크아파트,방배아이파크아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’방배아이파크아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,신반포11차아파트,신반포11차아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’신반포11차아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,삼풍아파트,삼풍아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (k {name:’삼풍아파트’}) RETURN k.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,동원베네스트아파트,동원베네스트아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (k {name:’동원베네스트아파트’}) RETURN k.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,마제스타시티힐스테이트서리풀아파트,마제스타시티힐스테이트서리풀아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’마제스타시티힐스테이트서리풀아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,서초푸르지오써밋아파트,서초푸르지오써밋아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’서초푸르지오써밋아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,래미안신반포리오센트아파트,래미안신반포리오센트아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’래미안신반포리오센트아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,서초리시온아파트,서초리시온아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’서초리시온아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,현대성우아파트,현대성우아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’현대성우아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,우성5차아파트,우성5차아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (k {name:’우성5차아파트’}) RETURN k.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,지웰홈스서초아파트,지웰홈스서초아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’지웰홈스서초아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,삼호2차아파트,삼호2차아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’삼호2차아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,서초포레스타2단지아파트,서초포레스타2단지아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’서초포레스타2단지아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,방배현대홈타운2차아파트,방배현대홈타운2차아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (k {name:’방배현대홈타운2차아파트’}) RETURN k.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,서초대우아이빌아파트,서초대우아이빌아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’서초대우아이빌아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,양재우성KBS(113동)아파트,양재우성KBS(113동)아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (k {name:’양재우성KBS(113동)아파트’}) RETURN k.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,서초래미안아파트,서초래미안아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’서초래미안아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,강변아파트,강변아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’강변아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,디에이치라클라스아파트,디에이치라클라스아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’디에이치라클라스아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,방배대우디오빌아파트,방배대우디오빌아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’방배대우디오빌아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,서초네이처힐1단지아파트,서초네이처힐1단지아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’서초네이처힐1단지아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,잠원대우아이빌아파트,잠원대우아이빌아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (k {name:’잠원대우아이빌아파트’}) RETURN k.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,서초래미안아파트,서초래미안아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’서초래미안아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,신반포2차아파트,신반포2차아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’신반포2차아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,한신로얄아파트,한신로얄아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’한신로얄아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,방배현대홈타운2차아파트,방배현대홈타운2차아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (k {name:’방배현대홈타운2차아파트’}) RETURN k.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,삼호가든맨션5차아파트,삼호가든맨션5차아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (k {name:’삼호가든맨션5차아파트’}) RETURN k.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,아크로리버뷰신반포아파트,아크로리버뷰신반포아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (k {name:’아크로리버뷰신반포아파트’}) RETURN k.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,서초롯데캐슬프레지던트아파트,서초롯데캐슬프레지던트아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (k {name:’서초롯데캐슬프레지던트아파트’}) RETURN k.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,신반포25차아파트,신반포25차아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (k {name:’신반포25차아파트’}) RETURN k.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,래미안신반포팰리스아파트,래미안신반포팰리스아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’래미안신반포팰리스아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,방배아이파크아파트,방배아이파크아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (k {name:’방배아이파크아파트’}) RETURN k.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,방배아크로리버아파트,방배아크로리버아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’방배아크로리버아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,래미안리더스원아파트,래미안리더스원아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’래미안리더스원아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,블루힐하우스아파트,블루힐하우스아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (k {name:’블루힐하우스아파트’}) RETURN k.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,우면한라아파트,우면한라아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (k {name:’우면한라아파트’}) RETURN k.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,아크로리버뷰신반포아파트,아크로리버뷰신반포아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’아크로리버뷰신반포아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,신반포16차아파트,신반포16차아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’신반포16차아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,쌍용예가클래식아파트,쌍용예가클래식아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’쌍용예가클래식아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,신반포18차(337동)아파트,신반포18차(337동)아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (k {name:’신반포18차(337동)아파트’}) RETURN k.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,신반포2차아파트,신반포2차아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (k {name:’신반포2차아파트’}) RETURN k.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,삼익아파트,삼익아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (k {name:’삼익아파트’}) RETURN k.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,신반포궁전아파트,신반포궁전아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (k {name:’신반포궁전아파트’}) RETURN k.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,서초더샵포레아파트,서초더샵포레아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’서초더샵포레아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,서초포레스타6단지아파트,서초포레스타6단지아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’서초포레스타6단지아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,서초더샵포레아파트,서초더샵포레아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’서초더샵포레아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,방배브라운스톤아파트,방배브라운스톤아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’방배브라운스톤아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,서초그랑자이아파트,서초그랑자이아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (k {name:’서초그랑자이아파트’}) RETURN k.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,서초롯데캐슬프레지던트아파트,서초롯데캐슬프레지던트아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’서초롯데캐슬프레지던트아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,방배아크로리버아파트,방배아크로리버아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’방배아크로리버아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,신반포7차아파트,신반포7차아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’신반포7차아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,진흥아파트,진흥아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’진흥아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,삼호2차아파트,삼호2차아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’삼호2차아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,잠원한신아파트,잠원한신아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (k {name:’잠원한신아파트’}) RETURN k.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,방배e-편한세상3차아파트,방배e-편한세상3차아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’방배e-편한세상3차아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,신화아파트,신화아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (k {name:’신화아파트’}) RETURN k.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,래미안원베일리아파트,래미안원베일리아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (k {name:’래미안원베일리아파트’}) RETURN k.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,방배현대홈타운2차아파트,방배현대홈타운2차아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (k {name:’방배현대홈타운2차아파트’}) RETURN k.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,방배대우디오빌아파트,방배대우디오빌아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (k {name:’방배대우디오빌아파트’}) RETURN k.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,서초이오빌아파트,서초이오빌아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’서초이오빌아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,방배현대홈타운2차아파트,방배현대홈타운2차아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (k {name:’방배현대홈타운2차아파트’}) RETURN k.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,녹원한신아파트,녹원한신아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’녹원한신아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,서초포레스타2단지아파트,서초포레스타2단지아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (k {name:’서초포레스타2단지아파트’}) RETURN k.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,방배아트자이아파트,방배아트자이아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’방배아트자이아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,롯데캐슬갤럭시1차아파트,롯데캐슬갤럭시1차아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’롯데캐슬갤럭시1차아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,쌍용예가클래식아파트,쌍용예가클래식아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’쌍용예가클래식아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,서초트라팰리스아파트,서초트라팰리스아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (k {name:’서초트라팰리스아파트’}) RETURN k.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,마제스타시티힐스테이트서리풀아파트,마제스타시티힐스테이트서리풀아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (k {name:’마제스타시티힐스테이트서리풀아파트’}) RETURN k.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,방배롯데캐슬아르떼아파트,방배롯데캐슬아르떼아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’방배롯데캐슬아르떼아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,잠원월드메르디앙아파트,잠원월드메르디앙아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (k {name:’잠원월드메르디앙아파트’}) RETURN k.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,서초교대e편한세상아파트,서초교대e편한세상아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’서초교대e편한세상아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,DK밸리뷰서초(주)아파트,DK밸리뷰서초(주)아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’DK밸리뷰서초(주)아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,현대슈퍼빌아파트,현대슈퍼빌아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’현대슈퍼빌아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,한신로얄아파트,한신로얄아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’한신로얄아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,삼호1차아파트,삼호1차아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’삼호1차아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,신반포15차아파트,신반포15차아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’신반포15차아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,디에이치라클라스아파트,디에이치라클라스아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (k {name:’디에이치라클라스아파트’}) RETURN k.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,우성5차아파트,우성5차아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’우성5차아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,신반포19차아파트,신반포19차아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’신반포19차아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,신반포청구아파트,신반포청구아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’신반포청구아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,롯데캐슬주피터아파트,롯데캐슬주피터아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’롯데캐슬주피터아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,한라비발디스튜디오193(도시형)아파트,한라비발디스튜디오193(도시형)아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’한라비발디스튜디오193(도시형)아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,방배한신트리플아파트,방배한신트리플아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (k {name:’방배한신트리플아파트’}) RETURN k.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,잠원대우아이빌아파트,잠원대우아이빌아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’잠원대우아이빌아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,서초대우디오빌프라임아파트,서초대우디오빌프라임아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’서초대우디오빌프라임아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,아남아파트,아남아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’아남아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,신반포2차아파트,신반포2차아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’신반포2차아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,방배아크로타워아파트,방배아크로타워아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’방배아크로타워아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,신반포9차아파트,신반포9차아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’신반포9차아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,임광3차아파트,임광3차아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’임광3차아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,신반포18차(337동)아파트,신반포18차(337동)아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’신반포18차(337동)아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,서초현대4차아파트,서초현대4차아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’서초현대4차아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,반포미도2차아파트,반포미도2차아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’반포미도2차아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,아크로비스타아파트,아크로비스타아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (k {name:’아크로비스타아파트’}) RETURN k.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,삼호4차아파트,삼호4차아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’삼호4차아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,밀라텔쉐르빌(엠쉐르빌)아파트,밀라텔쉐르빌(엠쉐르빌)아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’밀라텔쉐르빌(엠쉐르빌)아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,코오롱아파트,코오롱아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (k {name:’코오롱아파트’}) RETURN k.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,서초삼성래미안아파트,서초삼성래미안아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (k {name:’서초삼성래미안아파트’}) RETURN k.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,서초자이아파트,서초자이아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’서초자이아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,서초아트자이아파트,서초아트자이아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (k {name:’서초아트자이아파트’}) RETURN k.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,서초네이처힐3단지아파트,서초네이처힐3단지아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’서초네이처힐3단지아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,서초쌍용플래티넘아파트,서초쌍용플래티넘아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’서초쌍용플래티넘아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,반포미도1차아파트,반포미도1차아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’반포미도1차아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,서초롯데캐슬리버티아파트,서초롯데캐슬리버티아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’서초롯데캐슬리버티아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,삼성쉐르빌II아파트,삼성쉐르빌II아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (k {name:’삼성쉐르빌II아파트’}) RETURN k.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,지웰홈스서초아파트,지웰홈스서초아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’지웰홈스서초아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,서초포레스타6단지아파트,서초포레스타6단지아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’서초포레스타6단지아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,서초교대e편한세상아파트,서초교대e편한세상아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (k {name:’서초교대e편한세상아파트’}) RETURN k.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,신동아아파트,신동아아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’신동아아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,방배자이아파트,방배자이아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (k {name:’방배자이아파트’}) RETURN k.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,롯데캐슬주피터아파트,롯데캐슬주피터아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’롯데캐슬주피터아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,신반포10차아파트,신반포10차아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (k {name:’신반포10차아파트’}) RETURN k.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,서초네이처힐1단지아파트,서초네이처힐1단지아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’서초네이처힐1단지아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,한신서래아파트,한신서래아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’한신서래아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,신화아파트,신화아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (k {name:’신화아파트’}) RETURN k.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,방배한신트리플아파트,방배한신트리플아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’방배한신트리플아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,신반포20차아파트,신반포20차아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (k {name:’신반포20차아파트’}) RETURN k.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,서초현대4차아파트,서초현대4차아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (k {name:’서초현대4차아파트’}) RETURN k.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,방배브라운스톤아파트,방배브라운스톤아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’방배브라운스톤아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,아크로리버뷰신반포아파트,아크로리버뷰신반포아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’아크로리버뷰신반포아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,방배래미안아파트,방배래미안아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (k {name:’방배래미안아파트’}) RETURN k.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,신반포2차아파트,신반포2차아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’신반포2차아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,방배래미안아파트,방배래미안아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’방배래미안아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,신반포25차아파트,신반포25차아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’신반포25차아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,우성5차아파트,우성5차아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (k {name:’우성5차아파트’}) RETURN k.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,신반포12차아파트,신반포12차아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’신반포12차아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,반포푸르지오아파트,반포푸르지오아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (k {name:’반포푸르지오아파트’}) RETURN k.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,삼호2차아파트,삼호2차아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’삼호2차아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,강남원효성아파트,강남원효성아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’강남원효성아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,방배현대홈타운1차아파트,방배현대홈타운1차아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (k {name:’방배현대홈타운1차아파트’}) RETURN k.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,롯데캐슬헤론아파트,롯데캐슬헤론아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (k {name:’롯데캐슬헤론아파트’}) RETURN k.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,신반포18차(337동)아파트,신반포18차(337동)아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’신반포18차(337동)아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,서초쌍용플래티넘아파트,서초쌍용플래티넘아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (k {name:’서초쌍용플래티넘아파트’}) RETURN k.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,잠원대우아이빌아파트,잠원대우아이빌아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’잠원대우아이빌아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,동원베네스트아파트,동원베네스트아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’동원베네스트아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,한신서래아파트,한신서래아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (k {name:’한신서래아파트’}) RETURN k.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,르엘신반포파크애비뉴아파트,르엘신반포파크애비뉴아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’르엘신반포파크애비뉴아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,서초교대e편한세상아파트,서초교대e편한세상아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’서초교대e편한세상아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,서초현대아파트,서초현대아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (k {name:’서초현대아파트’}) RETURN k.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,래미안퍼스티지아파트,래미안퍼스티지아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’래미안퍼스티지아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,잠원월드메르디앙아파트,잠원월드메르디앙아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’잠원월드메르디앙아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,금호베스트빌아파트,금호베스트빌아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’금호베스트빌아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,신반포8차아파트,신반포8차아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (k {name:’신반포8차아파트’}) RETURN k.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,서초푸르지오써밋아파트,서초푸르지오써밋아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (k {name:’서초푸르지오써밋아파트’}) RETURN k.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,서초힐스아파트,서초힐스아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’서초힐스아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,현대ESA2아파트,현대ESA2아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (k {name:’현대ESA2아파트’}) RETURN k.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,동아아파트,동아아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’동아아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,서초아이파크아파트,서초아이파크아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’서초아이파크아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,서초네이처힐1단지아파트,서초네이처힐1단지아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’서초네이처힐1단지아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,신반포9차아파트,신반포9차아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’신반포9차아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,반포미도1차아파트,반포미도1차아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’반포미도1차아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,방배롯데캐슬아르떼아파트,방배롯데캐슬아르떼아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’방배롯데캐슬아르떼아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,신동아아파트,신동아아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’신동아아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,삼성서초가든스위트아파트,삼성서초가든스위트아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’삼성서초가든스위트아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,신반포25차아파트,신반포25차아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’신반포25차아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,잠원한신아파트,잠원한신아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (k {name:’잠원한신아파트’}) RETURN k.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,동아아파트,동아아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’동아아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,반포르엘아파트,반포르엘아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’반포르엘아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,르엘신반포파크애비뉴아파트,르엘신반포파크애비뉴아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’르엘신반포파크애비뉴아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,반포써밋아파트,반포써밋아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (k {name:’반포써밋아파트’}) RETURN k.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,우성5차아파트,우성5차아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (k {name:’우성5차아파트’}) RETURN k.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,신반포8차아파트,신반포8차아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (k {name:’신반포8차아파트’}) RETURN k.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,방배아크로리버아파트,방배아크로리버아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (k {name:’방배아크로리버아파트’}) RETURN k.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,현대아파트,현대아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’현대아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,서초그랑자이아파트,서초그랑자이아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (k {name:’서초그랑자이아파트’}) RETURN k.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,래미안서초스위트아파트,래미안서초스위트아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’래미안서초스위트아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,서초포레스타5단지아파트,서초포레스타5단지아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’서초포레스타5단지아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,반포자이아파트,반포자이아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’반포자이아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,롯데캐슬갤럭시1차아파트,롯데캐슬갤럭시1차아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (k {name:’롯데캐슬갤럭시1차아파트’}) RETURN k.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,잠원한신아파트,잠원한신아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’잠원한신아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,밀라텔쉐르빌(엠쉐르빌)아파트,밀라텔쉐르빌(엠쉐르빌)아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (k {name:’밀라텔쉐르빌(엠쉐르빌)아파트’}) RETURN k.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,삼성서초가든스위트아파트,삼성서초가든스위트아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (k {name:’삼성서초가든스위트아파트’}) RETURN k.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,현대동궁아파트,현대동궁아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’현대동궁아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,방배아트자이아파트,방배아트자이아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (k {name:’방배아트자이아파트’}) RETURN k.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,롯데캐슬갤럭시1차아파트,롯데캐슬갤럭시1차아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’롯데캐슬갤럭시1차아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,현대성우아파트,현대성우아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’현대성우아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,반포르엘아파트,반포르엘아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (k {name:’반포르엘아파트’}) RETURN k.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,LH서초5단지아파트,LH서초5단지아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (k {name:’LH서초5단지아파트’}) RETURN k.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,서초롯데캐슬리버티아파트,서초롯데캐슬리버티아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’서초롯데캐슬리버티아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,아크로리버파크아파트,아크로리버파크아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’아크로리버파크아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,서초이오빌아파트,서초이오빌아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (k {name:’서초이오빌아파트’}) RETURN k.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,방배아이파크아파트,방배아이파크아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’방배아이파크아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,LH서초5단지아파트,LH서초5단지아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (k {name:’LH서초5단지아파트’}) RETURN k.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,잠원훼미리아파트,잠원훼미리아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (k {name:’잠원훼미리아파트’}) RETURN k.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,서초네이처힐7단지아파트,서초네이처힐7단지아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’서초네이처힐7단지아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,서초포레스타2단지아파트,서초포레스타2단지아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’서초포레스타2단지아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,더샵반포리버파크(도시형)아파트,더샵반포리버파크(도시형)아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’더샵반포리버파크(도시형)아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,반포센트레빌아스테리움아파트,반포센트레빌아스테리움아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’반포센트레빌아스테리움아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,신반포궁전아파트,신반포궁전아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (k {name:’신반포궁전아파트’}) RETURN k.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,신동아1차아파트,신동아1차아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (k {name:’신동아1차아파트’}) RETURN k.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,코오롱아파트,코오롱아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’코오롱아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,롯데캐슬클래식아파트,롯데캐슬클래식아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’롯데캐슬클래식아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,잠원대우아이빌아파트,잠원대우아이빌아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’잠원대우아이빌아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,방배롯데캐슬로제아파트,방배롯데캐슬로제아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’방배롯데캐슬로제아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,방배아트자이아파트,방배아트자이아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’방배아트자이아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,더샵서초아파트,더샵서초아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’더샵서초아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,동원베네스트아파트,동원베네스트아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’동원베네스트아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,롯데캐슬갤럭시2차아파트,롯데캐슬갤럭시2차아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’롯데캐슬갤럭시2차아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,방배현대홈타운1차아파트,방배현대홈타운1차아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’방배현대홈타운1차아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,방배아트자이아파트,방배아트자이아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’방배아트자이아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,방배래미안아파트,방배래미안아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (k {name:’방배래미안아파트’}) RETURN k.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,우면한라아파트,우면한라아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’우면한라아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,반포자이아파트,반포자이아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’반포자이아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,서초롯데캐슬프레지던트아파트,서초롯데캐슬프레지던트아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (k {name:’서초롯데캐슬프레지던트아파트’}) RETURN k.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,서초자이아파트,서초자이아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’서초자이아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,한강아파트,한강아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’한강아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,동고아파트,동고아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’동고아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,잠원중앙하이츠(B동)아파트,잠원중앙하이츠(B동)아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’잠원중앙하이츠(B동)아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,신반포9차아파트,신반포9차아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’신반포9차아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,신반포22차아파트,신반포22차아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’신반포22차아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,서초포레스타7단지아파트,서초포레스타7단지아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (n {name:’서초포레스타7단지아파트’}) RETURN n.parking_per_house,1,0
3,[mask_1]의 가구당 주차대수는 몇 대야?,apt_name,래미안신반포팰리스아파트,래미안신반포팰리스아파트의 가구당 주차대수는 몇 대야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_per_house,apt_name,MATCH (k {name:’래미안신반포팰리스아파트’}) RETURN k.parking_per_house,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,서초포레스타7단지아파트,서초포레스타7단지아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (k {name:’서초포레스타7단지아파트’}) RETURN k.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,서초아트자이아파트,서초아트자이아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (k {name:’서초아트자이아파트’}) RETURN k.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,마제스타시티힐스테이트서리풀아파트,마제스타시티힐스테이트서리풀아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (k {name:’마제스타시티힐스테이트서리풀아파트’}) RETURN k.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,서초아이파크아파트,서초아이파크아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’서초아이파크아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,신반포7차아파트,신반포7차아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’신반포7차아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,한강아파트,한강아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (k {name:’한강아파트’}) RETURN k.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,잠원현대훼밀리아파트,잠원현대훼밀리아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (k {name:’잠원현대훼밀리아파트’}) RETURN k.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,신반포7차아파트,신반포7차아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’신반포7차아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,방배우성아파트,방배우성아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’방배우성아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,신반포청구아파트,신반포청구아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’신반포청구아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,방배아크로타워아파트,방배아크로타워아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (k {name:’방배아크로타워아파트’}) RETURN k.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,양재우성아파트,양재우성아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’양재우성아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,반포한신타워아파트,반포한신타워아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’반포한신타워아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,롯데캐슬주피터아파트,롯데캐슬주피터아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’롯데캐슬주피터아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,LH서초5단지아파트,LH서초5단지아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’LH서초5단지아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,서초포레스타5단지아파트,서초포레스타5단지아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’서초포레스타5단지아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,서초더샵포레아파트,서초더샵포레아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’서초더샵포레아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,반포래미안아이파크아파트,반포래미안아이파크아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (k {name:’반포래미안아이파크아파트’}) RETURN k.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,삼호3차아파트,삼호3차아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’삼호3차아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,강남역푸르지오시티(도시형)아파트,강남역푸르지오시티(도시형)아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’강남역푸르지오시티(도시형)아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,반포리체아파트,반포리체아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’반포리체아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,녹원한신아파트,녹원한신아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (k {name:’녹원한신아파트’}) RETURN k.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,방배래미안아파트,방배래미안아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (k {name:’방배래미안아파트’}) RETURN k.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,래미안퍼스티지아파트,래미안퍼스티지아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’래미안퍼스티지아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,서초쌍용플래티넘아파트,서초쌍용플래티넘아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’서초쌍용플래티넘아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,삼풍아파트,삼풍아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’삼풍아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,신반포9차아파트,신반포9차아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (k {name:’신반포9차아파트’}) RETURN k.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,삼익아파트,삼익아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (k {name:’삼익아파트’}) RETURN k.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,방배자이아파트,방배자이아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’방배자이아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,쌍용예가클래식아파트,쌍용예가클래식아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’쌍용예가클래식아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,현대ESA아파트,현대ESA아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’현대ESA아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,헤센파크힐아파트,헤센파크힐아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’헤센파크힐아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,잠원월드메르디앙아파트,잠원월드메르디앙아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (k {name:’잠원월드메르디앙아파트’}) RETURN k.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,현대ESA아파트,현대ESA아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’현대ESA아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,삼풍아파트,삼풍아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (k {name:’삼풍아파트’}) RETURN k.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,서초자이아파트,서초자이아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (k {name:’서초자이아파트’}) RETURN k.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,유원서초아파트,유원서초아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’유원서초아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,반포센트럴자이아파트,반포센트럴자이아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (k {name:’반포센트럴자이아파트’}) RETURN k.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,방배현대홈타운2차아파트,방배현대홈타운2차아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’방배현대홈타운2차아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,롯데캐슬주피터아파트,롯데캐슬주피터아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (k {name:’롯데캐슬주피터아파트’}) RETURN k.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,삼환나띠르빌아파트,삼환나띠르빌아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’삼환나띠르빌아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,롯데캐슬헤론아파트,롯데캐슬헤론아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’롯데캐슬헤론아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,밀라텔쉐르빌(엠쉐르빌)아파트,밀라텔쉐르빌(엠쉐르빌)아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (k {name:’밀라텔쉐르빌(엠쉐르빌)아파트’}) RETURN k.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,강남원효성아파트,강남원효성아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’강남원효성아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,삼호한숲아파트,삼호한숲아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’삼호한숲아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,방배동부센트레빌아파트,방배동부센트레빌아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (k {name:’방배동부센트레빌아파트’}) RETURN k.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,우성5차아파트,우성5차아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’우성5차아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,서초한빛삼성아파트,서초한빛삼성아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’서초한빛삼성아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,방배래미안타워아파트,방배래미안타워아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’방배래미안타워아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,롯데캐슬헤론아파트,롯데캐슬헤론아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’롯데캐슬헤론아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,방배래미안아파트,방배래미안아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’방배래미안아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,방배래미안아파트,방배래미안아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (k {name:’방배래미안아파트’}) RETURN k.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,아크로리버파크아파트,아크로리버파크아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (k {name:’아크로리버파크아파트’}) RETURN k.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,쌍용예가클래식아파트,쌍용예가클래식아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’쌍용예가클래식아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,신반포11차아파트,신반포11차아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’신반포11차아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,반포리체아파트,반포리체아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (k {name:’반포리체아파트’}) RETURN k.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,래미안서초에스티지S아파트,래미안서초에스티지S아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (k {name:’래미안서초에스티지S아파트’}) RETURN k.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,방배e-편한세상1차아파트,방배e-편한세상1차아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’방배e-편한세상1차아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,양재우성아파트,양재우성아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’양재우성아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,삼호가든맨션5차아파트,삼호가든맨션5차아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’삼호가든맨션5차아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,삼호3차아파트,삼호3차아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’삼호3차아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,서초포레스타3단지아파트,서초포레스타3단지아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’서초포레스타3단지아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,반포래미안아이파크아파트,반포래미안아이파크아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’반포래미안아이파크아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,코오롱아파트,코오롱아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’코오롱아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,잠원현대아파트,잠원현대아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’잠원현대아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,롯데캐슬갤럭시1차아파트,롯데캐슬갤럭시1차아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’롯데캐슬갤럭시1차아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,신영체르니아파트,신영체르니아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’신영체르니아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,서초한빛삼성아파트,서초한빛삼성아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’서초한빛삼성아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,대우효령아파트,대우효령아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (k {name:’대우효령아파트’}) RETURN k.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,서초힐스아파트,서초힐스아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (k {name:’서초힐스아파트’}) RETURN k.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,반포미도2차아파트,반포미도2차아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’반포미도2차아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,블루힐하우스아파트,블루힐하우스아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’블루힐하우스아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,반포주공1단지아파트,반포주공1단지아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (k {name:’반포주공1단지아파트’}) RETURN k.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,래미안서초에스티지S아파트,래미안서초에스티지S아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’래미안서초에스티지S아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,삼호3차아파트,삼호3차아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’삼호3차아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,디에이치라클라스아파트,디에이치라클라스아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (k {name:’디에이치라클라스아파트’}) RETURN k.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,방배마에스트로아파트,방배마에스트로아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’방배마에스트로아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,삼호가든맨션5차아파트,삼호가든맨션5차아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’삼호가든맨션5차아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,마제스타시티힐스테이트서리풀아파트,마제스타시티힐스테이트서리풀아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’마제스타시티힐스테이트서리풀아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,현대멤피스아파트,현대멤피스아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’현대멤피스아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,서초호반써밋아파트,서초호반써밋아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’서초호반써밋아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,서초힐스아파트,서초힐스아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’서초힐스아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,한신서래아파트,한신서래아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (k {name:’한신서래아파트’}) RETURN k.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,서초대우아이빌아파트,서초대우아이빌아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (k {name:’서초대우아이빌아파트’}) RETURN k.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,방배래미안타워아파트,방배래미안타워아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (k {name:’방배래미안타워아파트’}) RETURN k.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,신반포11차아파트,신반포11차아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’신반포11차아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,서초롯데캐슬리버티아파트,서초롯데캐슬리버티아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’서초롯데캐슬리버티아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,대우효령아파트,대우효령아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’대우효령아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,반포푸르지오아파트,반포푸르지오아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’반포푸르지오아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,신반포17차아파트,신반포17차아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (k {name:’신반포17차아파트’}) RETURN k.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,서초푸르지오써밋아파트,서초푸르지오써밋아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (k {name:’서초푸르지오써밋아파트’}) RETURN k.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,서초한빛삼성아파트,서초한빛삼성아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (k {name:’서초한빛삼성아파트’}) RETURN k.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,신반포22차아파트,신반포22차아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (k {name:’신반포22차아파트’}) RETURN k.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,신반포25차아파트,신반포25차아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (k {name:’신반포25차아파트’}) RETURN k.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,녹원한신아파트,녹원한신아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’녹원한신아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,한강아파트,한강아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’한강아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,마제스타시티힐스테이트서리풀아파트,마제스타시티힐스테이트서리풀아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’마제스타시티힐스테이트서리풀아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,서초삼성래미안아파트,서초삼성래미안아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’서초삼성래미안아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,방배현대홈타운3차아파트,방배현대홈타운3차아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’방배현대홈타운3차아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,서초호반써밋아파트,서초호반써밋아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (k {name:’서초호반써밋아파트’}) RETURN k.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,디에이치라클라스아파트,디에이치라클라스아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’디에이치라클라스아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,서초래미안아파트,서초래미안아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (k {name:’서초래미안아파트’}) RETURN k.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,아남아파트,아남아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’아남아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,임광3차아파트,임광3차아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’임광3차아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,서초푸르지오써밋아파트,서초푸르지오써밋아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’서초푸르지오써밋아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,방배브라운가아파트,방배브라운가아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’방배브라운가아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,현대ESA아파트,현대ESA아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (k {name:’현대ESA아파트’}) RETURN k.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,서초포레스타6단지아파트,서초포레스타6단지아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (k {name:’서초포레스타6단지아파트’}) RETURN k.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,서초포레스타6단지아파트,서초포레스타6단지아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (k {name:’서초포레스타6단지아파트’}) RETURN k.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,삼성쉐르빌II아파트,삼성쉐르빌II아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’삼성쉐르빌II아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,잠원한신아파트,잠원한신아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (k {name:’잠원한신아파트’}) RETURN k.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,삼성쉐르빌II아파트,삼성쉐르빌II아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’삼성쉐르빌II아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,방배e-편한세상3차아파트,방배e-편한세상3차아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (k {name:’방배e-편한세상3차아파트’}) RETURN k.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,삼풍아파트,삼풍아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’삼풍아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,반포힐스테이트아파트,반포힐스테이트아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (k {name:’반포힐스테이트아파트’}) RETURN k.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,현대슈퍼빌아파트,현대슈퍼빌아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’현대슈퍼빌아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,서초e-편한세상5차아파트,서초e-편한세상5차아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (k {name:’서초e-편한세상5차아파트’}) RETURN k.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,잠원훼미리아파트,잠원훼미리아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’잠원훼미리아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,방배동부센트레빌아파트,방배동부센트레빌아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (k {name:’방배동부센트레빌아파트’}) RETURN k.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,현대ESA아파트,현대ESA아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’현대ESA아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,롯데캐슬헤론아파트,롯데캐슬헤론아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’롯데캐슬헤론아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,방배브라운스톤아파트,방배브라운스톤아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (k {name:’방배브라운스톤아파트’}) RETURN k.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,잠원중앙하이츠(B동)아파트,잠원중앙하이츠(B동)아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (k {name:’잠원중앙하이츠(B동)아파트’}) RETURN k.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,킴스빌리지아파트,킴스빌리지아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (k {name:’킴스빌리지아파트’}) RETURN k.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,서초e-편한세상2차아파트,서초e-편한세상2차아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’서초e-편한세상2차아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,신반포10차아파트,신반포10차아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’신반포10차아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,금호베스트빌아파트,금호베스트빌아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (k {name:’금호베스트빌아파트’}) RETURN k.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,서초한신리빙타워아파트,서초한신리빙타워아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’서초한신리빙타워아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,삼익아파트,삼익아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’삼익아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,서초네이처힐7단지아파트,서초네이처힐7단지아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’서초네이처힐7단지아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,신반포4차아파트,신반포4차아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’신반포4차아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,쌍용예가클래식아파트,쌍용예가클래식아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’쌍용예가클래식아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,신화아파트,신화아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’신화아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,한강아파트,한강아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’한강아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,헤센파크힐아파트,헤센파크힐아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’헤센파크힐아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,금호베스트빌아파트,금호베스트빌아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’금호베스트빌아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,강남역푸르지오시티(도시형)아파트,강남역푸르지오시티(도시형)아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (k {name:’강남역푸르지오시티(도시형)아파트’}) RETURN k.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,서초현대아파트,서초현대아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’서초현대아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,현대성우아파트,현대성우아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (k {name:’현대성우아파트’}) RETURN k.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,신반포궁전아파트,신반포궁전아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (k {name:’신반포궁전아파트’}) RETURN k.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,롯데캐슬주피터아파트,롯데캐슬주피터아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’롯데캐슬주피터아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,삼성서초가든스위트아파트,삼성서초가든스위트아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’삼성서초가든스위트아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,금호베스트빌아파트,금호베스트빌아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (k {name:’금호베스트빌아파트’}) RETURN k.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,서초포레스타7단지아파트,서초포레스타7단지아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’서초포레스타7단지아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,현대멤피스아파트,현대멤피스아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’현대멤피스아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,지웰홈스서초아파트,지웰홈스서초아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’지웰홈스서초아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,방배롯데캐슬로제아파트,방배롯데캐슬로제아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’방배롯데캐슬로제아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,서초네이처힐6단지아파트,서초네이처힐6단지아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (k {name:’서초네이처힐6단지아파트’}) RETURN k.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,헤센파크힐아파트,헤센파크힐아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’헤센파크힐아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,아크로비스타아파트,아크로비스타아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’아크로비스타아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,아크로리버뷰신반포아파트,아크로리버뷰신반포아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’아크로리버뷰신반포아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,서초포레스타3단지아파트,서초포레스타3단지아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (k {name:’서초포레스타3단지아파트’}) RETURN k.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,한강아파트,한강아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’한강아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,서초한신리빙타워아파트,서초한신리빙타워아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’서초한신리빙타워아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,서초네이처힐6단지아파트,서초네이처힐6단지아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (k {name:’서초네이처힐6단지아파트’}) RETURN k.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,녹원한신아파트,녹원한신아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’녹원한신아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,서초쌍용플래티넘아파트,서초쌍용플래티넘아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (k {name:’서초쌍용플래티넘아파트’}) RETURN k.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,신반포2차아파트,신반포2차아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’신반포2차아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,서초LH4단지아파트,서초LH4단지아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’서초LH4단지아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,우면한라아파트,우면한라아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’우면한라아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,서초네이처힐6단지아파트,서초네이처힐6단지아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (k {name:’서초네이처힐6단지아파트’}) RETURN k.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,현대성우아파트,현대성우아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (k {name:’현대성우아파트’}) RETURN k.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,방배아크로타워아파트,방배아크로타워아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’방배아크로타워아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,서초네이처힐1단지아파트,서초네이처힐1단지아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (k {name:’서초네이처힐1단지아파트’}) RETURN k.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,진흥아파트,진흥아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’진흥아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,방배아이파크아파트,방배아이파크아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (k {name:’방배아이파크아파트’}) RETURN k.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,래미안리더스원아파트,래미안리더스원아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (k {name:’래미안리더스원아파트’}) RETURN k.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,동원베네스트아파트,동원베네스트아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’동원베네스트아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,코오롱아파트,코오롱아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (k {name:’코오롱아파트’}) RETURN k.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,서초대우디오빌프라임아파트,서초대우디오빌프라임아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’서초대우디오빌프라임아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,방배동부센트레빌아파트,방배동부센트레빌아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’방배동부센트레빌아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,유원서초아파트,유원서초아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (k {name:’유원서초아파트’}) RETURN k.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,신반포22차아파트,신반포22차아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’신반포22차아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,래미안퍼스티지아파트,래미안퍼스티지아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’래미안퍼스티지아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,방배롯데캐슬로제아파트,방배롯데캐슬로제아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’방배롯데캐슬로제아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,반포센트레빌아스테리움아파트,반포센트레빌아스테리움아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’반포센트레빌아스테리움아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,블루힐하우스아파트,블루힐하우스아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (k {name:’블루힐하우스아파트’}) RETURN k.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,서초래미안아파트,서초래미안아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’서초래미안아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,신화아파트,신화아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’신화아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,한신타운아파트,한신타운아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’한신타운아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,서초자이아파트,서초자이아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (k {name:’서초자이아파트’}) RETURN k.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,서초네이처힐1단지아파트,서초네이처힐1단지아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’서초네이처힐1단지아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,대우효령아파트,대우효령아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’대우효령아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,방배현대홈타운2차아파트,방배현대홈타운2차아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’방배현대홈타운2차아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,반포센트레빌아스테리움아파트,반포센트레빌아스테리움아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (k {name:’반포센트레빌아스테리움아파트’}) RETURN k.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,블루힐하우스아파트,블루힐하우스아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’블루힐하우스아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,래미안리더스원아파트,래미안리더스원아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’래미안리더스원아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,방배아크로타워아파트,방배아크로타워아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’방배아크로타워아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,한강아파트,한강아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (k {name:’한강아파트’}) RETURN k.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,서초한신리빙타워아파트,서초한신리빙타워아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’서초한신리빙타워아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,르엘신반포파크애비뉴아파트,르엘신반포파크애비뉴아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’르엘신반포파크애비뉴아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,서초포레스타2단지아파트,서초포레스타2단지아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (k {name:’서초포레스타2단지아파트’}) RETURN k.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,현대아파트,현대아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’현대아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,한라비발디스튜디오193(도시형)아파트,한라비발디스튜디오193(도시형)아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’한라비발디스튜디오193(도시형)아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,반포한신타워아파트,반포한신타워아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’반포한신타워아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,신반포21차아파트,신반포21차아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (k {name:’신반포21차아파트’}) RETURN k.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,마제스타시티힐스테이트서리풀아파트,마제스타시티힐스테이트서리풀아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’마제스타시티힐스테이트서리풀아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,우면한라아파트,우면한라아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’우면한라아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,더샵서초아파트,더샵서초아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’더샵서초아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,한강아파트,한강아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’한강아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,잠원현대훼밀리아파트,잠원현대훼밀리아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (k {name:’잠원현대훼밀리아파트’}) RETURN k.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,현대ESA아파트,현대ESA아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’현대ESA아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,잠원대우아이빌아파트,잠원대우아이빌아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (k {name:’잠원대우아이빌아파트’}) RETURN k.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,잠원현대훼밀리아파트,잠원현대훼밀리아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’잠원현대훼밀리아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,삼성서초가든스위트아파트,삼성서초가든스위트아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (k {name:’삼성서초가든스위트아파트’}) RETURN k.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,서초네이처힐4단지아파트,서초네이처힐4단지아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’서초네이처힐4단지아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,현대아파트,현대아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (k {name:’현대아파트’}) RETURN k.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,방배래미안타워아파트,방배래미안타워아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’방배래미안타워아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,방배브라운가아파트,방배브라운가아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’방배브라운가아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,신동아2차아파트,신동아2차아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’신동아2차아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,반포센트럴자이아파트,반포센트럴자이아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (k {name:’반포센트럴자이아파트’}) RETURN k.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,래미안리더스원아파트,래미안리더스원아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (k {name:’래미안리더스원아파트’}) RETURN k.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,서초e-편한세상5차아파트,서초e-편한세상5차아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’서초e-편한세상5차아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,신반포19차아파트,신반포19차아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’신반포19차아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,금호베스트빌아파트,금호베스트빌아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’금호베스트빌아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,서초센트럴아이파크아파트,서초센트럴아이파크아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (k {name:’서초센트럴아이파크아파트’}) RETURN k.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,서초호반써밋아파트,서초호반써밋아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’서초호반써밋아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,서초포레스타7단지아파트,서초포레스타7단지아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (k {name:’서초포레스타7단지아파트’}) RETURN k.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,신화아파트,신화아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’신화아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,DK밸리뷰서초(주)아파트,DK밸리뷰서초(주)아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’DK밸리뷰서초(주)아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,신동아1차아파트,신동아1차아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (k {name:’신동아1차아파트’}) RETURN k.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,서초교대e편한세상아파트,서초교대e편한세상아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’서초교대e편한세상아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,서초쌍용플래티넘아파트,서초쌍용플래티넘아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (k {name:’서초쌍용플래티넘아파트’}) RETURN k.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,마제스타시티힐스테이트서리풀아파트,마제스타시티힐스테이트서리풀아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’마제스타시티힐스테이트서리풀아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,아남아파트,아남아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (k {name:’아남아파트’}) RETURN k.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,방배e-편한세상1차아파트,방배e-편한세상1차아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’방배e-편한세상1차아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,신영체르니아파트,신영체르니아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’신영체르니아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,방배현대홈타운2차아파트,방배현대홈타운2차아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (k {name:’방배현대홈타운2차아파트’}) RETURN k.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,서초네이처힐7단지아파트,서초네이처힐7단지아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (k {name:’서초네이처힐7단지아파트’}) RETURN k.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,서초한신아파트,서초한신아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (k {name:’서초한신아파트’}) RETURN k.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,서초교대e편한세상아파트,서초교대e편한세상아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’서초교대e편한세상아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,신반포청구아파트,신반포청구아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’신반포청구아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,금호베스트빌아파트,금호베스트빌아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’금호베스트빌아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,우면한라아파트,우면한라아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’우면한라아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,지웰홈스서초아파트,지웰홈스서초아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’지웰홈스서초아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,킴스빌리지아파트,킴스빌리지아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’킴스빌리지아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,서초교대e편한세상아파트,서초교대e편한세상아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’서초교대e편한세상아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,서초현대4차아파트,서초현대4차아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (k {name:’서초현대4차아파트’}) RETURN k.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,우면한라아파트,우면한라아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (k {name:’우면한라아파트’}) RETURN k.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,방배브라운가아파트,방배브라운가아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’방배브라운가아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,신반포10차아파트,신반포10차아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’신반포10차아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,더샵반포리버파크(도시형)아파트,더샵반포리버파크(도시형)아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’더샵반포리버파크(도시형)아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,힐스테이트서초젠트리스아파트,힐스테이트서초젠트리스아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’힐스테이트서초젠트리스아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,유원서초아파트,유원서초아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’유원서초아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,서초롯데캐슬리버티아파트,서초롯데캐슬리버티아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’서초롯데캐슬리버티아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,서초현대4차아파트,서초현대4차아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’서초현대4차아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,강남역푸르지오시티(도시형)아파트,강남역푸르지오시티(도시형)아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’강남역푸르지오시티(도시형)아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,현대아파트,현대아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’현대아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,코오롱아파트,코오롱아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (k {name:’코오롱아파트’}) RETURN k.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,동아아파트,동아아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’동아아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,신반포12차아파트,신반포12차아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (k {name:’신반포12차아파트’}) RETURN k.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,서초e-편한세상1차아파트,서초e-편한세상1차아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (k {name:’서초e-편한세상1차아파트’}) RETURN k.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,한강아파트,한강아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’한강아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,서초포레스타3단지아파트,서초포레스타3단지아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’서초포레스타3단지아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,서초한빛삼성아파트,서초한빛삼성아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (k {name:’서초한빛삼성아파트’}) RETURN k.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,LH서초5단지아파트,LH서초5단지아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’LH서초5단지아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,방배자이아파트,방배자이아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’방배자이아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,신반포16차아파트,신반포16차아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (k {name:’신반포16차아파트’}) RETURN k.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,한신로얄아파트,한신로얄아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (k {name:’한신로얄아파트’}) RETURN k.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,서초네이처힐6단지아파트,서초네이처힐6단지아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (k {name:’서초네이처힐6단지아파트’}) RETURN k.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,아크로비스타아파트,아크로비스타아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’아크로비스타아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,신반포22차아파트,신반포22차아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’신반포22차아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,삼호3차아파트,삼호3차아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (k {name:’삼호3차아파트’}) RETURN k.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,방배현대홈타운2차아파트,방배현대홈타운2차아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’방배현대홈타운2차아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,방배롯데캐슬로제아파트,방배롯데캐슬로제아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’방배롯데캐슬로제아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,신화아파트,신화아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’신화아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,서초e-편한세상1차아파트,서초e-편한세상1차아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’서초e-편한세상1차아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,방배e-편한세상1차아파트,방배e-편한세상1차아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (k {name:’방배e-편한세상1차아파트’}) RETURN k.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,서초현대4차아파트,서초현대4차아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’서초현대4차아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,서초한신아파트,서초한신아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’서초한신아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,신반포자이아파트,신반포자이아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (k {name:’신반포자이아파트’}) RETURN k.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,방배현대홈타운1차아파트,방배현대홈타운1차아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’방배현대홈타운1차아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,방배래미안아트힐아파트,방배래미안아트힐아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’방배래미안아트힐아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,현대슈퍼빌아파트,현대슈퍼빌아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (k {name:’현대슈퍼빌아파트’}) RETURN k.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,삼성쉐르빌II아파트,삼성쉐르빌II아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’삼성쉐르빌II아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,서초그랑자이아파트,서초그랑자이아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’서초그랑자이아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,서초롯데캐슬리버티아파트,서초롯데캐슬리버티아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’서초롯데캐슬리버티아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,마제스타시티힐스테이트서리풀아파트,마제스타시티힐스테이트서리풀아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’마제스타시티힐스테이트서리풀아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,강변아파트,강변아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (k {name:’강변아파트’}) RETURN k.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,신반포27차아파트,신반포27차아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’신반포27차아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,방배아크로리버아파트,방배아크로리버아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’방배아크로리버아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,신반포12차아파트,신반포12차아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’신반포12차아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,삼호3차아파트,삼호3차아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (k {name:’삼호3차아파트’}) RETURN k.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,더샵반포리버파크(도시형)아파트,더샵반포리버파크(도시형)아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’더샵반포리버파크(도시형)아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,삼호1차아파트,삼호1차아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’삼호1차아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,아남아파트,아남아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’아남아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,서초푸르지오써밋아파트,서초푸르지오써밋아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (k {name:’서초푸르지오써밋아파트’}) RETURN k.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,신반포8차아파트,신반포8차아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’신반포8차아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,신반포11차아파트,신반포11차아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’신반포11차아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,서초쌍용플래티넘아파트,서초쌍용플래티넘아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’서초쌍용플래티넘아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,아크로비스타아파트,아크로비스타아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (k {name:’아크로비스타아파트’}) RETURN k.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,신반포4차아파트,신반포4차아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’신반포4차아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,삼환나띠르빌아파트,삼환나띠르빌아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’삼환나띠르빌아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,롯데캐슬갤럭시1차아파트,롯데캐슬갤럭시1차아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’롯데캐슬갤럭시1차아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,잠원훼미리아파트,잠원훼미리아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (k {name:’잠원훼미리아파트’}) RETURN k.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,"임광1,2차아파트","임광1,2차아파트에서 가장 높은 층은 몇 층이야?",MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,"MATCH (k {name:’임광1,2차아파트’}) RETURN k.max_floor",1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,반포래미안아이파크아파트,반포래미안아이파크아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’반포래미안아이파크아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,신반포12차아파트,신반포12차아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (k {name:’신반포12차아파트’}) RETURN k.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,반포센트럴자이아파트,반포센트럴자이아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (n {name:’반포센트럴자이아파트’}) RETURN n.max_floor,1,0
4,[mask_1]에서 가장 높은 층은 몇 층이야?,apt_name,삼호2차아파트,삼호2차아파트에서 가장 높은 층은 몇 층이야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].max_floor,apt_name,MATCH (k {name:’삼호2차아파트’}) RETURN k.max_floor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,삼성쉐르빌II아파트,삼성쉐르빌II아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’삼성쉐르빌II아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,신반포10차아파트,신반포10차아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (k {name:’신반포10차아파트’}) RETURN k.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,밀라텔쉐르빌(엠쉐르빌)아파트,밀라텔쉐르빌(엠쉐르빌)아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’밀라텔쉐르빌(엠쉐르빌)아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,반포주공1단지아파트,반포주공1단지아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (k {name:’반포주공1단지아파트’}) RETURN k.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,유원서초아파트,유원서초아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’유원서초아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,서초센트럴아이파크아파트,서초센트럴아이파크아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (k {name:’서초센트럴아이파크아파트’}) RETURN k.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,서초현대4차아파트,서초현대4차아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’서초현대4차아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,서초자이아파트,서초자이아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (k {name:’서초자이아파트’}) RETURN k.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,신화아파트,신화아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’신화아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,신반포18차(337동)아파트,신반포18차(337동)아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’신반포18차(337동)아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,현대아파트,현대아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (k {name:’현대아파트’}) RETURN k.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,방배우성아파트,방배우성아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’방배우성아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,서초호반써밋아파트,서초호반써밋아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (k {name:’서초호반써밋아파트’}) RETURN k.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,롯데캐슬클래식아파트,롯데캐슬클래식아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’롯데캐슬클래식아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,서초포레스타3단지아파트,서초포레스타3단지아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (k {name:’서초포레스타3단지아파트’}) RETURN k.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,래미안원베일리아파트,래미안원베일리아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’래미안원베일리아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,우면한라아파트,우면한라아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (k {name:’우면한라아파트’}) RETURN k.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,반포한신타워아파트,반포한신타워아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’반포한신타워아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,반포힐스테이트아파트,반포힐스테이트아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’반포힐스테이트아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,서초포레스타2단지아파트,서초포레스타2단지아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (k {name:’서초포레스타2단지아파트’}) RETURN k.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,방배e-편한세상1차아파트,방배e-편한세상1차아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’방배e-편한세상1차아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,양재우성KBS(113동)아파트,양재우성KBS(113동)아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (k {name:’양재우성KBS(113동)아파트’}) RETURN k.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,신반포10차아파트,신반포10차아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (k {name:’신반포10차아파트’}) RETURN k.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,삼성쉐르빌II아파트,삼성쉐르빌II아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’삼성쉐르빌II아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,서초포레스타7단지아파트,서초포레스타7단지아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (k {name:’서초포레스타7단지아파트’}) RETURN k.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,잠원현대훼밀리아파트,잠원현대훼밀리아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (k {name:’잠원현대훼밀리아파트’}) RETURN k.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,신반포7차아파트,신반포7차아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (k {name:’신반포7차아파트’}) RETURN k.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,잠원한신그린아파트,잠원한신그린아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’잠원한신그린아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,신영체르니아파트,신영체르니아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (k {name:’신영체르니아파트’}) RETURN k.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,신반포2차아파트,신반포2차아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (k {name:’신반포2차아파트’}) RETURN k.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,코오롱아파트,코오롱아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’코오롱아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,삼호1차아파트,삼호1차아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’삼호1차아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,신반포20차아파트,신반포20차아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’신반포20차아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,서초네이처힐3단지아파트,서초네이처힐3단지아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (k {name:’서초네이처힐3단지아파트’}) RETURN k.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,서초네이처힐1단지아파트,서초네이처힐1단지아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’서초네이처힐1단지아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,대우효령아파트,대우효령아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (k {name:’대우효령아파트’}) RETURN k.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,헤센파크힐아파트,헤센파크힐아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’헤센파크힐아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,신반포10차아파트,신반포10차아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (k {name:’신반포10차아파트’}) RETURN k.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,반포주공1단지아파트,반포주공1단지아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’반포주공1단지아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,삼환나띠르빌아파트,삼환나띠르빌아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’삼환나띠르빌아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,강남원효성아파트,강남원효성아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (k {name:’강남원효성아파트’}) RETURN k.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,방배우성아파트,방배우성아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’방배우성아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,방배롯데캐슬로제아파트,방배롯데캐슬로제아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’방배롯데캐슬로제아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,서초네이처힐1단지아파트,서초네이처힐1단지아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’서초네이처힐1단지아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,현대동궁아파트,현대동궁아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’현대동궁아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,신반포8차아파트,신반포8차아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’신반포8차아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,서초리시온아파트,서초리시온아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’서초리시온아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,방배e-편한세상3차아파트,방배e-편한세상3차아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’방배e-편한세상3차아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,롯데캐슬갤럭시2차아파트,롯데캐슬갤럭시2차아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (k {name:’롯데캐슬갤럭시2차아파트’}) RETURN k.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,진흥아파트,진흥아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’진흥아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,롯데캐슬갤럭시1차아파트,롯데캐슬갤럭시1차아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’롯데캐슬갤럭시1차아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,서초e-편한세상5차아파트,서초e-편한세상5차아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’서초e-편한세상5차아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,방배우성아파트,방배우성아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’방배우성아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,서초포레스타7단지아파트,서초포레스타7단지아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’서초포레스타7단지아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,아크로리버파크아파트,아크로리버파크아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’아크로리버파크아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,반포주공1단지아파트,반포주공1단지아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (k {name:’반포주공1단지아파트’}) RETURN k.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,현대ESA아파트,현대ESA아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’현대ESA아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,대림아파트,대림아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (k {name:’대림아파트’}) RETURN k.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,서초아이파크아파트,서초아이파크아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (k {name:’서초아이파크아파트’}) RETURN k.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,서초자이아파트,서초자이아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’서초자이아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,래미안원베일리아파트,래미안원베일리아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’래미안원베일리아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,서초롯데캐슬프레지던트아파트,서초롯데캐슬프레지던트아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (k {name:’서초롯데캐슬프레지던트아파트’}) RETURN k.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,서초래미안아파트,서초래미안아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’서초래미안아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,반포자이아파트,반포자이아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (k {name:’반포자이아파트’}) RETURN k.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,서초이오빌아파트,서초이오빌아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (k {name:’서초이오빌아파트’}) RETURN k.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,금호베스트빌아파트,금호베스트빌아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’금호베스트빌아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,삼풍아파트,삼풍아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’삼풍아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,현대성우아파트,현대성우아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’현대성우아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,서초현대아파트,서초현대아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’서초현대아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,엠브이아파트,엠브이아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (k {name:’엠브이아파트’}) RETURN k.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,방배아크로리버아파트,방배아크로리버아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’방배아크로리버아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,신반포청구아파트,신반포청구아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’신반포청구아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,마제스타시티힐스테이트서리풀아파트,마제스타시티힐스테이트서리풀아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’마제스타시티힐스테이트서리풀아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,방배그랑자이아파트,방배그랑자이아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’방배그랑자이아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,반포리체아파트,반포리체아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’반포리체아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,서초e-편한세상5차아파트,서초e-편한세상5차아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’서초e-편한세상5차아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,반포주공1단지아파트,반포주공1단지아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’반포주공1단지아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,코오롱아파트,코오롱아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (k {name:’코오롱아파트’}) RETURN k.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,한신타운아파트,한신타운아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (k {name:’한신타운아파트’}) RETURN k.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,서초센트럴아이파크아파트,서초센트럴아이파크아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’서초센트럴아이파크아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,방배현대홈타운1차아파트,방배현대홈타운1차아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’방배현대홈타운1차아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,서초네이처힐7단지아파트,서초네이처힐7단지아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’서초네이처힐7단지아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,아남아파트,아남아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (k {name:’아남아파트’}) RETURN k.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,래미안서초에스티지S아파트,래미안서초에스티지S아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’래미안서초에스티지S아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,삼성서초가든스위트아파트,삼성서초가든스위트아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’삼성서초가든스위트아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,"임광1,2차아파트","임광1,2차아파트를 만든 건설사는 뭐야?",MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,"MATCH (n {name:’임광1,2차아파트’}) RETURN n.constructor",1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,신반포11차아파트,신반포11차아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’신반포11차아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,엠브이아파트,엠브이아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’엠브이아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,서초리시온아파트,서초리시온아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’서초리시온아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,서초호반써밋아파트,서초호반써밋아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’서초호반써밋아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,롯데캐슬클래식아파트,롯데캐슬클래식아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’롯데캐슬클래식아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,신반포4차아파트,신반포4차아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’신반포4차아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,녹원한신아파트,녹원한신아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’녹원한신아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,방배롯데캐슬아르떼아파트,방배롯데캐슬아르떼아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (k {name:’방배롯데캐슬아르떼아파트’}) RETURN k.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,서초포레스타7단지아파트,서초포레스타7단지아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’서초포레스타7단지아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,서초네이처힐2단지아파트,서초네이처힐2단지아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’서초네이처힐2단지아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,반포미도2차아파트,반포미도2차아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’반포미도2차아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,서초포레스타6단지아파트,서초포레스타6단지아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’서초포레스타6단지아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,양재우성아파트,양재우성아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’양재우성아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,서초포레스타3단지아파트,서초포레스타3단지아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (k {name:’서초포레스타3단지아파트’}) RETURN k.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,삼호4차아파트,삼호4차아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’삼호4차아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,르엘신반포파크애비뉴아파트,르엘신반포파크애비뉴아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (k {name:’르엘신반포파크애비뉴아파트’}) RETURN k.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,잠원대우아이빌아파트,잠원대우아이빌아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’잠원대우아이빌아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,롯데캐슬헤론아파트,롯데캐슬헤론아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’롯데캐슬헤론아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,방배동부센트레빌아파트,방배동부센트레빌아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (k {name:’방배동부센트레빌아파트’}) RETURN k.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,방배대우디오빌아파트,방배대우디오빌아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’방배대우디오빌아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,잠원중앙하이츠(B동)아파트,잠원중앙하이츠(B동)아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’잠원중앙하이츠(B동)아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,한신로얄아파트,한신로얄아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’한신로얄아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,헤센파크힐아파트,헤센파크힐아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’헤센파크힐아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,삼호4차아파트,삼호4차아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (k {name:’삼호4차아파트’}) RETURN k.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,한신로얄아파트,한신로얄아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’한신로얄아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,동고아파트,동고아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’동고아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,신반포21차아파트,신반포21차아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (k {name:’신반포21차아파트’}) RETURN k.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,한라비발디스튜디오193(도시형)아파트,한라비발디스튜디오193(도시형)아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’한라비발디스튜디오193(도시형)아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,신동아아파트,신동아아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (k {name:’신동아아파트’}) RETURN k.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,서초e-편한세상2차아파트,서초e-편한세상2차아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (k {name:’서초e-편한세상2차아파트’}) RETURN k.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,방배브라운스톤아파트,방배브라운스톤아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’방배브라운스톤아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,서초한신리빙타워아파트,서초한신리빙타워아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’서초한신리빙타워아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,신영체르니아파트,신영체르니아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’신영체르니아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,쌍용예가클래식아파트,쌍용예가클래식아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’쌍용예가클래식아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,아크로리버뷰신반포아파트,아크로리버뷰신반포아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’아크로리버뷰신반포아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,아크로비스타아파트,아크로비스타아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’아크로비스타아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,방배아크로리버아파트,방배아크로리버아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’방배아크로리버아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,래미안원베일리아파트,래미안원베일리아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’래미안원베일리아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,서초더샵포레아파트,서초더샵포레아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’서초더샵포레아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,더샵반포리버파크(도시형)아파트,더샵반포리버파크(도시형)아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (k {name:’더샵반포리버파크(도시형)아파트’}) RETURN k.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,방배우성아파트,방배우성아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’방배우성아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,아크로비스타아파트,아크로비스타아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (k {name:’아크로비스타아파트’}) RETURN k.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,롯데캐슬클래식아파트,롯데캐슬클래식아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’롯데캐슬클래식아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,양재우성KBS(113동)아파트,양재우성KBS(113동)아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’양재우성KBS(113동)아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,반포리체아파트,반포리체아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’반포리체아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,디에이치라클라스아파트,디에이치라클라스아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (k {name:’디에이치라클라스아파트’}) RETURN k.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,반포푸르지오아파트,반포푸르지오아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’반포푸르지오아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,아크로비스타아파트,아크로비스타아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’아크로비스타아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,우면한라아파트,우면한라아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (k {name:’우면한라아파트’}) RETURN k.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,방배우성아파트,방배우성아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’방배우성아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,롯데캐슬주피터아파트,롯데캐슬주피터아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’롯데캐슬주피터아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,신반포15차아파트,신반포15차아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’신반포15차아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,임광3차아파트,임광3차아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (k {name:’임광3차아파트’}) RETURN k.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,신반포11차아파트,신반포11차아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’신반포11차아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,양재우성KBS(113동)아파트,양재우성KBS(113동)아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (k {name:’양재우성KBS(113동)아파트’}) RETURN k.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,헤센파크힐아파트,헤센파크힐아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’헤센파크힐아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,신화아파트,신화아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (k {name:’신화아파트’}) RETURN k.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,서초e-편한세상5차아파트,서초e-편한세상5차아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (k {name:’서초e-편한세상5차아파트’}) RETURN k.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,래미안리더스원아파트,래미안리더스원아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’래미안리더스원아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,서초아트자이아파트,서초아트자이아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’서초아트자이아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,서초아트자이아파트,서초아트자이아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’서초아트자이아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,서초e-편한세상5차아파트,서초e-편한세상5차아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’서초e-편한세상5차아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,신반포12차아파트,신반포12차아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’신반포12차아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,아남아파트,아남아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’아남아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,방배e-편한세상3차아파트,방배e-편한세상3차아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’방배e-편한세상3차아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,삼익아파트,삼익아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (k {name:’삼익아파트’}) RETURN k.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,서초한신아파트,서초한신아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’서초한신아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,신반포25차아파트,신반포25차아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’신반포25차아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,래미안원베일리아파트,래미안원베일리아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’래미안원베일리아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,서초트라팰리스아파트,서초트라팰리스아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (k {name:’서초트라팰리스아파트’}) RETURN k.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,임광3차아파트,임광3차아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (k {name:’임광3차아파트’}) RETURN k.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,신반포20차아파트,신반포20차아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (k {name:’신반포20차아파트’}) RETURN k.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,신반포궁전아파트,신반포궁전아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’신반포궁전아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,래미안퍼스티지아파트,래미안퍼스티지아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’래미안퍼스티지아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,잠원한신아파트,잠원한신아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (k {name:’잠원한신아파트’}) RETURN k.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,르엘신반포파크애비뉴아파트,르엘신반포파크애비뉴아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (k {name:’르엘신반포파크애비뉴아파트’}) RETURN k.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,신반포18차(337동)아파트,신반포18차(337동)아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (k {name:’신반포18차(337동)아파트’}) RETURN k.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,신반포21차아파트,신반포21차아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (k {name:’신반포21차아파트’}) RETURN k.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,신반포9차아파트,신반포9차아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’신반포9차아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,지웰홈스서초아파트,지웰홈스서초아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’지웰홈스서초아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,서초현대아파트,서초현대아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’서초현대아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,방배현대홈타운2차아파트,방배현대홈타운2차아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’방배현대홈타운2차아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,현대성우아파트,현대성우아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (k {name:’현대성우아파트’}) RETURN k.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,삼풍아파트,삼풍아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (k {name:’삼풍아파트’}) RETURN k.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,신반포7차아파트,신반포7차아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’신반포7차아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,신반포15차아파트,신반포15차아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’신반포15차아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,서초현대아파트,서초현대아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’서초현대아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,강남원효성아파트,강남원효성아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (k {name:’강남원효성아파트’}) RETURN k.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,신반포16차아파트,신반포16차아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’신반포16차아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,신동아1차아파트,신동아1차아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’신동아1차아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,방배아트자이아파트,방배아트자이아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’방배아트자이아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,동고아파트,동고아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’동고아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,서초포레스타7단지아파트,서초포레스타7단지아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’서초포레스타7단지아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,롯데캐슬헤론아파트,롯데캐슬헤론아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’롯데캐슬헤론아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,신반포12차아파트,신반포12차아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (k {name:’신반포12차아파트’}) RETURN k.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,임광3차아파트,임광3차아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’임광3차아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,방배래미안타워아파트,방배래미안타워아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’방배래미안타워아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,대림아파트,대림아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (k {name:’대림아파트’}) RETURN k.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,신반포15차아파트,신반포15차아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’신반포15차아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,래미안신반포리오센트아파트,래미안신반포리오센트아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’래미안신반포리오센트아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,래미안서초스위트아파트,래미안서초스위트아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’래미안서초스위트아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,지웰홈스서초아파트,지웰홈스서초아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (k {name:’지웰홈스서초아파트’}) RETURN k.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,아크로리버뷰신반포아파트,아크로리버뷰신반포아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (k {name:’아크로리버뷰신반포아파트’}) RETURN k.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,서초리시온아파트,서초리시온아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’서초리시온아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,신화아파트,신화아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (k {name:’신화아파트’}) RETURN k.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,신반포21차아파트,신반포21차아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’신반포21차아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,서초네이처힐2단지아파트,서초네이처힐2단지아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (k {name:’서초네이처힐2단지아파트’}) RETURN k.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,잠원중앙하이츠(B동)아파트,잠원중앙하이츠(B동)아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’잠원중앙하이츠(B동)아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,방배아크로타워아파트,방배아크로타워아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (k {name:’방배아크로타워아파트’}) RETURN k.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,서초호반써밋아파트,서초호반써밋아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’서초호반써밋아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,동고아파트,동고아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’동고아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,반포자이아파트,반포자이아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’반포자이아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,반포주공1단지아파트,반포주공1단지아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’반포주공1단지아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,삼호가든맨션5차아파트,삼호가든맨션5차아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (k {name:’삼호가든맨션5차아파트’}) RETURN k.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,현대ESA아파트,현대ESA아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’현대ESA아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,래미안원베일리아파트,래미안원베일리아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (k {name:’래미안원베일리아파트’}) RETURN k.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,서초대우디오빌프라임아파트,서초대우디오빌프라임아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (k {name:’서초대우디오빌프라임아파트’}) RETURN k.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,서초포레스타5단지아파트,서초포레스타5단지아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’서초포레스타5단지아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,방배e-편한세상3차아파트,방배e-편한세상3차아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’방배e-편한세상3차아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,한라비발디스튜디오193(도시형)아파트,한라비발디스튜디오193(도시형)아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’한라비발디스튜디오193(도시형)아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,서초이오빌아파트,서초이오빌아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’서초이오빌아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,방배자이아파트,방배자이아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’방배자이아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,신반포4차아파트,신반포4차아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’신반포4차아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,반포르엘아파트,반포르엘아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’반포르엘아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,금호베스트빌아파트,금호베스트빌아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’금호베스트빌아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,방배서리풀e-편한세상아파트,방배서리풀e-편한세상아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (k {name:’방배서리풀e-편한세상아파트’}) RETURN k.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,신반포궁전아파트,신반포궁전아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’신반포궁전아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,아크로리버파크아파트,아크로리버파크아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’아크로리버파크아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,방배한신트리플아파트,방배한신트리플아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’방배한신트리플아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,잠원월드메르디앙아파트,잠원월드메르디앙아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’잠원월드메르디앙아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,방배e-편한세상3차아파트,방배e-편한세상3차아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (k {name:’방배e-편한세상3차아파트’}) RETURN k.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,서초네이처힐3단지아파트,서초네이처힐3단지아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (k {name:’서초네이처힐3단지아파트’}) RETURN k.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,신영체르니아파트,신영체르니아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (k {name:’신영체르니아파트’}) RETURN k.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,서초아트자이아파트,서초아트자이아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’서초아트자이아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,잠원대우아이빌아파트,잠원대우아이빌아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (k {name:’잠원대우아이빌아파트’}) RETURN k.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,잠원한신아파트,잠원한신아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’잠원한신아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,방배아크로타워아파트,방배아크로타워아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’방배아크로타워아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,밀라텔쉐르빌(엠쉐르빌)아파트,밀라텔쉐르빌(엠쉐르빌)아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (k {name:’밀라텔쉐르빌(엠쉐르빌)아파트’}) RETURN k.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,현대ESA2아파트,현대ESA2아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’현대ESA2아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,우성5차아파트,우성5차아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’우성5차아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,지웰홈스서초아파트,지웰홈스서초아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (k {name:’지웰홈스서초아파트’}) RETURN k.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,서초아트자이아파트,서초아트자이아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’서초아트자이아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,서초포레스타3단지아파트,서초포레스타3단지아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’서초포레스타3단지아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,강변아파트,강변아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’강변아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,신동아1차아파트,신동아1차아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’신동아1차아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,서초쌍용플래티넘아파트,서초쌍용플래티넘아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’서초쌍용플래티넘아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,신반포15차아파트,신반포15차아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’신반포15차아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,서초포레스타2단지아파트,서초포레스타2단지아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (k {name:’서초포레스타2단지아파트’}) RETURN k.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,쌍용예가클래식아파트,쌍용예가클래식아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (k {name:’쌍용예가클래식아파트’}) RETURN k.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,방배대우디오빌아파트,방배대우디오빌아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’방배대우디오빌아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,"임광1,2차아파트","임광1,2차아파트를 만든 건설사는 뭐야?",MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,"MATCH (n {name:’임광1,2차아파트’}) RETURN n.constructor",1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,신반포16차아파트,신반포16차아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (k {name:’신반포16차아파트’}) RETURN k.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,잠원한신아파트,잠원한신아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (k {name:’잠원한신아파트’}) RETURN k.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,신반포25차아파트,신반포25차아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’신반포25차아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,서초이오빌아파트,서초이오빌아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’서초이오빌아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,신반포18차(337동)아파트,신반포18차(337동)아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’신반포18차(337동)아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,래미안퍼스티지아파트,래미안퍼스티지아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’래미안퍼스티지아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,헤센파크힐아파트,헤센파크힐아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’헤센파크힐아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,아크로리버파크아파트,아크로리버파크아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (k {name:’아크로리버파크아파트’}) RETURN k.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,서초힐스아파트,서초힐스아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’서초힐스아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,코오롱아파트,코오롱아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (k {name:’코오롱아파트’}) RETURN k.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,우성5차아파트,우성5차아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (k {name:’우성5차아파트’}) RETURN k.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,래미안퍼스티지아파트,래미안퍼스티지아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’래미안퍼스티지아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,진흥아파트,진흥아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’진흥아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,서초한신리빙타워아파트,서초한신리빙타워아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (k {name:’서초한신리빙타워아파트’}) RETURN k.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,래미안서초에스티지S아파트,래미안서초에스티지S아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’래미안서초에스티지S아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,코오롱아파트,코오롱아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (k {name:’코오롱아파트’}) RETURN k.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,방배래미안타워아파트,방배래미안타워아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (k {name:’방배래미안타워아파트’}) RETURN k.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,유원서초아파트,유원서초아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’유원서초아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,서초대우아이빌아파트,서초대우아이빌아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (k {name:’서초대우아이빌아파트’}) RETURN k.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,삼호가든맨션5차아파트,삼호가든맨션5차아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’삼호가든맨션5차아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,신반포20차아파트,신반포20차아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’신반포20차아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,코오롱아파트,코오롱아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’코오롱아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,방배마에스트로아파트,방배마에스트로아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (k {name:’방배마에스트로아파트’}) RETURN k.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,서초네이처힐7단지아파트,서초네이처힐7단지아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’서초네이처힐7단지아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,방배현대홈타운1차아파트,방배현대홈타운1차아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’방배현대홈타운1차아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,롯데캐슬갤럭시1차아파트,롯데캐슬갤럭시1차아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’롯데캐슬갤럭시1차아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,잠원대우아이빌아파트,잠원대우아이빌아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’잠원대우아이빌아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,방배롯데캐슬아르떼아파트,방배롯데캐슬아르떼아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’방배롯데캐슬아르떼아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,삼호2차아파트,삼호2차아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (k {name:’삼호2차아파트’}) RETURN k.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,서초포레스타3단지아파트,서초포레스타3단지아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (k {name:’서초포레스타3단지아파트’}) RETURN k.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,강남역푸르지오시티(도시형)아파트,강남역푸르지오시티(도시형)아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’강남역푸르지오시티(도시형)아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,래미안서초에스티지S아파트,래미안서초에스티지S아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’래미안서초에스티지S아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,아크로리버파크아파트,아크로리버파크아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (k {name:’아크로리버파크아파트’}) RETURN k.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,신반포25차아파트,신반포25차아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’신반포25차아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,한신타운아파트,한신타운아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’한신타운아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,방배아크로타워아파트,방배아크로타워아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (k {name:’방배아크로타워아파트’}) RETURN k.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,방배서리풀e-편한세상아파트,방배서리풀e-편한세상아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’방배서리풀e-편한세상아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,진흥아파트,진흥아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’진흥아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,신반포16차아파트,신반포16차아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’신반포16차아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,마제스타시티힐스테이트서리풀아파트,마제스타시티힐스테이트서리풀아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’마제스타시티힐스테이트서리풀아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,한신타운아파트,한신타운아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’한신타운아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,서초대우디오빌프라임아파트,서초대우디오빌프라임아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’서초대우디오빌프라임아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,방배한신트리플아파트,방배한신트리플아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’방배한신트리플아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,래미안서초에스티지S아파트,래미안서초에스티지S아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’래미안서초에스티지S아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,대우효령아파트,대우효령아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’대우효령아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,킴스빌리지아파트,킴스빌리지아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’킴스빌리지아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,신반포7차아파트,신반포7차아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’신반포7차아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,래미안서초에스티지아파트,래미안서초에스티지아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’래미안서초에스티지아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,반포자이아파트,반포자이아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’반포자이아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,방배e-편한세상3차아파트,방배e-편한세상3차아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’방배e-편한세상3차아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,한신타운아파트,한신타운아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’한신타운아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,강변아파트,강변아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’강변아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,서초롯데캐슬프레지던트아파트,서초롯데캐슬프레지던트아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’서초롯데캐슬프레지던트아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,풍림아이원플러스아파트,풍림아이원플러스아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’풍림아이원플러스아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,서초쌍용플래티넘아파트,서초쌍용플래티넘아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’서초쌍용플래티넘아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,신반포4차아파트,신반포4차아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (k {name:’신반포4차아파트’}) RETURN k.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,서초네이처힐3단지아파트,서초네이처힐3단지아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’서초네이처힐3단지아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,지웰홈스서초아파트,지웰홈스서초아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’지웰홈스서초아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,서초현대아파트,서초현대아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (k {name:’서초현대아파트’}) RETURN k.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,방배브라운가아파트,방배브라운가아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’방배브라운가아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,반포미도2차아파트,반포미도2차아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’반포미도2차아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,서초푸르지오써밋아파트,서초푸르지오써밋아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’서초푸르지오써밋아파트’}) RETURN n.constructor,1,0
5,[mask_1]를 만든 건설사는 뭐야?,apt_name,서초아트자이아파트,서초아트자이아파트를 만든 건설사는 뭐야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].constructor,apt_name,MATCH (n {name:’서초아트자이아파트’}) RETURN n.constructor,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,서초포레스타3단지아파트,서초포레스타3단지아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (k {name:’서초포레스타3단지아파트’}) RETURN k.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,방배롯데캐슬로제아파트,방배롯데캐슬로제아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’방배롯데캐슬로제아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,마제스타시티힐스테이트서리풀아파트,마제스타시티힐스테이트서리풀아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’마제스타시티힐스테이트서리풀아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,반포리체아파트,반포리체아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (k {name:’반포리체아파트’}) RETURN k.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,동고아파트,동고아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’동고아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,쌍용예가클래식아파트,쌍용예가클래식아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’쌍용예가클래식아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,풍림아이원플러스아파트,풍림아이원플러스아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (k {name:’풍림아이원플러스아파트’}) RETURN k.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,서초현대4차아파트,서초현대4차아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (k {name:’서초현대4차아파트’}) RETURN k.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,삼익아파트,삼익아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’삼익아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,풍림아이원플러스아파트,풍림아이원플러스아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’풍림아이원플러스아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,우성5차아파트,우성5차아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’우성5차아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,신반포27차아파트,신반포27차아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’신반포27차아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,신반포25차아파트,신반포25차아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (k {name:’신반포25차아파트’}) RETURN k.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,동아아파트,동아아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (k {name:’동아아파트’}) RETURN k.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,서초센트럴아이파크아파트,서초센트럴아이파크아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’서초센트럴아이파크아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,서초네이처힐1단지아파트,서초네이처힐1단지아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’서초네이처힐1단지아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,신반포9차아파트,신반포9차아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’신반포9차아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,서초네이처힐4단지아파트,서초네이처힐4단지아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’서초네이처힐4단지아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,강남역푸르지오시티(도시형)아파트,강남역푸르지오시티(도시형)아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’강남역푸르지오시티(도시형)아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,방배서리풀e-편한세상아파트,방배서리풀e-편한세상아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’방배서리풀e-편한세상아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,방배롯데캐슬아르떼아파트,방배롯데캐슬아르떼아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’방배롯데캐슬아르떼아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,삼호한숲아파트,삼호한숲아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’삼호한숲아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,방배현대홈타운1차아파트,방배현대홈타운1차아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (k {name:’방배현대홈타운1차아파트’}) RETURN k.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,래미안서초유니빌아파트,래미안서초유니빌아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’래미안서초유니빌아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,마제스타시티힐스테이트서리풀아파트,마제스타시티힐스테이트서리풀아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’마제스타시티힐스테이트서리풀아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,서초호반써밋아파트,서초호반써밋아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (k {name:’서초호반써밋아파트’}) RETURN k.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,래미안서초에스티지S아파트,래미안서초에스티지S아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’래미안서초에스티지S아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,서초LH4단지아파트,서초LH4단지아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’서초LH4단지아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,서초롯데캐슬리버티아파트,서초롯데캐슬리버티아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’서초롯데캐슬리버티아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,삼성쉐르빌II아파트,삼성쉐르빌II아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’삼성쉐르빌II아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,서초네이처힐3단지아파트,서초네이처힐3단지아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (k {name:’서초네이처힐3단지아파트’}) RETURN k.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,동고아파트,동고아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’동고아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,신반포10차아파트,신반포10차아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’신반포10차아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,방배e-편한세상1차아파트,방배e-편한세상1차아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’방배e-편한세상1차아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,현대ESA아파트,현대ESA아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’현대ESA아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,롯데캐슬갤럭시2차아파트,롯데캐슬갤럭시2차아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’롯데캐슬갤럭시2차아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,방배e-편한세상3차아파트,방배e-편한세상3차아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’방배e-편한세상3차아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,방배브라운가아파트,방배브라운가아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’방배브라운가아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,방배브라운가아파트,방배브라운가아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (k {name:’방배브라운가아파트’}) RETURN k.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,삼호3차아파트,삼호3차아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’삼호3차아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,서초힐스아파트,서초힐스아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (k {name:’서초힐스아파트’}) RETURN k.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,반포리체아파트,반포리체아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (k {name:’반포리체아파트’}) RETURN k.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,현대ESA2아파트,현대ESA2아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’현대ESA2아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,신반포7차아파트,신반포7차아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (k {name:’신반포7차아파트’}) RETURN k.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,서초이오빌아파트,서초이오빌아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (k {name:’서초이오빌아파트’}) RETURN k.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,방배래미안타워아파트,방배래미안타워아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’방배래미안타워아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,잠원대우아이빌아파트,잠원대우아이빌아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’잠원대우아이빌아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,방배동부센트레빌아파트,방배동부센트레빌아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’방배동부센트레빌아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,방배현대홈타운3차아파트,방배현대홈타운3차아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (k {name:’방배현대홈타운3차아파트’}) RETURN k.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,신반포27차아파트,신반포27차아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’신반포27차아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,삼성서초가든스위트아파트,삼성서초가든스위트아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’삼성서초가든스위트아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,헤센파크힐아파트,헤센파크힐아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (k {name:’헤센파크힐아파트’}) RETURN k.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,서초네이처힐4단지아파트,서초네이처힐4단지아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’서초네이처힐4단지아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,서초교대e편한세상아파트,서초교대e편한세상아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’서초교대e편한세상아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,신반포7차아파트,신반포7차아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’신반포7차아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,잠원훼미리아파트,잠원훼미리아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’잠원훼미리아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,반포자이아파트,반포자이아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (k {name:’반포자이아파트’}) RETURN k.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,서초호반써밋아파트,서초호반써밋아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (k {name:’서초호반써밋아파트’}) RETURN k.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,서초아이파크아파트,서초아이파크아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’서초아이파크아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,서초e-편한세상2차아파트,서초e-편한세상2차아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’서초e-편한세상2차아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,반포써밋아파트,반포써밋아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’반포써밋아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,동원베네스트아파트,동원베네스트아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’동원베네스트아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,래미안신반포팰리스아파트,래미안신반포팰리스아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’래미안신반포팰리스아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,삼호2차아파트,삼호2차아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (k {name:’삼호2차아파트’}) RETURN k.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,방배e-편한세상1차아파트,방배e-편한세상1차아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’방배e-편한세상1차아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,"임광1,2차아파트","임광1,2차아파트의 용적률은 얼마야?",MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,"MATCH (k {name:’임광1,2차아파트’}) RETURN k.floor_area_ratio",1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,신반포16차아파트,신반포16차아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’신반포16차아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,신반포궁전아파트,신반포궁전아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’신반포궁전아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,아크로리버뷰신반포아파트,아크로리버뷰신반포아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’아크로리버뷰신반포아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,래미안서초에스티지S아파트,래미안서초에스티지S아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’래미안서초에스티지S아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,삼호3차아파트,삼호3차아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (k {name:’삼호3차아파트’}) RETURN k.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,잠원훼미리아파트,잠원훼미리아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (k {name:’잠원훼미리아파트’}) RETURN k.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,서초대우아이빌아파트,서초대우아이빌아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (k {name:’서초대우아이빌아파트’}) RETURN k.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,서초푸르지오써밋아파트,서초푸르지오써밋아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’서초푸르지오써밋아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,방배마에스트로아파트,방배마에스트로아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (k {name:’방배마에스트로아파트’}) RETURN k.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,르엘신반포파크애비뉴아파트,르엘신반포파크애비뉴아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’르엘신반포파크애비뉴아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,삼호한숲아파트,삼호한숲아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’삼호한숲아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,녹원한신아파트,녹원한신아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’녹원한신아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,녹원한신아파트,녹원한신아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (k {name:’녹원한신아파트’}) RETURN k.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,서초한신리빙타워아파트,서초한신리빙타워아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’서초한신리빙타워아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,아남아파트,아남아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’아남아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,삼호4차아파트,삼호4차아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’삼호4차아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,잠원한신아파트,잠원한신아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (k {name:’잠원한신아파트’}) RETURN k.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,진흥아파트,진흥아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (k {name:’진흥아파트’}) RETURN k.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,서초e-편한세상5차아파트,서초e-편한세상5차아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’서초e-편한세상5차아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,서초리시온아파트,서초리시온아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’서초리시온아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,신반포10차아파트,신반포10차아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’신반포10차아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,잠원현대훼밀리아파트,잠원현대훼밀리아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’잠원현대훼밀리아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,삼익아파트,삼익아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (k {name:’삼익아파트’}) RETURN k.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,방배그랑자이아파트,방배그랑자이아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’방배그랑자이아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,서초호반써밋아파트,서초호반써밋아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’서초호반써밋아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,래미안원베일리아파트,래미안원베일리아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’래미안원베일리아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,신반포자이아파트,신반포자이아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’신반포자이아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,신반포자이아파트,신반포자이아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’신반포자이아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,엠브이아파트,엠브이아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (k {name:’엠브이아파트’}) RETURN k.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,방배아이파크아파트,방배아이파크아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’방배아이파크아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,잠원대우아이빌아파트,잠원대우아이빌아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’잠원대우아이빌아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,방배현대홈타운1차아파트,방배현대홈타운1차아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’방배현대홈타운1차아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,서초현대아파트,서초현대아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’서초현대아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,신반포청구아파트,신반포청구아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’신반포청구아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,신반포궁전아파트,신반포궁전아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (k {name:’신반포궁전아파트’}) RETURN k.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,방배아크로리버아파트,방배아크로리버아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’방배아크로리버아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,삼성쉐르빌II아파트,삼성쉐르빌II아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (k {name:’삼성쉐르빌II아파트’}) RETURN k.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,디에이치라클라스아파트,디에이치라클라스아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (k {name:’디에이치라클라스아파트’}) RETURN k.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,방배현대홈타운3차아파트,방배현대홈타운3차아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’방배현대홈타운3차아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,반포센트럴자이아파트,반포센트럴자이아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (k {name:’반포센트럴자이아파트’}) RETURN k.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,힐스테이트서초젠트리스아파트,힐스테이트서초젠트리스아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’힐스테이트서초젠트리스아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,현대슈퍼빌아파트,현대슈퍼빌아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’현대슈퍼빌아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,방배아크로리버아파트,방배아크로리버아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’방배아크로리버아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,대우효령아파트,대우효령아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’대우효령아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,동고아파트,동고아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (k {name:’동고아파트’}) RETURN k.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,신반포자이아파트,신반포자이아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (k {name:’신반포자이아파트’}) RETURN k.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,서초리시온아파트,서초리시온아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’서초리시온아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,신반포7차아파트,신반포7차아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (k {name:’신반포7차아파트’}) RETURN k.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,신반포11차아파트,신반포11차아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’신반포11차아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,신반포2차아파트,신반포2차아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (k {name:’신반포2차아파트’}) RETURN k.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,방배동부센트레빌아파트,방배동부센트레빌아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (k {name:’방배동부센트레빌아파트’}) RETURN k.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,아크로비스타아파트,아크로비스타아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’아크로비스타아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,서초네이처힐1단지아파트,서초네이처힐1단지아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’서초네이처힐1단지아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,서초네이처힐6단지아파트,서초네이처힐6단지아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’서초네이처힐6단지아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,신반포21차아파트,신반포21차아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’신반포21차아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,현대ESA아파트,현대ESA아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (k {name:’현대ESA아파트’}) RETURN k.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,래미안원베일리아파트,래미안원베일리아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’래미안원베일리아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,래미안신반포리오센트아파트,래미안신반포리오센트아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’래미안신반포리오센트아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,반포센트럴자이아파트,반포센트럴자이아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’반포센트럴자이아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,반포자이아파트,반포자이아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (k {name:’반포자이아파트’}) RETURN k.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,서초네이처힐6단지아파트,서초네이처힐6단지아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’서초네이처힐6단지아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,신반포2차아파트,신반포2차아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (k {name:’신반포2차아파트’}) RETURN k.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,방배아이파크아파트,방배아이파크아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (k {name:’방배아이파크아파트’}) RETURN k.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,서초포레스타5단지아파트,서초포레스타5단지아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’서초포레스타5단지아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,서초힐스아파트,서초힐스아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’서초힐스아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,서초네이처힐1단지아파트,서초네이처힐1단지아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’서초네이처힐1단지아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,신반포15차아파트,신반포15차아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’신반포15차아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,방배브라운가아파트,방배브라운가아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (k {name:’방배브라운가아파트’}) RETURN k.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,반포미도2차아파트,반포미도2차아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’반포미도2차아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,래미안신반포팰리스아파트,래미안신반포팰리스아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (k {name:’래미안신반포팰리스아파트’}) RETURN k.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,동원베네스트아파트,동원베네스트아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (k {name:’동원베네스트아파트’}) RETURN k.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,코오롱아파트,코오롱아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’코오롱아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,강남원효성아파트,강남원효성아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’강남원효성아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,신반포17차아파트,신반포17차아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (k {name:’신반포17차아파트’}) RETURN k.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,방배서리풀e-편한세상아파트,방배서리풀e-편한세상아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’방배서리풀e-편한세상아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,신반포27차아파트,신반포27차아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’신반포27차아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,LH서초5단지아파트,LH서초5단지아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (k {name:’LH서초5단지아파트’}) RETURN k.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,반포써밋아파트,반포써밋아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (k {name:’반포써밋아파트’}) RETURN k.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,금호베스트빌아파트,금호베스트빌아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (k {name:’금호베스트빌아파트’}) RETURN k.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,서초포레스타2단지아파트,서초포레스타2단지아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’서초포레스타2단지아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,방배서리풀e-편한세상아파트,방배서리풀e-편한세상아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’방배서리풀e-편한세상아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,서초푸르지오써밋아파트,서초푸르지오써밋아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’서초푸르지오써밋아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,서초e-편한세상1차아파트,서초e-편한세상1차아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (k {name:’서초e-편한세상1차아파트’}) RETURN k.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,서초현대아파트,서초현대아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (k {name:’서초현대아파트’}) RETURN k.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,방배롯데캐슬로제아파트,방배롯데캐슬로제아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’방배롯데캐슬로제아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,방배브라운스톤아파트,방배브라운스톤아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’방배브라운스톤아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,잠원중앙하이츠(B동)아파트,잠원중앙하이츠(B동)아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’잠원중앙하이츠(B동)아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,유원서초아파트,유원서초아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (k {name:’유원서초아파트’}) RETURN k.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,반포미도2차아파트,반포미도2차아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’반포미도2차아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,방배대우디오빌아파트,방배대우디오빌아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (k {name:’방배대우디오빌아파트’}) RETURN k.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,방배대우디오빌아파트,방배대우디오빌아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (k {name:’방배대우디오빌아파트’}) RETURN k.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,신영체르니아파트,신영체르니아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’신영체르니아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,진흥아파트,진흥아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’진흥아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,신반포자이아파트,신반포자이아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (k {name:’신반포자이아파트’}) RETURN k.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,신반포21차아파트,신반포21차아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’신반포21차아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,삼풍아파트,삼풍아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’삼풍아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,래미안리더스원아파트,래미안리더스원아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’래미안리더스원아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,롯데캐슬헤론아파트,롯데캐슬헤론아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’롯데캐슬헤론아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,래미안신반포팰리스아파트,래미안신반포팰리스아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’래미안신반포팰리스아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,방배마에스트로아파트,방배마에스트로아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’방배마에스트로아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,방배아크로타워아파트,방배아크로타워아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (k {name:’방배아크로타워아파트’}) RETURN k.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,방배현대홈타운3차아파트,방배현대홈타운3차아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’방배현대홈타운3차아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,서초더샵포레아파트,서초더샵포레아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (k {name:’서초더샵포레아파트’}) RETURN k.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,현대ESA2아파트,현대ESA2아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’현대ESA2아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,신영체르니아파트,신영체르니아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’신영체르니아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,신영체르니아파트,신영체르니아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’신영체르니아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,서초네이처힐7단지아파트,서초네이처힐7단지아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’서초네이처힐7단지아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,신반포10차아파트,신반포10차아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’신반포10차아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,서초그랑자이아파트,서초그랑자이아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (k {name:’서초그랑자이아파트’}) RETURN k.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,신반포15차아파트,신반포15차아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (k {name:’신반포15차아파트’}) RETURN k.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,서초한신리빙타워아파트,서초한신리빙타워아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’서초한신리빙타워아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,서초더샵포레아파트,서초더샵포레아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (k {name:’서초더샵포레아파트’}) RETURN k.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,신반포22차아파트,신반포22차아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (k {name:’신반포22차아파트’}) RETURN k.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,잠원한신그린아파트,잠원한신그린아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (k {name:’잠원한신그린아파트’}) RETURN k.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,신반포11차아파트,신반포11차아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’신반포11차아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,방배동부센트레빌아파트,방배동부센트레빌아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’방배동부센트레빌아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,LH서초5단지아파트,LH서초5단지아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’LH서초5단지아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,방배브라운가아파트,방배브라운가아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (k {name:’방배브라운가아파트’}) RETURN k.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,LH서초5단지아파트,LH서초5단지아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’LH서초5단지아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,신반포12차아파트,신반포12차아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’신반포12차아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,반포자이아파트,반포자이아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’반포자이아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,신반포8차아파트,신반포8차아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’신반포8차아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,서초아이파크아파트,서초아이파크아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (k {name:’서초아이파크아파트’}) RETURN k.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,르엘신반포파크애비뉴아파트,르엘신반포파크애비뉴아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’르엘신반포파크애비뉴아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,DK밸리뷰서초(주)아파트,DK밸리뷰서초(주)아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’DK밸리뷰서초(주)아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,한라비발디스튜디오193(도시형)아파트,한라비발디스튜디오193(도시형)아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (k {name:’한라비발디스튜디오193(도시형)아파트’}) RETURN k.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,서초삼성래미안아파트,서초삼성래미안아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (k {name:’서초삼성래미안아파트’}) RETURN k.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,한신로얄아파트,한신로얄아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (k {name:’한신로얄아파트’}) RETURN k.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,신반포25차아파트,신반포25차아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (k {name:’신반포25차아파트’}) RETURN k.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,서초LH4단지아파트,서초LH4단지아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’서초LH4단지아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,삼호가든맨션5차아파트,삼호가든맨션5차아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (k {name:’삼호가든맨션5차아파트’}) RETURN k.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,방배e-편한세상1차아파트,방배e-편한세상1차아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’방배e-편한세상1차아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,금호베스트빌아파트,금호베스트빌아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’금호베스트빌아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,서초포레스타3단지아파트,서초포레스타3단지아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’서초포레스타3단지아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,헤센파크힐아파트,헤센파크힐아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’헤센파크힐아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,방배현대홈타운3차아파트,방배현대홈타운3차아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’방배현대홈타운3차아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,서초네이처힐3단지아파트,서초네이처힐3단지아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’서초네이처힐3단지아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,현대아파트,현대아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’현대아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,반포주공1단지아파트,반포주공1단지아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (k {name:’반포주공1단지아파트’}) RETURN k.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,서초네이처힐1단지아파트,서초네이처힐1단지아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’서초네이처힐1단지아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,신반포17차아파트,신반포17차아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’신반포17차아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,서초이오빌아파트,서초이오빌아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’서초이오빌아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,반포힐스테이트아파트,반포힐스테이트아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (k {name:’반포힐스테이트아파트’}) RETURN k.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,잠원월드메르디앙아파트,잠원월드메르디앙아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’잠원월드메르디앙아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,풍림아이원플러스아파트,풍림아이원플러스아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’풍림아이원플러스아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,코오롱아파트,코오롱아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’코오롱아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,방배래미안아트힐아파트,방배래미안아트힐아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’방배래미안아트힐아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,서초e-편한세상1차아파트,서초e-편한세상1차아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’서초e-편한세상1차아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,잠원훼미리아파트,잠원훼미리아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’잠원훼미리아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,서초이오빌아파트,서초이오빌아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’서초이오빌아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,강남원효성아파트,강남원효성아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’강남원효성아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,잠원월드메르디앙아파트,잠원월드메르디앙아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’잠원월드메르디앙아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,서초더샵포레아파트,서초더샵포레아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (k {name:’서초더샵포레아파트’}) RETURN k.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,진흥아파트,진흥아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (k {name:’진흥아파트’}) RETURN k.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,더샵서초아파트,더샵서초아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’더샵서초아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,서초호반써밋아파트,서초호반써밋아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’서초호반써밋아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,르엘신반포아파트,르엘신반포아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (k {name:’르엘신반포아파트’}) RETURN k.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,삼호1차아파트,삼호1차아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (k {name:’삼호1차아파트’}) RETURN k.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,롯데캐슬주피터아파트,롯데캐슬주피터아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’롯데캐슬주피터아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,서초롯데캐슬프레지던트아파트,서초롯데캐슬프레지던트아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’서초롯데캐슬프레지던트아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,서초네이처힐2단지아파트,서초네이처힐2단지아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’서초네이처힐2단지아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,방배롯데캐슬로제아파트,방배롯데캐슬로제아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (k {name:’방배롯데캐슬로제아파트’}) RETURN k.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,신반포2차아파트,신반포2차아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (k {name:’신반포2차아파트’}) RETURN k.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,래미안서초에스티지아파트,래미안서초에스티지아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (k {name:’래미안서초에스티지아파트’}) RETURN k.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,지웰홈스서초아파트,지웰홈스서초아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (k {name:’지웰홈스서초아파트’}) RETURN k.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,한신서래아파트,한신서래아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’한신서래아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,서초래미안아파트,서초래미안아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’서초래미안아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,방배e-편한세상1차아파트,방배e-편한세상1차아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (k {name:’방배e-편한세상1차아파트’}) RETURN k.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,신반포12차아파트,신반포12차아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’신반포12차아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,서초대우디오빌프라임아파트,서초대우디오빌프라임아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’서초대우디오빌프라임아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,양재우성아파트,양재우성아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’양재우성아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,방배롯데캐슬아르떼아파트,방배롯데캐슬아르떼아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’방배롯데캐슬아르떼아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,서초포레스타2단지아파트,서초포레스타2단지아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’서초포레스타2단지아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,방배e-편한세상3차아파트,방배e-편한세상3차아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’방배e-편한세상3차아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,DK밸리뷰서초(주)아파트,DK밸리뷰서초(주)아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’DK밸리뷰서초(주)아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,잠원현대훼밀리아파트,잠원현대훼밀리아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (k {name:’잠원현대훼밀리아파트’}) RETURN k.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,삼환나띠르빌아파트,삼환나띠르빌아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (k {name:’삼환나띠르빌아파트’}) RETURN k.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,방배마에스트로아파트,방배마에스트로아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’방배마에스트로아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,신반포22차아파트,신반포22차아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (k {name:’신반포22차아파트’}) RETURN k.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,LH서초5단지아파트,LH서초5단지아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (k {name:’LH서초5단지아파트’}) RETURN k.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,서초트라팰리스아파트,서초트라팰리스아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (k {name:’서초트라팰리스아파트’}) RETURN k.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,동원베네스트아파트,동원베네스트아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’동원베네스트아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,서초아이파크아파트,서초아이파크아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’서초아이파크아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,서초쌍용플래티넘아파트,서초쌍용플래티넘아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (k {name:’서초쌍용플래티넘아파트’}) RETURN k.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,방배래미안아파트,방배래미안아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’방배래미안아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,신반포15차아파트,신반포15차아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (k {name:’신반포15차아파트’}) RETURN k.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,신화아파트,신화아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’신화아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,동고아파트,동고아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’동고아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,양재우성KBS(113동)아파트,양재우성KBS(113동)아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’양재우성KBS(113동)아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,강남역푸르지오시티(도시형)아파트,강남역푸르지오시티(도시형)아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’강남역푸르지오시티(도시형)아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,래미안퍼스티지아파트,래미안퍼스티지아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (k {name:’래미안퍼스티지아파트’}) RETURN k.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,현대아파트,현대아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’현대아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,서초롯데캐슬프레지던트아파트,서초롯데캐슬프레지던트아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’서초롯데캐슬프레지던트아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,서초자이아파트,서초자이아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’서초자이아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,반포르엘아파트,반포르엘아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (k {name:’반포르엘아파트’}) RETURN k.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,반포힐스테이트아파트,반포힐스테이트아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (k {name:’반포힐스테이트아파트’}) RETURN k.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,헤센파크힐아파트,헤센파크힐아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’헤센파크힐아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,서초네이처힐4단지아파트,서초네이처힐4단지아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (k {name:’서초네이처힐4단지아파트’}) RETURN k.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,신반포10차아파트,신반포10차아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’신반포10차아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,반포한신타워아파트,반포한신타워아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’반포한신타워아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,서초e-편한세상1차아파트,서초e-편한세상1차아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’서초e-편한세상1차아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,서초삼성래미안아파트,서초삼성래미안아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (k {name:’서초삼성래미안아파트’}) RETURN k.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,아크로리버파크아파트,아크로리버파크아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (k {name:’아크로리버파크아파트’}) RETURN k.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,동원베네스트아파트,동원베네스트아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’동원베네스트아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,서초푸르지오써밋아파트,서초푸르지오써밋아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’서초푸르지오써밋아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,서초래미안아파트,서초래미안아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’서초래미안아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,반포힐스테이트아파트,반포힐스테이트아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’반포힐스테이트아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,래미안신반포리오센트아파트,래미안신반포리오센트아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (k {name:’래미안신반포리오센트아파트’}) RETURN k.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,방배대우디오빌아파트,방배대우디오빌아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (k {name:’방배대우디오빌아파트’}) RETURN k.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,삼호한숲아파트,삼호한숲아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’삼호한숲아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,래미안원베일리아파트,래미안원베일리아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (k {name:’래미안원베일리아파트’}) RETURN k.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,래미안신반포팰리스아파트,래미안신반포팰리스아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’래미안신반포팰리스아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,삼성서초가든스위트아파트,삼성서초가든스위트아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (k {name:’삼성서초가든스위트아파트’}) RETURN k.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,래미안신반포팰리스아파트,래미안신반포팰리스아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’래미안신반포팰리스아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,래미안서초스위트아파트,래미안서초스위트아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’래미안서초스위트아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,신영체르니아파트,신영체르니아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’신영체르니아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,삼호1차아파트,삼호1차아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’삼호1차아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,삼성쉐르빌II아파트,삼성쉐르빌II아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’삼성쉐르빌II아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,블루힐하우스아파트,블루힐하우스아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’블루힐하우스아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,반포힐스테이트아파트,반포힐스테이트아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (k {name:’반포힐스테이트아파트’}) RETURN k.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,래미안서초유니빌아파트,래미안서초유니빌아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’래미안서초유니빌아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,양재우성아파트,양재우성아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (k {name:’양재우성아파트’}) RETURN k.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,서초현대4차아파트,서초현대4차아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’서초현대4차아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,서초교대e편한세상아파트,서초교대e편한세상아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’서초교대e편한세상아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,한신로얄아파트,한신로얄아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (k {name:’한신로얄아파트’}) RETURN k.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,신반포10차아파트,신반포10차아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’신반포10차아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,래미안서초스위트아파트,래미안서초스위트아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’래미안서초스위트아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,삼호4차아파트,삼호4차아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’삼호4차아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,신반포4차아파트,신반포4차아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’신반포4차아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,서초네이처힐1단지아파트,서초네이처힐1단지아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (n {name:’서초네이처힐1단지아파트’}) RETURN n.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,잠원훼미리아파트,잠원훼미리아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (k {name:’잠원훼미리아파트’}) RETURN k.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,블루힐하우스아파트,블루힐하우스아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (k {name:’블루힐하우스아파트’}) RETURN k.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,아크로리버뷰신반포아파트,아크로리버뷰신반포아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (k {name:’아크로리버뷰신반포아파트’}) RETURN k.floor_area_ratio,1,0
6,[mask_1]의 용적률은 얼마야?,apt_name,한신로얄아파트,한신로얄아파트의 용적률은 얼마야?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].floor_area_ratio,apt_name,MATCH (k {name:’한신로얄아파트’}) RETURN k.floor_area_ratio,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,LH서초5단지아파트,LH서초5단지아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’LH서초5단지아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,신화아파트,신화아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (k {name:’신화아파트’}) RETURN k.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,서초트라팰리스아파트,서초트라팰리스아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (k {name:’서초트라팰리스아파트’}) RETURN k.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,강남역푸르지오시티(도시형)아파트,강남역푸르지오시티(도시형)아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’강남역푸르지오시티(도시형)아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,방배롯데캐슬로제아파트,방배롯데캐슬로제아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’방배롯데캐슬로제아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,서초현대4차아파트,서초현대4차아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (k {name:’서초현대4차아파트’}) RETURN k.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,서초현대아파트,서초현대아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (k {name:’서초현대아파트’}) RETURN k.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,서초롯데캐슬리버티아파트,서초롯데캐슬리버티아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’서초롯데캐슬리버티아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,삼성서초가든스위트아파트,삼성서초가든스위트아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (k {name:’삼성서초가든스위트아파트’}) RETURN k.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,방배현대홈타운3차아파트,방배현대홈타운3차아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (k {name:’방배현대홈타운3차아파트’}) RETURN k.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,방배e-편한세상3차아파트,방배e-편한세상3차아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’방배e-편한세상3차아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,서초교대e편한세상아파트,서초교대e편한세상아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’서초교대e편한세상아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,현대멤피스아파트,현대멤피스아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (k {name:’현대멤피스아파트’}) RETURN k.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,서초호반써밋아파트,서초호반써밋아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (k {name:’서초호반써밋아파트’}) RETURN k.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,삼환나띠르빌아파트,삼환나띠르빌아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (k {name:’삼환나띠르빌아파트’}) RETURN k.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,서초푸르지오써밋아파트,서초푸르지오써밋아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’서초푸르지오써밋아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,반포르엘아파트,반포르엘아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’반포르엘아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,신반포25차아파트,신반포25차아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (k {name:’신반포25차아파트’}) RETURN k.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,래미안서초스위트아파트,래미안서초스위트아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’래미안서초스위트아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,방배e-편한세상1차아파트,방배e-편한세상1차아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’방배e-편한세상1차아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,더샵서초아파트,더샵서초아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’더샵서초아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,방배한신트리플아파트,방배한신트리플아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’방배한신트리플아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,아크로리버파크아파트,아크로리버파크아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’아크로리버파크아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,반포리체아파트,반포리체아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’반포리체아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,반포한신타워아파트,반포한신타워아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’반포한신타워아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,우면한라아파트,우면한라아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’우면한라아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,동원베네스트아파트,동원베네스트아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’동원베네스트아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,서초쌍용플래티넘아파트,서초쌍용플래티넘아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (k {name:’서초쌍용플래티넘아파트’}) RETURN k.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,래미안원베일리아파트,래미안원베일리아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (k {name:’래미안원베일리아파트’}) RETURN k.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,신반포8차아파트,신반포8차아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’신반포8차아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,서초네이처힐3단지아파트,서초네이처힐3단지아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’서초네이처힐3단지아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,서초그랑자이아파트,서초그랑자이아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (k {name:’서초그랑자이아파트’}) RETURN k.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,서초쌍용플래티넘아파트,서초쌍용플래티넘아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’서초쌍용플래티넘아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,르엘신반포아파트,르엘신반포아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (k {name:’르엘신반포아파트’}) RETURN k.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,신동아2차아파트,신동아2차아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’신동아2차아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,서초리시온아파트,서초리시온아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (k {name:’서초리시온아파트’}) RETURN k.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,서초한신리빙타워아파트,서초한신리빙타워아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (k {name:’서초한신리빙타워아파트’}) RETURN k.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,방배아크로타워아파트,방배아크로타워아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’방배아크로타워아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,르엘신반포아파트,르엘신반포아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (k {name:’르엘신반포아파트’}) RETURN k.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,잠원한신그린아파트,잠원한신그린아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’잠원한신그린아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,서초자이아파트,서초자이아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’서초자이아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,DK밸리뷰서초(주)아파트,DK밸리뷰서초(주)아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’DK밸리뷰서초(주)아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,래미안서초에스티지S아파트,래미안서초에스티지S아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’래미안서초에스티지S아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,방배대우디오빌아파트,방배대우디오빌아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (k {name:’방배대우디오빌아파트’}) RETURN k.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,반포주공1단지아파트,반포주공1단지아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’반포주공1단지아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,래미안서초유니빌아파트,래미안서초유니빌아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (k {name:’래미안서초유니빌아파트’}) RETURN k.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,삼호2차아파트,삼호2차아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’삼호2차아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,삼환나띠르빌아파트,삼환나띠르빌아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (k {name:’삼환나띠르빌아파트’}) RETURN k.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,더샵서초아파트,더샵서초아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’더샵서초아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,롯데캐슬갤럭시2차아파트,롯데캐슬갤럭시2차아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (k {name:’롯데캐슬갤럭시2차아파트’}) RETURN k.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,롯데캐슬주피터아파트,롯데캐슬주피터아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’롯데캐슬주피터아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,삼호2차아파트,삼호2차아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (k {name:’삼호2차아파트’}) RETURN k.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,신반포20차아파트,신반포20차아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (k {name:’신반포20차아파트’}) RETURN k.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,아크로리버파크아파트,아크로리버파크아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (k {name:’아크로리버파크아파트’}) RETURN k.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,신반포9차아파트,신반포9차아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’신반포9차아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,방배롯데캐슬아르떼아파트,방배롯데캐슬아르떼아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’방배롯데캐슬아르떼아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,서초e-편한세상1차아파트,서초e-편한세상1차아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’서초e-편한세상1차아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,서초포레스타6단지아파트,서초포레스타6단지아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’서초포레스타6단지아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,신반포15차아파트,신반포15차아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’신반포15차아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,반포래미안아이파크아파트,반포래미안아이파크아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’반포래미안아이파크아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,풍림아이원플러스아파트,풍림아이원플러스아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’풍림아이원플러스아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,반포르엘아파트,반포르엘아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’반포르엘아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,반포주공1단지아파트,반포주공1단지아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (k {name:’반포주공1단지아파트’}) RETURN k.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,지웰홈스서초아파트,지웰홈스서초아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (k {name:’지웰홈스서초아파트’}) RETURN k.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,서초이오빌아파트,서초이오빌아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (k {name:’서초이오빌아파트’}) RETURN k.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,DK밸리뷰서초(주)아파트,DK밸리뷰서초(주)아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’DK밸리뷰서초(주)아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,방배아트자이아파트,방배아트자이아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’방배아트자이아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,서초쌍용플래티넘아파트,서초쌍용플래티넘아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’서초쌍용플래티넘아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,우면한라아파트,우면한라아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’우면한라아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,디에이치라클라스아파트,디에이치라클라스아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’디에이치라클라스아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,진흥아파트,진흥아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’진흥아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,반포자이아파트,반포자이아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’반포자이아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,신반포18차(337동)아파트,신반포18차(337동)아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’신반포18차(337동)아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,서초아이파크아파트,서초아이파크아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’서초아이파크아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,아크로비스타아파트,아크로비스타아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’아크로비스타아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,서초자이아파트,서초자이아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (k {name:’서초자이아파트’}) RETURN k.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,신반포11차아파트,신반포11차아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (k {name:’신반포11차아파트’}) RETURN k.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,신반포27차아파트,신반포27차아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’신반포27차아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,서초리시온아파트,서초리시온아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (k {name:’서초리시온아파트’}) RETURN k.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,서초더샵포레아파트,서초더샵포레아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’서초더샵포레아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,동원베네스트아파트,동원베네스트아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (k {name:’동원베네스트아파트’}) RETURN k.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,삼호2차아파트,삼호2차아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’삼호2차아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,신반포11차아파트,신반포11차아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’신반포11차아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,서초네이처힐7단지아파트,서초네이처힐7단지아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’서초네이처힐7단지아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,서초포레스타7단지아파트,서초포레스타7단지아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (k {name:’서초포레스타7단지아파트’}) RETURN k.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,신반포18차(337동)아파트,신반포18차(337동)아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’신반포18차(337동)아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,서초포레스타6단지아파트,서초포레스타6단지아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’서초포레스타6단지아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,반포써밋아파트,반포써밋아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (k {name:’반포써밋아파트’}) RETURN k.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,방배대우디오빌아파트,방배대우디오빌아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’방배대우디오빌아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,신반포18차(337동)아파트,신반포18차(337동)아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’신반포18차(337동)아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,서초e-편한세상1차아파트,서초e-편한세상1차아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’서초e-편한세상1차아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,방배동부센트레빌아파트,방배동부센트레빌아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’방배동부센트레빌아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,방배아이파크아파트,방배아이파크아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’방배아이파크아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,강남원효성아파트,강남원효성아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (k {name:’강남원효성아파트’}) RETURN k.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,서초푸르지오써밋아파트,서초푸르지오써밋아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’서초푸르지오써밋아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,녹원한신아파트,녹원한신아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (k {name:’녹원한신아파트’}) RETURN k.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,반포리체아파트,반포리체아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (k {name:’반포리체아파트’}) RETURN k.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,신반포11차아파트,신반포11차아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’신반포11차아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,래미안서초유니빌아파트,래미안서초유니빌아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’래미안서초유니빌아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,반포써밋아파트,반포써밋아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’반포써밋아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,삼호4차아파트,삼호4차아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’삼호4차아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,진흥아파트,진흥아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’진흥아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,서초e-편한세상5차아파트,서초e-편한세상5차아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’서초e-편한세상5차아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,현대아파트,현대아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’현대아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,신반포25차아파트,신반포25차아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’신반포25차아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,서초e-편한세상2차아파트,서초e-편한세상2차아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (k {name:’서초e-편한세상2차아파트’}) RETURN k.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,반포센트레빌아스테리움아파트,반포센트레빌아스테리움아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’반포센트레빌아스테리움아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,삼호한숲아파트,삼호한숲아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’삼호한숲아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,DK밸리뷰서초(주)아파트,DK밸리뷰서초(주)아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’DK밸리뷰서초(주)아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,서초롯데캐슬프레지던트아파트,서초롯데캐슬프레지던트아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’서초롯데캐슬프레지던트아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,한라비발디스튜디오193(도시형)아파트,한라비발디스튜디오193(도시형)아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’한라비발디스튜디오193(도시형)아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,삼성쉐르빌II아파트,삼성쉐르빌II아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (k {name:’삼성쉐르빌II아파트’}) RETURN k.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,래미안리더스원아파트,래미안리더스원아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’래미안리더스원아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,신영체르니아파트,신영체르니아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’신영체르니아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,신반포4차아파트,신반포4차아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’신반포4차아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,삼호가든맨션5차아파트,삼호가든맨션5차아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’삼호가든맨션5차아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,서초포레스타7단지아파트,서초포레스타7단지아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (k {name:’서초포레스타7단지아파트’}) RETURN k.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,신반포4차아파트,신반포4차아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (k {name:’신반포4차아파트’}) RETURN k.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,반포써밋아파트,반포써밋아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’반포써밋아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,서초트라팰리스아파트,서초트라팰리스아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’서초트라팰리스아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,서초한빛삼성아파트,서초한빛삼성아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’서초한빛삼성아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,방배롯데캐슬아르떼아파트,방배롯데캐슬아르떼아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’방배롯데캐슬아르떼아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,삼호4차아파트,삼호4차아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’삼호4차아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,우면한라아파트,우면한라아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (k {name:’우면한라아파트’}) RETURN k.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,현대ESA2아파트,현대ESA2아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’현대ESA2아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,대림아파트,대림아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’대림아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,삼호2차아파트,삼호2차아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’삼호2차아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,래미안서초스위트아파트,래미안서초스위트아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’래미안서초스위트아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,현대ESA2아파트,현대ESA2아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’현대ESA2아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,잠원한신아파트,잠원한신아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (k {name:’잠원한신아파트’}) RETURN k.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,서초래미안아파트,서초래미안아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’서초래미안아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,신반포19차아파트,신반포19차아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (k {name:’신반포19차아파트’}) RETURN k.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,신반포2차아파트,신반포2차아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’신반포2차아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,신반포10차아파트,신반포10차아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’신반포10차아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,방배e-편한세상3차아파트,방배e-편한세상3차아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (k {name:’방배e-편한세상3차아파트’}) RETURN k.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,금호베스트빌아파트,금호베스트빌아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (k {name:’금호베스트빌아파트’}) RETURN k.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,신반포11차아파트,신반포11차아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (k {name:’신반포11차아파트’}) RETURN k.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,현대ESA2아파트,현대ESA2아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (k {name:’현대ESA2아파트’}) RETURN k.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,서초아트자이아파트,서초아트자이아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (k {name:’서초아트자이아파트’}) RETURN k.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,신반포11차아파트,신반포11차아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’신반포11차아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,서초그랑자이아파트,서초그랑자이아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (k {name:’서초그랑자이아파트’}) RETURN k.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,신반포7차아파트,신반포7차아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’신반포7차아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,한라비발디스튜디오193(도시형)아파트,한라비발디스튜디오193(도시형)아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’한라비발디스튜디오193(도시형)아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,신반포청구아파트,신반포청구아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (k {name:’신반포청구아파트’}) RETURN k.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,롯데캐슬갤럭시1차아파트,롯데캐슬갤럭시1차아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (k {name:’롯데캐슬갤럭시1차아파트’}) RETURN k.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,래미안리더스원아파트,래미안리더스원아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’래미안리더스원아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,서초현대4차아파트,서초현대4차아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’서초현대4차아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,서초e-편한세상1차아파트,서초e-편한세상1차아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’서초e-편한세상1차아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,방배아크로타워아파트,방배아크로타워아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’방배아크로타워아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,동아아파트,동아아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (k {name:’동아아파트’}) RETURN k.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,잠원한신그린아파트,잠원한신그린아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’잠원한신그린아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,서초e-편한세상5차아파트,서초e-편한세상5차아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’서초e-편한세상5차아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,방배마에스트로아파트,방배마에스트로아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’방배마에스트로아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,LH서초5단지아파트,LH서초5단지아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’LH서초5단지아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,삼풍아파트,삼풍아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’삼풍아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,신반포8차아파트,신반포8차아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’신반포8차아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,롯데캐슬갤럭시1차아파트,롯데캐슬갤럭시1차아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’롯데캐슬갤럭시1차아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,현대동궁아파트,현대동궁아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’현대동궁아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,서초네이처힐1단지아파트,서초네이처힐1단지아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’서초네이처힐1단지아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,힐스테이트서초젠트리스아파트,힐스테이트서초젠트리스아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (k {name:’힐스테이트서초젠트리스아파트’}) RETURN k.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,현대ESA아파트,현대ESA아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’현대ESA아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,우면한라아파트,우면한라아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’우면한라아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,서초네이처힐1단지아파트,서초네이처힐1단지아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (k {name:’서초네이처힐1단지아파트’}) RETURN k.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,반포한신타워아파트,반포한신타워아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’반포한신타워아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,강남원효성아파트,강남원효성아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’강남원효성아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,신반포21차아파트,신반포21차아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’신반포21차아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,LH서초5단지아파트,LH서초5단지아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’LH서초5단지아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,금호베스트빌아파트,금호베스트빌아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’금호베스트빌아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,신반포25차아파트,신반포25차아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’신반포25차아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,서초현대4차아파트,서초현대4차아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (k {name:’서초현대4차아파트’}) RETURN k.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,래미안신반포리오센트아파트,래미안신반포리오센트아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’래미안신반포리오센트아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,서초한빛삼성아파트,서초한빛삼성아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’서초한빛삼성아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,서초교대e편한세상아파트,서초교대e편한세상아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (k {name:’서초교대e편한세상아파트’}) RETURN k.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,서초포레스타5단지아파트,서초포레스타5단지아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (k {name:’서초포레스타5단지아파트’}) RETURN k.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,강남역푸르지오시티(도시형)아파트,강남역푸르지오시티(도시형)아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’강남역푸르지오시티(도시형)아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,방배마에스트로아파트,방배마에스트로아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’방배마에스트로아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,서초e-편한세상5차아파트,서초e-편한세상5차아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’서초e-편한세상5차아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,잠원중앙하이츠(B동)아파트,잠원중앙하이츠(B동)아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’잠원중앙하이츠(B동)아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,방배아크로리버아파트,방배아크로리버아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’방배아크로리버아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,서초대우아이빌아파트,서초대우아이빌아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’서초대우아이빌아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,엠브이아파트,엠브이아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’엠브이아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,래미안리더스원아파트,래미안리더스원아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’래미안리더스원아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,삼풍아파트,삼풍아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’삼풍아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,반포힐스테이트아파트,반포힐스테이트아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’반포힐스테이트아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,아크로리버파크아파트,아크로리버파크아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’아크로리버파크아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,방배래미안아파트,방배래미안아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’방배래미안아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,래미안서초에스티지아파트,래미안서초에스티지아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’래미안서초에스티지아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,잠원월드메르디앙아파트,잠원월드메르디앙아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (k {name:’잠원월드메르디앙아파트’}) RETURN k.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,래미안서초에스티지S아파트,래미안서초에스티지S아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’래미안서초에스티지S아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,신반포15차아파트,신반포15차아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’신반포15차아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,신반포궁전아파트,신반포궁전아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (k {name:’신반포궁전아파트’}) RETURN k.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,서초포레스타7단지아파트,서초포레스타7단지아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’서초포레스타7단지아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,서초삼성래미안아파트,서초삼성래미안아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’서초삼성래미안아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,대림아파트,대림아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’대림아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,방배마에스트로아파트,방배마에스트로아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (k {name:’방배마에스트로아파트’}) RETURN k.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,신반포7차아파트,신반포7차아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’신반포7차아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,르엘신반포아파트,르엘신반포아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (k {name:’르엘신반포아파트’}) RETURN k.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,서초포레스타2단지아파트,서초포레스타2단지아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’서초포레스타2단지아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,밀라텔쉐르빌(엠쉐르빌)아파트,밀라텔쉐르빌(엠쉐르빌)아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’밀라텔쉐르빌(엠쉐르빌)아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,서초리시온아파트,서초리시온아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’서초리시온아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,롯데캐슬갤럭시2차아파트,롯데캐슬갤럭시2차아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’롯데캐슬갤럭시2차아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,녹원한신아파트,녹원한신아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (k {name:’녹원한신아파트’}) RETURN k.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,서초아트자이아파트,서초아트자이아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (k {name:’서초아트자이아파트’}) RETURN k.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,서초롯데캐슬리버티아파트,서초롯데캐슬리버티아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (k {name:’서초롯데캐슬리버티아파트’}) RETURN k.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,래미안원베일리아파트,래미안원베일리아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’래미안원베일리아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,신반포15차아파트,신반포15차아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (k {name:’신반포15차아파트’}) RETURN k.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,헤센파크힐아파트,헤센파크힐아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’헤센파크힐아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,서초포레스타7단지아파트,서초포레스타7단지아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’서초포레스타7단지아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,롯데캐슬주피터아파트,롯데캐슬주피터아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’롯데캐슬주피터아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,반포써밋아파트,반포써밋아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (k {name:’반포써밋아파트’}) RETURN k.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,한신로얄아파트,한신로얄아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (k {name:’한신로얄아파트’}) RETURN k.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,방배아크로리버아파트,방배아크로리버아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (k {name:’방배아크로리버아파트’}) RETURN k.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,반포센트럴자이아파트,반포센트럴자이아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’반포센트럴자이아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,잠원월드메르디앙아파트,잠원월드메르디앙아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’잠원월드메르디앙아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,방배마에스트로아파트,방배마에스트로아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’방배마에스트로아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,우면한라아파트,우면한라아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (k {name:’우면한라아파트’}) RETURN k.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,방배한신트리플아파트,방배한신트리플아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’방배한신트리플아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,삼호1차아파트,삼호1차아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’삼호1차아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,강변아파트,강변아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’강변아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,래미안서초유니빌아파트,래미안서초유니빌아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (k {name:’래미안서초유니빌아파트’}) RETURN k.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,반포센트럴자이아파트,반포센트럴자이아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’반포센트럴자이아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,신반포16차아파트,신반포16차아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (k {name:’신반포16차아파트’}) RETURN k.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,신반포9차아파트,신반포9차아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (k {name:’신반포9차아파트’}) RETURN k.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,방배그랑자이아파트,방배그랑자이아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’방배그랑자이아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,서초네이처힐4단지아파트,서초네이처힐4단지아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’서초네이처힐4단지아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,서초교대e편한세상아파트,서초교대e편한세상아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’서초교대e편한세상아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,래미안서초스위트아파트,래미안서초스위트아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’래미안서초스위트아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,서초현대4차아파트,서초현대4차아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (k {name:’서초현대4차아파트’}) RETURN k.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,잠원한신아파트,잠원한신아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’잠원한신아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,아크로리버뷰신반포아파트,아크로리버뷰신반포아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (k {name:’아크로리버뷰신반포아파트’}) RETURN k.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,서초네이처힐3단지아파트,서초네이처힐3단지아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’서초네이처힐3단지아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,잠원훼미리아파트,잠원훼미리아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’잠원훼미리아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,삼성서초가든스위트아파트,삼성서초가든스위트아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’삼성서초가든스위트아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,한신타운아파트,한신타운아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (k {name:’한신타운아파트’}) RETURN k.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,래미안서초스위트아파트,래미안서초스위트아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (k {name:’래미안서초스위트아파트’}) RETURN k.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,지웰홈스서초아파트,지웰홈스서초아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (k {name:’지웰홈스서초아파트’}) RETURN k.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,방배아크로타워아파트,방배아크로타워아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’방배아크로타워아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,반포푸르지오아파트,반포푸르지오아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’반포푸르지오아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,서초e-편한세상1차아파트,서초e-편한세상1차아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’서초e-편한세상1차아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,신반포12차아파트,신반포12차아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’신반포12차아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,진흥아파트,진흥아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (k {name:’진흥아파트’}) RETURN k.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,잠원훼미리아파트,잠원훼미리아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (k {name:’잠원훼미리아파트’}) RETURN k.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,반포센트럴자이아파트,반포센트럴자이아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’반포센트럴자이아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,지웰홈스서초아파트,지웰홈스서초아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (k {name:’지웰홈스서초아파트’}) RETURN k.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,반포써밋아파트,반포써밋아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’반포써밋아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,서초네이처힐4단지아파트,서초네이처힐4단지아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (k {name:’서초네이처힐4단지아파트’}) RETURN k.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,풍림아이원플러스아파트,풍림아이원플러스아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (k {name:’풍림아이원플러스아파트’}) RETURN k.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,신동아2차아파트,신동아2차아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’신동아2차아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,반포한신타워아파트,반포한신타워아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’반포한신타워아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,한신서래아파트,한신서래아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’한신서래아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,양재우성아파트,양재우성아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (k {name:’양재우성아파트’}) RETURN k.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,서초한신아파트,서초한신아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (k {name:’서초한신아파트’}) RETURN k.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,서초삼성래미안아파트,서초삼성래미안아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’서초삼성래미안아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,현대아파트,현대아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (k {name:’현대아파트’}) RETURN k.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,아크로비스타아파트,아크로비스타아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’아크로비스타아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,신영체르니아파트,신영체르니아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’신영체르니아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,아남아파트,아남아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’아남아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,신영체르니아파트,신영체르니아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’신영체르니아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,쌍용예가클래식아파트,쌍용예가클래식아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’쌍용예가클래식아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,서초그랑자이아파트,서초그랑자이아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (k {name:’서초그랑자이아파트’}) RETURN k.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,삼성서초가든스위트아파트,삼성서초가든스위트아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (k {name:’삼성서초가든스위트아파트’}) RETURN k.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,더샵반포리버파크(도시형)아파트,더샵반포리버파크(도시형)아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’더샵반포리버파크(도시형)아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,방배한신트리플아파트,방배한신트리플아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (k {name:’방배한신트리플아파트’}) RETURN k.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,래미안서초스위트아파트,래미안서초스위트아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (k {name:’래미안서초스위트아파트’}) RETURN k.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,반포푸르지오아파트,반포푸르지오아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’반포푸르지오아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,서초이오빌아파트,서초이오빌아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’서초이오빌아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,래미안신반포리오센트아파트,래미안신반포리오센트아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’래미안신반포리오센트아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,동아아파트,동아아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’동아아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,신반포18차(337동)아파트,신반포18차(337동)아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’신반포18차(337동)아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,신반포19차아파트,신반포19차아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’신반포19차아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,서초트라팰리스아파트,서초트라팰리스아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (k {name:’서초트라팰리스아파트’}) RETURN k.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,반포푸르지오아파트,반포푸르지오아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’반포푸르지오아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,래미안서초유니빌아파트,래미안서초유니빌아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’래미안서초유니빌아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,삼성쉐르빌II아파트,삼성쉐르빌II아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (k {name:’삼성쉐르빌II아파트’}) RETURN k.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,밀라텔쉐르빌(엠쉐르빌)아파트,밀라텔쉐르빌(엠쉐르빌)아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’밀라텔쉐르빌(엠쉐르빌)아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,잠원한신아파트,잠원한신아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’잠원한신아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,서초삼성래미안아파트,서초삼성래미안아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (k {name:’서초삼성래미안아파트’}) RETURN k.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,양재우성아파트,양재우성아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’양재우성아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,신반포궁전아파트,신반포궁전아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’신반포궁전아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,반포써밋아파트,반포써밋아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’반포써밋아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,코오롱아파트,코오롱아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’코오롱아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,서초롯데캐슬리버티아파트,서초롯데캐슬리버티아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (k {name:’서초롯데캐슬리버티아파트’}) RETURN k.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,신반포19차아파트,신반포19차아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’신반포19차아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,방배롯데캐슬아르떼아파트,방배롯데캐슬아르떼아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’방배롯데캐슬아르떼아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,방배현대홈타운2차아파트,방배현대홈타운2차아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’방배현대홈타운2차아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,신반포20차아파트,신반포20차아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (k {name:’신반포20차아파트’}) RETURN k.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,신반포20차아파트,신반포20차아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’신반포20차아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,신동아아파트,신동아아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’신동아아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,반포래미안아이파크아파트,반포래미안아이파크아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (k {name:’반포래미안아이파크아파트’}) RETURN k.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,잠원월드메르디앙아파트,잠원월드메르디앙아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (k {name:’잠원월드메르디앙아파트’}) RETURN k.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,잠원훼미리아파트,잠원훼미리아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’잠원훼미리아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,서초네이처힐1단지아파트,서초네이처힐1단지아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (k {name:’서초네이처힐1단지아파트’}) RETURN k.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,서초포레스타5단지아파트,서초포레스타5단지아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’서초포레스타5단지아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,잠원대우아이빌아파트,잠원대우아이빌아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’잠원대우아이빌아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,반포푸르지오아파트,반포푸르지오아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (k {name:’반포푸르지오아파트’}) RETURN k.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,신반포7차아파트,신반포7차아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (k {name:’신반포7차아파트’}) RETURN k.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,임광3차아파트,임광3차아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’임광3차아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,녹원한신아파트,녹원한신아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’녹원한신아파트’}) RETURN n.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,블루힐하우스아파트,블루힐하우스아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (k {name:’블루힐하우스아파트’}) RETURN k.facilities,1,0
7,[mask_1]가 제공하는 편의시설에는 어떤게 있어?,apt_name,서초대우아이빌아파트,서초대우아이빌아파트가 제공하는 편의시설에는 어떤게 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].facilities,apt_name,MATCH (n {name:’서초대우아이빌아파트’}) RETURN n.facilities,1,0
8,[mask_1]는 복도식이야 계단식이야?,apt_name,삼호1차아파트,삼호1차아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’삼호1차아파트’})-[:HAS_TYPE]-(k) RETURN k.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,삼환나띠르빌아파트,삼환나띠르빌아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’삼환나띠르빌아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,래미안리더스원아파트,래미안리더스원아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (l {name:’래미안리더스원아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,롯데캐슬헤론아파트,롯데캐슬헤론아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’롯데캐슬헤론아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,진흥아파트,진흥아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’진흥아파트’})-[:HAS_TYPE]-(k) RETURN k.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,잠원현대아파트,잠원현대아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’잠원현대아파트’})-[:HAS_TYPE]-(k) RETURN k.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,반포센트럴자이아파트,반포센트럴자이아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (l {name:’반포센트럴자이아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,반포써밋아파트,반포써밋아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’반포써밋아파트’})-[:HAS_TYPE]-(k) RETURN k.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,방배아이파크아파트,방배아이파크아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’방배아이파크아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,DK밸리뷰서초(주)아파트,DK밸리뷰서초(주)아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’DK밸리뷰서초(주)아파트’})-[:HAS_TYPE]-(k) RETURN k.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,힐스테이트서초젠트리스아파트,힐스테이트서초젠트리스아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’힐스테이트서초젠트리스아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,반포리체아파트,반포리체아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (l {name:’반포리체아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,방배아크로리버아파트,방배아크로리버아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’방배아크로리버아파트’})-[:HAS_TYPE]-(k) RETURN k.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,잠원중앙하이츠(B동)아파트,잠원중앙하이츠(B동)아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’잠원중앙하이츠(B동)아파트’})-[:HAS_TYPE]-(k) RETURN k.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,래미안원베일리아파트,래미안원베일리아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’래미안원베일리아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,서초포레스타7단지아파트,서초포레스타7단지아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’서초포레스타7단지아파트’})-[:HAS_TYPE]-(k) RETURN k.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,삼호3차아파트,삼호3차아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (l {name:’삼호3차아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,서초네이처힐6단지아파트,서초네이처힐6단지아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’서초네이처힐6단지아파트’})-[:HAS_TYPE]-(k) RETURN k.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,서초롯데캐슬리버티아파트,서초롯데캐슬리버티아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (l {name:’서초롯데캐슬리버티아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,신반포9차아파트,신반포9차아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’신반포9차아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,한신타운아파트,한신타운아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (l {name:’한신타운아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,반포리체아파트,반포리체아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’반포리체아파트’})-[:HAS_TYPE]-(k) RETURN k.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,아남아파트,아남아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (l {name:’아남아파트’})-[:HAS_TYPE]-(k) RETURN k.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,서초리시온아파트,서초리시온아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (l {name:’서초리시온아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,반포미도1차아파트,반포미도1차아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’반포미도1차아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,아남아파트,아남아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (l {name:’아남아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,신동아아파트,신동아아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’신동아아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,잠원대우아이빌아파트,잠원대우아이빌아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’잠원대우아이빌아파트’})-[:HAS_TYPE]-(k) RETURN k.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,금호베스트빌아파트,금호베스트빌아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’금호베스트빌아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,삼호2차아파트,삼호2차아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (l {name:’삼호2차아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,신반포8차아파트,신반포8차아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (l {name:’신반포8차아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,현대성우아파트,현대성우아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’현대성우아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,방배브라운가아파트,방배브라운가아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (l {name:’방배브라운가아파트’})-[:HAS_TYPE]-(k) RETURN k.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,반포자이아파트,반포자이아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’반포자이아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,신반포10차아파트,신반포10차아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’신반포10차아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,래미안퍼스티지아파트,래미안퍼스티지아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’래미안퍼스티지아파트’})-[:HAS_TYPE]-(k) RETURN k.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,대림아파트,대림아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (l {name:’대림아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,LH서초5단지아파트,LH서초5단지아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (l {name:’LH서초5단지아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,강남원효성아파트,강남원효성아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’강남원효성아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,킴스빌리지아파트,킴스빌리지아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (l {name:’킴스빌리지아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,방배브라운가아파트,방배브라운가아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’방배브라운가아파트’})-[:HAS_TYPE]-(k) RETURN k.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,한신타운아파트,한신타운아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (l {name:’한신타운아파트’})-[:HAS_TYPE]-(k) RETURN k.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,서초이오빌아파트,서초이오빌아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’서초이오빌아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,양재우성KBS(113동)아파트,양재우성KBS(113동)아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’양재우성KBS(113동)아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,블루힐하우스아파트,블루힐하우스아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’블루힐하우스아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,롯데캐슬주피터아파트,롯데캐슬주피터아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’롯데캐슬주피터아파트’})-[:HAS_TYPE]-(k) RETURN k.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,잠원한신아파트,잠원한신아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’잠원한신아파트’})-[:HAS_TYPE]-(k) RETURN k.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,서초리시온아파트,서초리시온아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’서초리시온아파트’})-[:HAS_TYPE]-(k) RETURN k.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,방배자이아파트,방배자이아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’방배자이아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,방배동부센트레빌아파트,방배동부센트레빌아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’방배동부센트레빌아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,신반포9차아파트,신반포9차아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’신반포9차아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,지웰홈스서초아파트,지웰홈스서초아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (l {name:’지웰홈스서초아파트’})-[:HAS_TYPE]-(k) RETURN k.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,킴스빌리지아파트,킴스빌리지아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’킴스빌리지아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,삼익아파트,삼익아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’삼익아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,서초e-편한세상2차아파트,서초e-편한세상2차아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’서초e-편한세상2차아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,서초네이처힐7단지아파트,서초네이처힐7단지아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’서초네이처힐7단지아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,반포자이아파트,반포자이아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’반포자이아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,방배현대홈타운3차아파트,방배현대홈타운3차아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’방배현대홈타운3차아파트’})-[:HAS_TYPE]-(k) RETURN k.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,서초포레스타7단지아파트,서초포레스타7단지아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (l {name:’서초포레스타7단지아파트’})-[:HAS_TYPE]-(k) RETURN k.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,신반포25차아파트,신반포25차아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’신반포25차아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,더샵반포리버파크(도시형)아파트,더샵반포리버파크(도시형)아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’더샵반포리버파크(도시형)아파트’})-[:HAS_TYPE]-(k) RETURN k.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,신반포궁전아파트,신반포궁전아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’신반포궁전아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,신동아2차아파트,신동아2차아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’신동아2차아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,서초네이처힐4단지아파트,서초네이처힐4단지아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’서초네이처힐4단지아파트’})-[:HAS_TYPE]-(k) RETURN k.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,신반포궁전아파트,신반포궁전아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’신반포궁전아파트’})-[:HAS_TYPE]-(k) RETURN k.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,잠원한신그린아파트,잠원한신그린아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’잠원한신그린아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,반포써밋아파트,반포써밋아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (l {name:’반포써밋아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,코오롱아파트,코오롱아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’코오롱아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,대우효령아파트,대우효령아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’대우효령아파트’})-[:HAS_TYPE]-(k) RETURN k.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,아크로비스타아파트,아크로비스타아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’아크로비스타아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,신반포자이아파트,신반포자이아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’신반포자이아파트’})-[:HAS_TYPE]-(k) RETURN k.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,방배동부센트레빌아파트,방배동부센트레빌아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’방배동부센트레빌아파트’})-[:HAS_TYPE]-(k) RETURN k.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,서초한빛삼성아파트,서초한빛삼성아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’서초한빛삼성아파트’})-[:HAS_TYPE]-(k) RETURN k.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,힐스테이트서초젠트리스아파트,힐스테이트서초젠트리스아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’힐스테이트서초젠트리스아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,잠원월드메르디앙아파트,잠원월드메르디앙아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’잠원월드메르디앙아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,반포미도2차아파트,반포미도2차아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’반포미도2차아파트’})-[:HAS_TYPE]-(k) RETURN k.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,래미안신반포팰리스아파트,래미안신반포팰리스아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’래미안신반포팰리스아파트’})-[:HAS_TYPE]-(k) RETURN k.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,신반포19차아파트,신반포19차아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (l {name:’신반포19차아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,반포주공1단지아파트,반포주공1단지아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (l {name:’반포주공1단지아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,반포힐스테이트아파트,반포힐스테이트아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’반포힐스테이트아파트’})-[:HAS_TYPE]-(k) RETURN k.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,우면한라아파트,우면한라아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’우면한라아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,신동아2차아파트,신동아2차아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’신동아2차아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,반포르엘아파트,반포르엘아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’반포르엘아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,방배롯데캐슬로제아파트,방배롯데캐슬로제아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’방배롯데캐슬로제아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,서초롯데캐슬프레지던트아파트,서초롯데캐슬프레지던트아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (l {name:’서초롯데캐슬프레지던트아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,서초푸르지오써밋아파트,서초푸르지오써밋아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’서초푸르지오써밋아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,현대멤피스아파트,현대멤피스아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’현대멤피스아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,지웰홈스서초아파트,지웰홈스서초아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’지웰홈스서초아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,잠원대우아이빌아파트,잠원대우아이빌아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’잠원대우아이빌아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,신반포12차아파트,신반포12차아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’신반포12차아파트’})-[:HAS_TYPE]-(k) RETURN k.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,래미안서초에스티지아파트,래미안서초에스티지아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’래미안서초에스티지아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,대림아파트,대림아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’대림아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,서초네이처힐7단지아파트,서초네이처힐7단지아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (l {name:’서초네이처힐7단지아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,삼호가든맨션5차아파트,삼호가든맨션5차아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’삼호가든맨션5차아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,서초더샵포레아파트,서초더샵포레아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’서초더샵포레아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,서초네이처힐6단지아파트,서초네이처힐6단지아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’서초네이처힐6단지아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,신반포9차아파트,신반포9차아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’신반포9차아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,신반포15차아파트,신반포15차아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (l {name:’신반포15차아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,반포한신타워아파트,반포한신타워아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’반포한신타워아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,신동아2차아파트,신동아2차아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’신동아2차아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,래미안퍼스티지아파트,래미안퍼스티지아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (l {name:’래미안퍼스티지아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,현대아파트,현대아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’현대아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,서초자이아파트,서초자이아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’서초자이아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,방배서리풀e-편한세상아파트,방배서리풀e-편한세상아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (l {name:’방배서리풀e-편한세상아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,신동아1차아파트,신동아1차아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (l {name:’신동아1차아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,신반포4차아파트,신반포4차아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (l {name:’신반포4차아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,방배현대홈타운2차아파트,방배현대홈타운2차아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’방배현대홈타운2차아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,래미안원베일리아파트,래미안원베일리아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (l {name:’래미안원베일리아파트’})-[:HAS_TYPE]-(k) RETURN k.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,래미안서초스위트아파트,래미안서초스위트아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’래미안서초스위트아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,쌍용예가클래식아파트,쌍용예가클래식아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (l {name:’쌍용예가클래식아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,르엘신반포파크애비뉴아파트,르엘신반포파크애비뉴아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’르엘신반포파크애비뉴아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,방배래미안아트힐아파트,방배래미안아트힐아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (l {name:’방배래미안아트힐아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,현대아파트,현대아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’현대아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,양재우성KBS(113동)아파트,양재우성KBS(113동)아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’양재우성KBS(113동)아파트’})-[:HAS_TYPE]-(k) RETURN k.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,우면한라아파트,우면한라아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’우면한라아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,서초네이처힐1단지아파트,서초네이처힐1단지아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (l {name:’서초네이처힐1단지아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,서초자이아파트,서초자이아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’서초자이아파트’})-[:HAS_TYPE]-(k) RETURN k.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,방배래미안타워아파트,방배래미안타워아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’방배래미안타워아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,방배마에스트로아파트,방배마에스트로아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’방배마에스트로아파트’})-[:HAS_TYPE]-(k) RETURN k.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,밀라텔쉐르빌(엠쉐르빌)아파트,밀라텔쉐르빌(엠쉐르빌)아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’밀라텔쉐르빌(엠쉐르빌)아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,방배현대홈타운1차아파트,방배현대홈타운1차아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’방배현대홈타운1차아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,삼호2차아파트,삼호2차아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (l {name:’삼호2차아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,신영체르니아파트,신영체르니아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (l {name:’신영체르니아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,서초네이처힐2단지아파트,서초네이처힐2단지아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’서초네이처힐2단지아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,서초네이처힐2단지아파트,서초네이처힐2단지아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’서초네이처힐2단지아파트’})-[:HAS_TYPE]-(k) RETURN k.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,서초e-편한세상1차아파트,서초e-편한세상1차아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (l {name:’서초e-편한세상1차아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,방배아이파크아파트,방배아이파크아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’방배아이파크아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,방배마에스트로아파트,방배마에스트로아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (l {name:’방배마에스트로아파트’})-[:HAS_TYPE]-(k) RETURN k.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,DK밸리뷰서초(주)아파트,DK밸리뷰서초(주)아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’DK밸리뷰서초(주)아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,롯데캐슬헤론아파트,롯데캐슬헤론아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’롯데캐슬헤론아파트’})-[:HAS_TYPE]-(k) RETURN k.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,잠원한신그린아파트,잠원한신그린아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’잠원한신그린아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,한신서래아파트,한신서래아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’한신서래아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,신반포9차아파트,신반포9차아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’신반포9차아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,방배아트자이아파트,방배아트자이아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’방배아트자이아파트’})-[:HAS_TYPE]-(k) RETURN k.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,현대동궁아파트,현대동궁아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (l {name:’현대동궁아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,삼환나띠르빌아파트,삼환나띠르빌아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’삼환나띠르빌아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,서초네이처힐2단지아파트,서초네이처힐2단지아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’서초네이처힐2단지아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,신반포2차아파트,신반포2차아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’신반포2차아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,서초네이처힐3단지아파트,서초네이처힐3단지아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’서초네이처힐3단지아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,신반포15차아파트,신반포15차아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’신반포15차아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,래미안신반포팰리스아파트,래미안신반포팰리스아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’래미안신반포팰리스아파트’})-[:HAS_TYPE]-(k) RETURN k.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,쌍용예가클래식아파트,쌍용예가클래식아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’쌍용예가클래식아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,방배래미안아트힐아파트,방배래미안아트힐아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (l {name:’방배래미안아트힐아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,현대성우아파트,현대성우아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’현대성우아파트’})-[:HAS_TYPE]-(k) RETURN k.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,쌍용예가클래식아파트,쌍용예가클래식아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’쌍용예가클래식아파트’})-[:HAS_TYPE]-(k) RETURN k.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,녹원한신아파트,녹원한신아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’녹원한신아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,잠원중앙하이츠(B동)아파트,잠원중앙하이츠(B동)아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’잠원중앙하이츠(B동)아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,반포한신타워아파트,반포한신타워아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’반포한신타워아파트’})-[:HAS_TYPE]-(k) RETURN k.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,래미안원베일리아파트,래미안원베일리아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’래미안원베일리아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,킴스빌리지아파트,킴스빌리지아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (l {name:’킴스빌리지아파트’})-[:HAS_TYPE]-(k) RETURN k.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,양재우성KBS(113동)아파트,양재우성KBS(113동)아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’양재우성KBS(113동)아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,방배우성아파트,방배우성아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’방배우성아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,방배래미안타워아파트,방배래미안타워아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’방배래미안타워아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,방배아이파크아파트,방배아이파크아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’방배아이파크아파트’})-[:HAS_TYPE]-(k) RETURN k.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,삼호가든맨션5차아파트,삼호가든맨션5차아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (l {name:’삼호가든맨션5차아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,블루힐하우스아파트,블루힐하우스아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’블루힐하우스아파트’})-[:HAS_TYPE]-(k) RETURN k.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,대림아파트,대림아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’대림아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,대우효령아파트,대우효령아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’대우효령아파트’})-[:HAS_TYPE]-(k) RETURN k.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,동고아파트,동고아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’동고아파트’})-[:HAS_TYPE]-(k) RETURN k.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,서초대우디오빌프라임아파트,서초대우디오빌프라임아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’서초대우디오빌프라임아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,신반포10차아파트,신반포10차아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (l {name:’신반포10차아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,서초현대아파트,서초현대아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (l {name:’서초현대아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,서초대우디오빌프라임아파트,서초대우디오빌프라임아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’서초대우디오빌프라임아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,현대멤피스아파트,현대멤피스아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (l {name:’현대멤피스아파트’})-[:HAS_TYPE]-(k) RETURN k.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,삼호한숲아파트,삼호한숲아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’삼호한숲아파트’})-[:HAS_TYPE]-(k) RETURN k.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,더샵반포리버파크(도시형)아파트,더샵반포리버파크(도시형)아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’더샵반포리버파크(도시형)아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,현대동궁아파트,현대동궁아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’현대동궁아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,방배래미안아파트,방배래미안아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’방배래미안아파트’})-[:HAS_TYPE]-(k) RETURN k.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,롯데캐슬갤럭시2차아파트,롯데캐슬갤럭시2차아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’롯데캐슬갤럭시2차아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,지웰홈스서초아파트,지웰홈스서초아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’지웰홈스서초아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,서초한신아파트,서초한신아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’서초한신아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,방배래미안타워아파트,방배래미안타워아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (l {name:’방배래미안타워아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,방배현대홈타운1차아파트,방배현대홈타운1차아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (l {name:’방배현대홈타운1차아파트’})-[:HAS_TYPE]-(k) RETURN k.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,방배래미안타워아파트,방배래미안타워아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (l {name:’방배래미안타워아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,서초래미안아파트,서초래미안아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (l {name:’서초래미안아파트’})-[:HAS_TYPE]-(k) RETURN k.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,킴스빌리지아파트,킴스빌리지아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’킴스빌리지아파트’})-[:HAS_TYPE]-(k) RETURN k.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,신반포12차아파트,신반포12차아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (l {name:’신반포12차아파트’})-[:HAS_TYPE]-(k) RETURN k.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,신반포21차아파트,신반포21차아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’신반포21차아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,삼호가든맨션5차아파트,삼호가든맨션5차아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’삼호가든맨션5차아파트’})-[:HAS_TYPE]-(k) RETURN k.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,반포센트레빌아스테리움아파트,반포센트레빌아스테리움아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’반포센트레빌아스테리움아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,서초e-편한세상5차아파트,서초e-편한세상5차아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’서초e-편한세상5차아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,반포센트럴자이아파트,반포센트럴자이아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’반포센트럴자이아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,서초네이처힐7단지아파트,서초네이처힐7단지아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’서초네이처힐7단지아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,서초네이처힐1단지아파트,서초네이처힐1단지아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’서초네이처힐1단지아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,서초푸르지오써밋아파트,서초푸르지오써밋아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (l {name:’서초푸르지오써밋아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,서초e-편한세상2차아파트,서초e-편한세상2차아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (l {name:’서초e-편한세상2차아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,서초포레스타5단지아파트,서초포레스타5단지아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’서초포레스타5단지아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,동원베네스트아파트,동원베네스트아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’동원베네스트아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,현대ESA2아파트,현대ESA2아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’현대ESA2아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,서초센트럴아이파크아파트,서초센트럴아이파크아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (l {name:’서초센트럴아이파크아파트’})-[:HAS_TYPE]-(k) RETURN k.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,신반포4차아파트,신반포4차아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (l {name:’신반포4차아파트’})-[:HAS_TYPE]-(k) RETURN k.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,신영체르니아파트,신영체르니아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (l {name:’신영체르니아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,삼성서초가든스위트아파트,삼성서초가든스위트아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’삼성서초가든스위트아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,방배우성아파트,방배우성아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’방배우성아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,방배아크로리버아파트,방배아크로리버아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (l {name:’방배아크로리버아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,서초쌍용플래티넘아파트,서초쌍용플래티넘아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’서초쌍용플래티넘아파트’})-[:HAS_TYPE]-(k) RETURN k.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,서초LH4단지아파트,서초LH4단지아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’서초LH4단지아파트’})-[:HAS_TYPE]-(k) RETURN k.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,신반포22차아파트,신반포22차아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (l {name:’신반포22차아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,대림아파트,대림아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’대림아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,서초한신리빙타워아파트,서초한신리빙타워아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’서초한신리빙타워아파트’})-[:HAS_TYPE]-(k) RETURN k.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,금호베스트빌아파트,금호베스트빌아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’금호베스트빌아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,방배아이파크아파트,방배아이파크아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (l {name:’방배아이파크아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,현대성우아파트,현대성우아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’현대성우아파트’})-[:HAS_TYPE]-(k) RETURN k.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,롯데캐슬클래식아파트,롯데캐슬클래식아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’롯데캐슬클래식아파트’})-[:HAS_TYPE]-(k) RETURN k.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,잠원훼미리아파트,잠원훼미리아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’잠원훼미리아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,대우효령아파트,대우효령아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’대우효령아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,현대멤피스아파트,현대멤피스아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’현대멤피스아파트’})-[:HAS_TYPE]-(k) RETURN k.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,현대ESA아파트,현대ESA아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’현대ESA아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,강남역푸르지오시티(도시형)아파트,강남역푸르지오시티(도시형)아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’강남역푸르지오시티(도시형)아파트’})-[:HAS_TYPE]-(k) RETURN k.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,방배롯데캐슬로제아파트,방배롯데캐슬로제아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’방배롯데캐슬로제아파트’})-[:HAS_TYPE]-(k) RETURN k.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,서초e-편한세상1차아파트,서초e-편한세상1차아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’서초e-편한세상1차아파트’})-[:HAS_TYPE]-(k) RETURN k.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,신반포12차아파트,신반포12차아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (l {name:’신반포12차아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,서초아트자이아파트,서초아트자이아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (l {name:’서초아트자이아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,아남아파트,아남아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’아남아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,서초이오빌아파트,서초이오빌아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’서초이오빌아파트’})-[:HAS_TYPE]-(k) RETURN k.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,우면한라아파트,우면한라아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’우면한라아파트’})-[:HAS_TYPE]-(k) RETURN k.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,방배서리풀e-편한세상아파트,방배서리풀e-편한세상아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (l {name:’방배서리풀e-편한세상아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,임광3차아파트,임광3차아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (l {name:’임광3차아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,삼호가든맨션5차아파트,삼호가든맨션5차아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’삼호가든맨션5차아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,현대ESA아파트,현대ESA아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’현대ESA아파트’})-[:HAS_TYPE]-(k) RETURN k.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,금호베스트빌아파트,금호베스트빌아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (l {name:’금호베스트빌아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,래미안리더스원아파트,래미안리더스원아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (l {name:’래미안리더스원아파트’})-[:HAS_TYPE]-(k) RETURN k.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,현대성우아파트,현대성우아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (l {name:’현대성우아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,대림아파트,대림아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’대림아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,삼풍아파트,삼풍아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (l {name:’삼풍아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,래미안서초에스티지S아파트,래미안서초에스티지S아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’래미안서초에스티지S아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,방배마에스트로아파트,방배마에스트로아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’방배마에스트로아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,아크로리버뷰신반포아파트,아크로리버뷰신반포아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’아크로리버뷰신반포아파트’})-[:HAS_TYPE]-(k) RETURN k.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,서초호반써밋아파트,서초호반써밋아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’서초호반써밋아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,신반포25차아파트,신반포25차아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’신반포25차아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,서초e-편한세상1차아파트,서초e-편한세상1차아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (l {name:’서초e-편한세상1차아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,래미안신반포리오센트아파트,래미안신반포리오센트아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’래미안신반포리오센트아파트’})-[:HAS_TYPE]-(k) RETURN k.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,더샵반포리버파크(도시형)아파트,더샵반포리버파크(도시형)아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (l {name:’더샵반포리버파크(도시형)아파트’})-[:HAS_TYPE]-(k) RETURN k.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,양재우성아파트,양재우성아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (l {name:’양재우성아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,서초래미안아파트,서초래미안아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (l {name:’서초래미안아파트’})-[:HAS_TYPE]-(k) RETURN k.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,현대아파트,현대아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (l {name:’현대아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,진흥아파트,진흥아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’진흥아파트’})-[:HAS_TYPE]-(k) RETURN k.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,반포리체아파트,반포리체아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (l {name:’반포리체아파트’})-[:HAS_TYPE]-(k) RETURN k.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,디에이치라클라스아파트,디에이치라클라스아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’디에이치라클라스아파트’})-[:HAS_TYPE]-(k) RETURN k.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,방배아이파크아파트,방배아이파크아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’방배아이파크아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,동고아파트,동고아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’동고아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,잠원대우아이빌아파트,잠원대우아이빌아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’잠원대우아이빌아파트’})-[:HAS_TYPE]-(k) RETURN k.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,서초이오빌아파트,서초이오빌아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (l {name:’서초이오빌아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,동고아파트,동고아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’동고아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,반포자이아파트,반포자이아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’반포자이아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,동고아파트,동고아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (l {name:’동고아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,헤센파크힐아파트,헤센파크힐아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’헤센파크힐아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,서초센트럴아이파크아파트,서초센트럴아이파크아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (l {name:’서초센트럴아이파크아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,한강아파트,한강아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’한강아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,반포힐스테이트아파트,반포힐스테이트아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (l {name:’반포힐스테이트아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,아남아파트,아남아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (l {name:’아남아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,LH서초5단지아파트,LH서초5단지아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (l {name:’LH서초5단지아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,서초롯데캐슬리버티아파트,서초롯데캐슬리버티아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’서초롯데캐슬리버티아파트’})-[:HAS_TYPE]-(k) RETURN k.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,방배브라운가아파트,방배브라운가아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’방배브라운가아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,래미안서초에스티지S아파트,래미안서초에스티지S아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’래미안서초에스티지S아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,방배동부센트레빌아파트,방배동부센트레빌아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’방배동부센트레빌아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,방배아이파크아파트,방배아이파크아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’방배아이파크아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,현대동궁아파트,현대동궁아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (l {name:’현대동궁아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,반포리체아파트,반포리체아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’반포리체아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,현대동궁아파트,현대동궁아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (l {name:’현대동궁아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,방배롯데캐슬아르떼아파트,방배롯데캐슬아르떼아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (l {name:’방배롯데캐슬아르떼아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,잠원한신그린아파트,잠원한신그린아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’잠원한신그린아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,한신서래아파트,한신서래아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (l {name:’한신서래아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,양재우성KBS(113동)아파트,양재우성KBS(113동)아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’양재우성KBS(113동)아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,한신서래아파트,한신서래아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (l {name:’한신서래아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,디에이치라클라스아파트,디에이치라클라스아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (l {name:’디에이치라클라스아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,서초현대아파트,서초현대아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’서초현대아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,대림아파트,대림아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (l {name:’대림아파트’})-[:HAS_TYPE]-(k) RETURN k.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,진흥아파트,진흥아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (l {name:’진흥아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,대림아파트,대림아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’대림아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,서초교대e편한세상아파트,서초교대e편한세상아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’서초교대e편한세상아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,래미안서초에스티지아파트,래미안서초에스티지아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (l {name:’래미안서초에스티지아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,롯데캐슬헤론아파트,롯데캐슬헤론아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’롯데캐슬헤론아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,서초한신아파트,서초한신아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’서초한신아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,서초네이처힐7단지아파트,서초네이처힐7단지아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’서초네이처힐7단지아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,양재우성KBS(113동)아파트,양재우성KBS(113동)아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’양재우성KBS(113동)아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,서초롯데캐슬프레지던트아파트,서초롯데캐슬프레지던트아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’서초롯데캐슬프레지던트아파트’})-[:HAS_TYPE]-(k) RETURN k.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,한신타운아파트,한신타운아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’한신타운아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,서초호반써밋아파트,서초호반써밋아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’서초호반써밋아파트’})-[:HAS_TYPE]-(k) RETURN k.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,방배e-편한세상1차아파트,방배e-편한세상1차아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (l {name:’방배e-편한세상1차아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,방배현대홈타운3차아파트,방배현대홈타운3차아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (l {name:’방배현대홈타운3차아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,방배우성아파트,방배우성아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’방배우성아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,한신타운아파트,한신타운아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’한신타운아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,래미안신반포리오센트아파트,래미안신반포리오센트아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’래미안신반포리오센트아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,신반포20차아파트,신반포20차아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’신반포20차아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,킴스빌리지아파트,킴스빌리지아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (l {name:’킴스빌리지아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,서초자이아파트,서초자이아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (l {name:’서초자이아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,방배롯데캐슬로제아파트,방배롯데캐슬로제아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (l {name:’방배롯데캐슬로제아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,동원베네스트아파트,동원베네스트아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’동원베네스트아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,방배e-편한세상1차아파트,방배e-편한세상1차아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’방배e-편한세상1차아파트’})-[:HAS_TYPE]-(k) RETURN k.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,신반포18차(337동)아파트,신반포18차(337동)아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’신반포18차(337동)아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,르엘신반포아파트,르엘신반포아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (l {name:’르엘신반포아파트’})-[:HAS_TYPE]-(k) RETURN k.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,강변아파트,강변아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’강변아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,반포센트럴자이아파트,반포센트럴자이아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (l {name:’반포센트럴자이아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,신반포4차아파트,신반포4차아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (l {name:’신반포4차아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,풍림아이원플러스아파트,풍림아이원플러스아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (l {name:’풍림아이원플러스아파트’})-[:HAS_TYPE]-(k) RETURN k.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,서초포레스타3단지아파트,서초포레스타3단지아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’서초포레스타3단지아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,방배자이아파트,방배자이아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (m {name:’방배자이아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,신반포20차아파트,신반포20차아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (l {name:’신반포20차아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
8,[mask_1]는 복도식이야 계단식이야?,apt_name,방배현대홈타운2차아파트,방배현대홈타운2차아파트는 복도식이야 계단식이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].entrance,apt_name,MATCH (l {name:’방배현대홈타운2차아파트’})-[:HAS_TYPE]-(n) RETURN n.entrance,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (k:’아파트’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN k.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (k:’단독주택’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN k.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(l {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (k:’빌라’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN k.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(l {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (k:’단독주택’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN k.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(l {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (k:’빌라’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN k.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (k:’아파트’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN k.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (k:’빌라’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN k.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (k:’단독주택’)-[:HAS_TYPE]-(l {entrance : '복도식'}) RETURN k.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (k:’아파트’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN k.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (k:’빌라’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN k.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(l {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(l {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (k:’빌라’)-[:HAS_TYPE]-(l {entrance : '복도식'}) RETURN k.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (k:’단독주택’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN k.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (k:’아파트’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN k.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(l {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (k:’아파트’)-[:HAS_TYPE]-(l {entrance : '복도식'}) RETURN k.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(l {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (k:’단독주택’)-[:HAS_TYPE]-(l {entrance : '복도식'}) RETURN k.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (k:’아파트’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN k.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(l {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(l {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (k:’빌라’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN k.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(l {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (k:’단독주택’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN k.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(l {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (k:’아파트’)-[:HAS_TYPE]-(l {entrance : '복도식'}) RETURN k.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(l {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (k:’아파트’)-[:HAS_TYPE]-(l {entrance : '복도식'}) RETURN k.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(l {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(l {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (k:’빌라’)-[:HAS_TYPE]-(l {entrance : '복도식'}) RETURN k.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(l {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(l {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (k:’단독주택’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN k.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(l {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (k:’빌라’)-[:HAS_TYPE]-(l {entrance : '복도식'}) RETURN k.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(l {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(l {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(l {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (k:’단독주택’)-[:HAS_TYPE]-(l {entrance : '복도식'}) RETURN k.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(l {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (k:’단독주택’)-[:HAS_TYPE]-(l {entrance : '복도식'}) RETURN k.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (k:’아파트’)-[:HAS_TYPE]-(l {entrance : '복도식'}) RETURN k.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (k:’단독주택’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN k.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(l {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(l {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(l {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(l {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (k:’단독주택’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN k.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (k:’아파트’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN k.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (k:’빌라’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN k.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(l {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(l {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(l {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(l {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (k:’단독주택’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN k.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (k:’단독주택’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN k.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (k:’아파트’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN k.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(l {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (k:’빌라’)-[:HAS_TYPE]-(l {entrance : '복도식'}) RETURN k.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (k:’빌라’)-[:HAS_TYPE]-(l {entrance : '복도식'}) RETURN k.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(l {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(l {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(l {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (k:’아파트’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN k.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (k:’빌라’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN k.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(l {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(l {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (k:’아파트’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN k.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(l {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (k:’아파트’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN k.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(l {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(l {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (k:’아파트’)-[:HAS_TYPE]-(l {entrance : '복도식'}) RETURN k.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(l {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(l {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (k:’단독주택’)-[:HAS_TYPE]-(l {entrance : '복도식'}) RETURN k.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (k:’아파트’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN k.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (k:’아파트’)-[:HAS_TYPE]-(l {entrance : '복도식'}) RETURN k.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (k:’빌라’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN k.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (k:’단독주택’)-[:HAS_TYPE]-(l {entrance : '복도식'}) RETURN k.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(l {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (k:’단독주택’)-[:HAS_TYPE]-(l {entrance : '복도식'}) RETURN k.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(l {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(l {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(l {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(l {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (k:’빌라’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN k.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(l {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (k:’단독주택’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN k.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(l {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(l {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(l {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (k:’아파트’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN k.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(l {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (k:’단독주택’)-[:HAS_TYPE]-(l {entrance : '복도식'}) RETURN k.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(l {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(l {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(l {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (k:’단독주택’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN k.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (k:’아파트’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN k.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (k:’아파트’)-[:HAS_TYPE]-(l {entrance : '복도식'}) RETURN k.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(l {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (k:’아파트’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN k.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (k:’단독주택’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN k.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (k:’단독주택’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN k.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (k:’빌라’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN k.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(l {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (k:’빌라’)-[:HAS_TYPE]-(l {entrance : '복도식'}) RETURN k.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (k:’아파트’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN k.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (k:’단독주택’)-[:HAS_TYPE]-(l {entrance : '복도식'}) RETURN k.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(l {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(l {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(l {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(l {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(l {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (k:’아파트’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN k.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(l {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (k:’빌라’)-[:HAS_TYPE]-(l {entrance : '복도식'}) RETURN k.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(l {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (k:’빌라’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN k.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(l {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(l {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (k:’빌라’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN k.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (k:’단독주택’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN k.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (k:’아파트’)-[:HAS_TYPE]-(l {entrance : '복도식'}) RETURN k.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (k:’단독주택’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN k.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (k:’단독주택’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN k.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (k:’단독주택’)-[:HAS_TYPE]-(l {entrance : '복도식'}) RETURN k.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (k:’아파트’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN k.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (k:’빌라’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN k.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (k:’빌라’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN k.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (k:’아파트’)-[:HAS_TYPE]-(l {entrance : '복도식'}) RETURN k.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (k:’단독주택’)-[:HAS_TYPE]-(l {entrance : '복도식'}) RETURN k.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (k:’단독주택’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN k.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(l {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (k:’아파트’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN k.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(l {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (k:’빌라’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN k.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(l {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (k:’아파트’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN k.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (k:’빌라’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN k.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (k:’빌라’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN k.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (k:’아파트’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN k.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(l {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (k:’단독주택’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN k.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(l {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (k:’단독주택’)-[:HAS_TYPE]-(l {entrance : '복도식'}) RETURN k.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (k:’단독주택’)-[:HAS_TYPE]-(l {entrance : '복도식'}) RETURN k.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(l {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(l {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (k:’아파트’)-[:HAS_TYPE]-(l {entrance : '복도식'}) RETURN k.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(l {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(l {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(l {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(l {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (k:’빌라’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN k.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (k:’단독주택’)-[:HAS_TYPE]-(l {entrance : '복도식'}) RETURN k.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (k:’단독주택’)-[:HAS_TYPE]-(l {entrance : '복도식'}) RETURN k.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (k:’단독주택’)-[:HAS_TYPE]-(l {entrance : '복도식'}) RETURN k.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (k:’단독주택’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN k.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(l {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (k:’아파트’)-[:HAS_TYPE]-(l {entrance : '복도식'}) RETURN k.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(l {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN n.name,1,2
9,복도식 [mask1] 찾아줘,building_type,,복도식 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {entrance : '복도식'}) RETURN [alpha].name,building_type,MATCH (k:’단독주택’)-[:HAS_TYPE]-(m {entrance : '복도식'}) RETURN k.name,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,풍림아이원플러스아파트,풍림아이원플러스아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (l {name:’풍림아이원플러스아파트’})-[:HAS_TYPE]-(k) RETURN k.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,킴스빌리지아파트,킴스빌리지아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’킴스빌리지아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,신반포18차(337동)아파트,신반포18차(337동)아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’신반포18차(337동)아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,방배서리풀e-편한세상아파트,방배서리풀e-편한세상아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’방배서리풀e-편한세상아파트’})-[:HAS_TYPE]-(k) RETURN k.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,반포르엘아파트,반포르엘아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’반포르엘아파트’})-[:HAS_TYPE]-(k) RETURN k.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,래미안서초스위트아파트,래미안서초스위트아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (l {name:’래미안서초스위트아파트’})-[:HAS_TYPE]-(k) RETURN k.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,잠원한신그린아파트,잠원한신그린아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’잠원한신그린아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,방배브라운스톤아파트,방배브라운스톤아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’방배브라운스톤아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,신반포19차아파트,신반포19차아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (l {name:’신반포19차아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,마제스타시티힐스테이트서리풀아파트,마제스타시티힐스테이트서리풀아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (l {name:’마제스타시티힐스테이트서리풀아파트’})-[:HAS_TYPE]-(k) RETURN k.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,반포푸르지오아파트,반포푸르지오아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’반포푸르지오아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,서초현대아파트,서초현대아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’서초현대아파트’})-[:HAS_TYPE]-(k) RETURN k.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,서초e-편한세상5차아파트,서초e-편한세상5차아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (l {name:’서초e-편한세상5차아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,방배래미안아파트,방배래미안아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’방배래미안아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,신반포12차아파트,신반포12차아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’신반포12차아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,한신서래아파트,한신서래아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’한신서래아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,삼호1차아파트,삼호1차아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’삼호1차아파트’})-[:HAS_TYPE]-(k) RETURN k.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,서초e-편한세상1차아파트,서초e-편한세상1차아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’서초e-편한세상1차아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,반포푸르지오아파트,반포푸르지오아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (l {name:’반포푸르지오아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,서초자이아파트,서초자이아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’서초자이아파트’})-[:HAS_TYPE]-(k) RETURN k.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,현대성우아파트,현대성우아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’현대성우아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,방배e-편한세상3차아파트,방배e-편한세상3차아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’방배e-편한세상3차아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,서초네이처힐2단지아파트,서초네이처힐2단지아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’서초네이처힐2단지아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,대림아파트,대림아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’대림아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,현대ESA아파트,현대ESA아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’현대ESA아파트’})-[:HAS_TYPE]-(k) RETURN k.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,마제스타시티힐스테이트서리풀아파트,마제스타시티힐스테이트서리풀아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’마제스타시티힐스테이트서리풀아파트’})-[:HAS_TYPE]-(k) RETURN k.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,신반포자이아파트,신반포자이아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’신반포자이아파트’})-[:HAS_TYPE]-(k) RETURN k.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,한신타운아파트,한신타운아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’한신타운아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,방배자이아파트,방배자이아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’방배자이아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,방배래미안타워아파트,방배래미안타워아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’방배래미안타워아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,한신서래아파트,한신서래아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’한신서래아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,신화아파트,신화아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’신화아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,서초아이파크아파트,서초아이파크아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (l {name:’서초아이파크아파트’})-[:HAS_TYPE]-(k) RETURN k.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,신반포9차아파트,신반포9차아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (l {name:’신반포9차아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,신반포19차아파트,신반포19차아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’신반포19차아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,서초e-편한세상5차아파트,서초e-편한세상5차아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’서초e-편한세상5차아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,현대슈퍼빌아파트,현대슈퍼빌아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’현대슈퍼빌아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,더샵서초아파트,더샵서초아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’더샵서초아파트’})-[:HAS_TYPE]-(k) RETURN k.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,삼익아파트,삼익아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’삼익아파트’})-[:HAS_TYPE]-(k) RETURN k.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,서초롯데캐슬리버티아파트,서초롯데캐슬리버티아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’서초롯데캐슬리버티아파트’})-[:HAS_TYPE]-(k) RETURN k.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,서초e-편한세상5차아파트,서초e-편한세상5차아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’서초e-편한세상5차아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,방배동부센트레빌아파트,방배동부센트레빌아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’방배동부센트레빌아파트’})-[:HAS_TYPE]-(k) RETURN k.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,방배우성아파트,방배우성아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (l {name:’방배우성아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,신반포16차아파트,신반포16차아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’신반포16차아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,롯데캐슬갤럭시2차아파트,롯데캐슬갤럭시2차아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (l {name:’롯데캐슬갤럭시2차아파트’})-[:HAS_TYPE]-(k) RETURN k.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,현대동궁아파트,현대동궁아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’현대동궁아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,삼호1차아파트,삼호1차아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’삼호1차아파트’})-[:HAS_TYPE]-(k) RETURN k.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,서초네이처힐2단지아파트,서초네이처힐2단지아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’서초네이처힐2단지아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,반포자이아파트,반포자이아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’반포자이아파트’})-[:HAS_TYPE]-(k) RETURN k.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,방배래미안타워아파트,방배래미안타워아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’방배래미안타워아파트’})-[:HAS_TYPE]-(k) RETURN k.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,서초롯데캐슬리버티아파트,서초롯데캐슬리버티아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’서초롯데캐슬리버티아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,더샵반포리버파크(도시형)아파트,더샵반포리버파크(도시형)아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’더샵반포리버파크(도시형)아파트’})-[:HAS_TYPE]-(k) RETURN k.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,방배한신트리플아파트,방배한신트리플아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (l {name:’방배한신트리플아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,서초포레스타3단지아파트,서초포레스타3단지아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’서초포레스타3단지아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,대림아파트,대림아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (l {name:’대림아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,삼호2차아파트,삼호2차아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’삼호2차아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,래미안퍼스티지아파트,래미안퍼스티지아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’래미안퍼스티지아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,신반포25차아파트,신반포25차아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’신반포25차아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,신화아파트,신화아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (l {name:’신화아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,방배현대홈타운2차아파트,방배현대홈타운2차아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (l {name:’방배현대홈타운2차아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,방배그랑자이아파트,방배그랑자이아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (l {name:’방배그랑자이아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,서초아트자이아파트,서초아트자이아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’서초아트자이아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,아크로리버파크아파트,아크로리버파크아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (l {name:’아크로리버파크아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,엠브이아파트,엠브이아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (l {name:’엠브이아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,코오롱아파트,코오롱아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’코오롱아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,래미안서초유니빌아파트,래미안서초유니빌아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (l {name:’래미안서초유니빌아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,반포한신타워아파트,반포한신타워아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’반포한신타워아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,삼환나띠르빌아파트,삼환나띠르빌아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’삼환나띠르빌아파트’})-[:HAS_TYPE]-(k) RETURN k.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,서초호반써밋아파트,서초호반써밋아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’서초호반써밋아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,우성5차아파트,우성5차아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’우성5차아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,방배현대홈타운3차아파트,방배현대홈타운3차아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’방배현대홈타운3차아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,DK밸리뷰서초(주)아파트,DK밸리뷰서초(주)아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’DK밸리뷰서초(주)아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,쌍용예가클래식아파트,쌍용예가클래식아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (l {name:’쌍용예가클래식아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,서초트라팰리스아파트,서초트라팰리스아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’서초트라팰리스아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,서초리시온아파트,서초리시온아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’서초리시온아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,반포미도1차아파트,반포미도1차아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’반포미도1차아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,아크로리버뷰신반포아파트,아크로리버뷰신반포아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’아크로리버뷰신반포아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,신반포4차아파트,신반포4차아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’신반포4차아파트’})-[:HAS_TYPE]-(k) RETURN k.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,서초대우아이빌아파트,서초대우아이빌아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (l {name:’서초대우아이빌아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,방배e-편한세상3차아파트,방배e-편한세상3차아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (l {name:’방배e-편한세상3차아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,신반포자이아파트,신반포자이아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’신반포자이아파트’})-[:HAS_TYPE]-(k) RETURN k.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,서초포레스타6단지아파트,서초포레스타6단지아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (l {name:’서초포레스타6단지아파트’})-[:HAS_TYPE]-(k) RETURN k.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,서초리시온아파트,서초리시온아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’서초리시온아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,신반포20차아파트,신반포20차아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’신반포20차아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,삼호3차아파트,삼호3차아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (l {name:’삼호3차아파트’})-[:HAS_TYPE]-(k) RETURN k.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,래미안리더스원아파트,래미안리더스원아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (l {name:’래미안리더스원아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,서초네이처힐1단지아파트,서초네이처힐1단지아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’서초네이처힐1단지아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,킴스빌리지아파트,킴스빌리지아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (l {name:’킴스빌리지아파트’})-[:HAS_TYPE]-(k) RETURN k.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,현대성우아파트,현대성우아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’현대성우아파트’})-[:HAS_TYPE]-(k) RETURN k.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,잠원한신아파트,잠원한신아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’잠원한신아파트’})-[:HAS_TYPE]-(k) RETURN k.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,한라비발디스튜디오193(도시형)아파트,한라비발디스튜디오193(도시형)아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’한라비발디스튜디오193(도시형)아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,방배래미안아트힐아파트,방배래미안아트힐아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (l {name:’방배래미안아트힐아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,롯데캐슬주피터아파트,롯데캐슬주피터아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (l {name:’롯데캐슬주피터아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,우면한라아파트,우면한라아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’우면한라아파트’})-[:HAS_TYPE]-(k) RETURN k.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,서초교대e편한세상아파트,서초교대e편한세상아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (l {name:’서초교대e편한세상아파트’})-[:HAS_TYPE]-(k) RETURN k.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,한라비발디스튜디오193(도시형)아파트,한라비발디스튜디오193(도시형)아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’한라비발디스튜디오193(도시형)아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,삼환나띠르빌아파트,삼환나띠르빌아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’삼환나띠르빌아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,서초호반써밋아파트,서초호반써밋아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’서초호반써밋아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,동원베네스트아파트,동원베네스트아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (l {name:’동원베네스트아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,삼환나띠르빌아파트,삼환나띠르빌아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’삼환나띠르빌아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,방배동부센트레빌아파트,방배동부센트레빌아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’방배동부센트레빌아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,잠원중앙하이츠(B동)아파트,잠원중앙하이츠(B동)아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (l {name:’잠원중앙하이츠(B동)아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,롯데캐슬주피터아파트,롯데캐슬주피터아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (l {name:’롯데캐슬주피터아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,서초롯데캐슬프레지던트아파트,서초롯데캐슬프레지던트아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’서초롯데캐슬프레지던트아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,한신서래아파트,한신서래아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’한신서래아파트’})-[:HAS_TYPE]-(k) RETURN k.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,서초교대e편한세상아파트,서초교대e편한세상아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (l {name:’서초교대e편한세상아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,신반포2차아파트,신반포2차아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (l {name:’신반포2차아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,동아아파트,동아아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’동아아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,잠원현대아파트,잠원현대아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’잠원현대아파트’})-[:HAS_TYPE]-(k) RETURN k.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,잠원현대아파트,잠원현대아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (l {name:’잠원현대아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,금호베스트빌아파트,금호베스트빌아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’금호베스트빌아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,래미안서초유니빌아파트,래미안서초유니빌아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’래미안서초유니빌아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,반포센트럴자이아파트,반포센트럴자이아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (l {name:’반포센트럴자이아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,방배우성아파트,방배우성아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’방배우성아파트’})-[:HAS_TYPE]-(k) RETURN k.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,방배서리풀e-편한세상아파트,방배서리풀e-편한세상아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’방배서리풀e-편한세상아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,현대성우아파트,현대성우아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (l {name:’현대성우아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,코오롱아파트,코오롱아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (l {name:’코오롱아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,롯데캐슬클래식아파트,롯데캐슬클래식아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (l {name:’롯데캐슬클래식아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,삼호가든맨션5차아파트,삼호가든맨션5차아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’삼호가든맨션5차아파트’})-[:HAS_TYPE]-(k) RETURN k.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,신반포19차아파트,신반포19차아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’신반포19차아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,서초롯데캐슬리버티아파트,서초롯데캐슬리버티아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (l {name:’서초롯데캐슬리버티아파트’})-[:HAS_TYPE]-(k) RETURN k.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,현대슈퍼빌아파트,현대슈퍼빌아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’현대슈퍼빌아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,방배브라운스톤아파트,방배브라운스톤아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’방배브라운스톤아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,서초네이처힐7단지아파트,서초네이처힐7단지아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (l {name:’서초네이처힐7단지아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,방배래미안아파트,방배래미안아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’방배래미안아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,신화아파트,신화아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’신화아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,서초e-편한세상5차아파트,서초e-편한세상5차아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (l {name:’서초e-편한세상5차아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,서초자이아파트,서초자이아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’서초자이아파트’})-[:HAS_TYPE]-(k) RETURN k.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,롯데캐슬갤럭시1차아파트,롯데캐슬갤럭시1차아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (l {name:’롯데캐슬갤럭시1차아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,현대멤피스아파트,현대멤피스아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’현대멤피스아파트’})-[:HAS_TYPE]-(k) RETURN k.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,잠원현대아파트,잠원현대아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’잠원현대아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,서초교대e편한세상아파트,서초교대e편한세상아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (l {name:’서초교대e편한세상아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,우면한라아파트,우면한라아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’우면한라아파트’})-[:HAS_TYPE]-(k) RETURN k.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,서초포레스타3단지아파트,서초포레스타3단지아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’서초포레스타3단지아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,삼호가든맨션5차아파트,삼호가든맨션5차아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (l {name:’삼호가든맨션5차아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,현대멤피스아파트,현대멤피스아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (l {name:’현대멤피스아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,반포주공1단지아파트,반포주공1단지아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’반포주공1단지아파트’})-[:HAS_TYPE]-(k) RETURN k.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,신반포8차아파트,신반포8차아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’신반포8차아파트’})-[:HAS_TYPE]-(k) RETURN k.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,신반포27차아파트,신반포27차아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (l {name:’신반포27차아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,방배브라운가아파트,방배브라운가아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’방배브라운가아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,아크로비스타아파트,아크로비스타아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’아크로비스타아파트’})-[:HAS_TYPE]-(k) RETURN k.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,롯데캐슬주피터아파트,롯데캐슬주피터아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (l {name:’롯데캐슬주피터아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,신반포27차아파트,신반포27차아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’신반포27차아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,서초대우디오빌프라임아파트,서초대우디오빌프라임아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’서초대우디오빌프라임아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,쌍용예가클래식아파트,쌍용예가클래식아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’쌍용예가클래식아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,우면한라아파트,우면한라아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’우면한라아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,서초포레스타5단지아파트,서초포레스타5단지아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’서초포레스타5단지아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,신반포7차아파트,신반포7차아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’신반포7차아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,롯데캐슬갤럭시1차아파트,롯데캐슬갤럭시1차아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’롯데캐슬갤럭시1차아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,블루힐하우스아파트,블루힐하우스아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’블루힐하우스아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,삼호2차아파트,삼호2차아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (l {name:’삼호2차아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,서초현대아파트,서초현대아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’서초현대아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,방배동부센트레빌아파트,방배동부센트레빌아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (l {name:’방배동부센트레빌아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,래미안서초에스티지아파트,래미안서초에스티지아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’래미안서초에스티지아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,르엘신반포파크애비뉴아파트,르엘신반포파크애비뉴아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (l {name:’르엘신반포파크애비뉴아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,대림아파트,대림아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’대림아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,삼익아파트,삼익아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’삼익아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,임광3차아파트,임광3차아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’임광3차아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,신반포궁전아파트,신반포궁전아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’신반포궁전아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,서초롯데캐슬프레지던트아파트,서초롯데캐슬프레지던트아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (l {name:’서초롯데캐슬프레지던트아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,동원베네스트아파트,동원베네스트아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (l {name:’동원베네스트아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,신동아1차아파트,신동아1차아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (l {name:’신동아1차아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,방배우성아파트,방배우성아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’방배우성아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,강남역푸르지오시티(도시형)아파트,강남역푸르지오시티(도시형)아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’강남역푸르지오시티(도시형)아파트’})-[:HAS_TYPE]-(k) RETURN k.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,삼호1차아파트,삼호1차아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (l {name:’삼호1차아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,코오롱아파트,코오롱아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’코오롱아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,롯데캐슬헤론아파트,롯데캐슬헤론아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’롯데캐슬헤론아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,반포센트레빌아스테리움아파트,반포센트레빌아스테리움아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’반포센트레빌아스테리움아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,쌍용예가클래식아파트,쌍용예가클래식아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (l {name:’쌍용예가클래식아파트’})-[:HAS_TYPE]-(k) RETURN k.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,동고아파트,동고아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’동고아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,대우효령아파트,대우효령아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’대우효령아파트’})-[:HAS_TYPE]-(k) RETURN k.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,삼풍아파트,삼풍아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’삼풍아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,서초LH4단지아파트,서초LH4단지아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’서초LH4단지아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,르엘신반포파크애비뉴아파트,르엘신반포파크애비뉴아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’르엘신반포파크애비뉴아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,방배아이파크아파트,방배아이파크아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’방배아이파크아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,더샵반포리버파크(도시형)아파트,더샵반포리버파크(도시형)아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (l {name:’더샵반포리버파크(도시형)아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,르엘신반포아파트,르엘신반포아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’르엘신반포아파트’})-[:HAS_TYPE]-(k) RETURN k.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,서초트라팰리스아파트,서초트라팰리스아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’서초트라팰리스아파트’})-[:HAS_TYPE]-(k) RETURN k.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,신반포자이아파트,신반포자이아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (l {name:’신반포자이아파트’})-[:HAS_TYPE]-(k) RETURN k.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,신반포25차아파트,신반포25차아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (l {name:’신반포25차아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,신영체르니아파트,신영체르니아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’신영체르니아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,방배자이아파트,방배자이아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’방배자이아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,동아아파트,동아아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’동아아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,방배브라운스톤아파트,방배브라운스톤아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’방배브라운스톤아파트’})-[:HAS_TYPE]-(k) RETURN k.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,대우효령아파트,대우효령아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’대우효령아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,지웰홈스서초아파트,지웰홈스서초아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (l {name:’지웰홈스서초아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,신반포11차아파트,신반포11차아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (l {name:’신반포11차아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,마제스타시티힐스테이트서리풀아파트,마제스타시티힐스테이트서리풀아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’마제스타시티힐스테이트서리풀아파트’})-[:HAS_TYPE]-(k) RETURN k.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,강남원효성아파트,강남원효성아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’강남원효성아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,래미안리더스원아파트,래미안리더스원아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (l {name:’래미안리더스원아파트’})-[:HAS_TYPE]-(k) RETURN k.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,유원서초아파트,유원서초아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (l {name:’유원서초아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,지웰홈스서초아파트,지웰홈스서초아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (l {name:’지웰홈스서초아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,삼호한숲아파트,삼호한숲아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’삼호한숲아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,롯데캐슬주피터아파트,롯데캐슬주피터아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (l {name:’롯데캐슬주피터아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,강남역푸르지오시티(도시형)아파트,강남역푸르지오시티(도시형)아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’강남역푸르지오시티(도시형)아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,서초네이처힐2단지아파트,서초네이처힐2단지아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’서초네이처힐2단지아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,현대슈퍼빌아파트,현대슈퍼빌아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’현대슈퍼빌아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,잠원현대훼밀리아파트,잠원현대훼밀리아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’잠원현대훼밀리아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,서초롯데캐슬프레지던트아파트,서초롯데캐슬프레지던트아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’서초롯데캐슬프레지던트아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,신반포27차아파트,신반포27차아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (l {name:’신반포27차아파트’})-[:HAS_TYPE]-(k) RETURN k.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,서초포레스타2단지아파트,서초포레스타2단지아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’서초포레스타2단지아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,롯데캐슬갤럭시1차아파트,롯데캐슬갤럭시1차아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’롯데캐슬갤럭시1차아파트’})-[:HAS_TYPE]-(k) RETURN k.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,한신타운아파트,한신타운아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’한신타운아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,LH서초5단지아파트,LH서초5단지아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’LH서초5단지아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,신반포22차아파트,신반포22차아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (l {name:’신반포22차아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,방배아트자이아파트,방배아트자이아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’방배아트자이아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,더샵반포리버파크(도시형)아파트,더샵반포리버파크(도시형)아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’더샵반포리버파크(도시형)아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,방배아이파크아파트,방배아이파크아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’방배아이파크아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,신반포16차아파트,신반포16차아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (l {name:’신반포16차아파트’})-[:HAS_TYPE]-(k) RETURN k.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,반포미도1차아파트,반포미도1차아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’반포미도1차아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,반포주공1단지아파트,반포주공1단지아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’반포주공1단지아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,"임광1,2차아파트","임광1,2차아파트는 개별난방이야 중앙난방이야?",MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,"MATCH (l {name:’임광1,2차아파트’})-[:HAS_TYPE]-(n) RETURN n.heating",1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,LH서초5단지아파트,LH서초5단지아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’LH서초5단지아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,양재우성KBS(113동)아파트,양재우성KBS(113동)아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (l {name:’양재우성KBS(113동)아파트’})-[:HAS_TYPE]-(k) RETURN k.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,더샵반포리버파크(도시형)아파트,더샵반포리버파크(도시형)아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’더샵반포리버파크(도시형)아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,강변아파트,강변아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’강변아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,반포미도1차아파트,반포미도1차아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (l {name:’반포미도1차아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,유원서초아파트,유원서초아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (l {name:’유원서초아파트’})-[:HAS_TYPE]-(k) RETURN k.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,한라비발디스튜디오193(도시형)아파트,한라비발디스튜디오193(도시형)아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’한라비발디스튜디오193(도시형)아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,대림아파트,대림아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’대림아파트’})-[:HAS_TYPE]-(k) RETURN k.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,신반포청구아파트,신반포청구아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’신반포청구아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,르엘신반포파크애비뉴아파트,르엘신반포파크애비뉴아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’르엘신반포파크애비뉴아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,서초e-편한세상1차아파트,서초e-편한세상1차아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (l {name:’서초e-편한세상1차아파트’})-[:HAS_TYPE]-(k) RETURN k.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,방배자이아파트,방배자이아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’방배자이아파트’})-[:HAS_TYPE]-(k) RETURN k.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,한신타운아파트,한신타운아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’한신타운아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,반포푸르지오아파트,반포푸르지오아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’반포푸르지오아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,반포센트럴자이아파트,반포센트럴자이아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’반포센트럴자이아파트’})-[:HAS_TYPE]-(k) RETURN k.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,현대ESA아파트,현대ESA아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’현대ESA아파트’})-[:HAS_TYPE]-(k) RETURN k.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,래미안원베일리아파트,래미안원베일리아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’래미안원베일리아파트’})-[:HAS_TYPE]-(k) RETURN k.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,서초이오빌아파트,서초이오빌아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’서초이오빌아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,신반포18차(337동)아파트,신반포18차(337동)아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’신반포18차(337동)아파트’})-[:HAS_TYPE]-(k) RETURN k.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,신반포22차아파트,신반포22차아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’신반포22차아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,방배대우디오빌아파트,방배대우디오빌아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’방배대우디오빌아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,삼성서초가든스위트아파트,삼성서초가든스위트아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’삼성서초가든스위트아파트’})-[:HAS_TYPE]-(k) RETURN k.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,서초e-편한세상2차아파트,서초e-편한세상2차아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (l {name:’서초e-편한세상2차아파트’})-[:HAS_TYPE]-(k) RETURN k.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,방배아이파크아파트,방배아이파크아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (l {name:’방배아이파크아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,서초아이파크아파트,서초아이파크아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (l {name:’서초아이파크아파트’})-[:HAS_TYPE]-(k) RETURN k.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,현대성우아파트,현대성우아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’현대성우아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,서초아이파크아파트,서초아이파크아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’서초아이파크아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,반포주공1단지아파트,반포주공1단지아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’반포주공1단지아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,반포센트레빌아스테리움아파트,반포센트레빌아스테리움아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’반포센트레빌아스테리움아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,방배현대홈타운1차아파트,방배현대홈타운1차아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’방배현대홈타운1차아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,서초포레스타2단지아파트,서초포레스타2단지아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’서초포레스타2단지아파트’})-[:HAS_TYPE]-(k) RETURN k.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,서초포레스타3단지아파트,서초포레스타3단지아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’서초포레스타3단지아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,한라비발디스튜디오193(도시형)아파트,한라비발디스튜디오193(도시형)아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (l {name:’한라비발디스튜디오193(도시형)아파트’})-[:HAS_TYPE]-(k) RETURN k.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,삼익아파트,삼익아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’삼익아파트’})-[:HAS_TYPE]-(k) RETURN k.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,서초래미안아파트,서초래미안아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’서초래미안아파트’})-[:HAS_TYPE]-(k) RETURN k.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,반포자이아파트,반포자이아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’반포자이아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,서초네이처힐7단지아파트,서초네이처힐7단지아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’서초네이처힐7단지아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,아크로비스타아파트,아크로비스타아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (l {name:’아크로비스타아파트’})-[:HAS_TYPE]-(k) RETURN k.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,서초포레스타3단지아파트,서초포레스타3단지아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’서초포레스타3단지아파트’})-[:HAS_TYPE]-(k) RETURN k.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,방배서리풀e-편한세상아파트,방배서리풀e-편한세상아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’방배서리풀e-편한세상아파트’})-[:HAS_TYPE]-(k) RETURN k.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,현대ESA아파트,현대ESA아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’현대ESA아파트’})-[:HAS_TYPE]-(k) RETURN k.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,신영체르니아파트,신영체르니아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’신영체르니아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,롯데캐슬주피터아파트,롯데캐슬주피터아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (l {name:’롯데캐슬주피터아파트’})-[:HAS_TYPE]-(k) RETURN k.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,삼성쉐르빌II아파트,삼성쉐르빌II아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’삼성쉐르빌II아파트’})-[:HAS_TYPE]-(k) RETURN k.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,방배그랑자이아파트,방배그랑자이아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’방배그랑자이아파트’})-[:HAS_TYPE]-(k) RETURN k.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,디에이치라클라스아파트,디에이치라클라스아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’디에이치라클라스아파트’})-[:HAS_TYPE]-(k) RETURN k.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,반포센트럴자이아파트,반포센트럴자이아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (l {name:’반포센트럴자이아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,방배현대홈타운1차아파트,방배현대홈타운1차아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’방배현대홈타운1차아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,강남원효성아파트,강남원효성아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’강남원효성아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,반포르엘아파트,반포르엘아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’반포르엘아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,현대성우아파트,현대성우아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’현대성우아파트’})-[:HAS_TYPE]-(k) RETURN k.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,현대슈퍼빌아파트,현대슈퍼빌아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’현대슈퍼빌아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,현대아파트,현대아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’현대아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,방배브라운스톤아파트,방배브라운스톤아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’방배브라운스톤아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,서초힐스아파트,서초힐스아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’서초힐스아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,코오롱아파트,코오롱아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’코오롱아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,신동아아파트,신동아아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’신동아아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,롯데캐슬헤론아파트,롯데캐슬헤론아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (l {name:’롯데캐슬헤론아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,한라비발디스튜디오193(도시형)아파트,한라비발디스튜디오193(도시형)아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’한라비발디스튜디오193(도시형)아파트’})-[:HAS_TYPE]-(k) RETURN k.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,서초그랑자이아파트,서초그랑자이아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’서초그랑자이아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,반포써밋아파트,반포써밋아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (l {name:’반포써밋아파트’})-[:HAS_TYPE]-(k) RETURN k.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,반포래미안아이파크아파트,반포래미안아이파크아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’반포래미안아이파크아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,힐스테이트서초젠트리스아파트,힐스테이트서초젠트리스아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’힐스테이트서초젠트리스아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,방배대우디오빌아파트,방배대우디오빌아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’방배대우디오빌아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,잠원한신그린아파트,잠원한신그린아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’잠원한신그린아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,서초쌍용플래티넘아파트,서초쌍용플래티넘아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (l {name:’서초쌍용플래티넘아파트’})-[:HAS_TYPE]-(k) RETURN k.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,신동아아파트,신동아아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’신동아아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,잠원한신그린아파트,잠원한신그린아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (l {name:’잠원한신그린아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,서초한빛삼성아파트,서초한빛삼성아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’서초한빛삼성아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,잠원중앙하이츠(B동)아파트,잠원중앙하이츠(B동)아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’잠원중앙하이츠(B동)아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,반포자이아파트,반포자이아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’반포자이아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,반포주공1단지아파트,반포주공1단지아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’반포주공1단지아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,쌍용예가클래식아파트,쌍용예가클래식아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’쌍용예가클래식아파트’})-[:HAS_TYPE]-(k) RETURN k.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,신반포청구아파트,신반포청구아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’신반포청구아파트’})-[:HAS_TYPE]-(k) RETURN k.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,진흥아파트,진흥아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (l {name:’진흥아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,서초현대아파트,서초현대아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’서초현대아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,삼호2차아파트,삼호2차아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’삼호2차아파트’})-[:HAS_TYPE]-(k) RETURN k.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,쌍용예가클래식아파트,쌍용예가클래식아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (l {name:’쌍용예가클래식아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,서초네이처힐4단지아파트,서초네이처힐4단지아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’서초네이처힐4단지아파트’})-[:HAS_TYPE]-(k) RETURN k.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,DK밸리뷰서초(주)아파트,DK밸리뷰서초(주)아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’DK밸리뷰서초(주)아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,르엘신반포아파트,르엘신반포아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (l {name:’르엘신반포아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,신화아파트,신화아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’신화아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,서초현대아파트,서초현대아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’서초현대아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,반포리체아파트,반포리체아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’반포리체아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,신반포11차아파트,신반포11차아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’신반포11차아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,서초삼성래미안아파트,서초삼성래미안아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (l {name:’서초삼성래미안아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,신반포10차아파트,신반포10차아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’신반포10차아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
10,[mask_1]는 개별난방이야 중앙난방이야?,apt_name,방배자이아파트,방배자이아파트는 개별난방이야 중앙난방이야?,MATCH ([beta] {name:’[mask_1]’})-[:HAS_TYPE]-([alpha]) RETURN [alpha].heating,apt_name,MATCH (m {name:’방배자이아파트’})-[:HAS_TYPE]-(n) RETURN n.heating,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (k:’아파트’)-[:HAS_TYPE]-(l {heating : '개별난방'}) RETURN k.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (k:’단독주택’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN k.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(l {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (k:’아파트’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN k.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(l {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(l {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (k:’단독주택’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN k.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (k:’단독주택’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN k.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (k:’빌라’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN k.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(l {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(l {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(l {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(l {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(l {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(l {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(l {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(l {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (k:’단독주택’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN k.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (k:’단독주택’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN k.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (k:’빌라’)-[:HAS_TYPE]-(l {heating : '개별난방'}) RETURN k.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(l {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (k:’빌라’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN k.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (k:’아파트’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN k.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (k:’아파트’)-[:HAS_TYPE]-(l {heating : '개별난방'}) RETURN k.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (k:’아파트’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN k.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(l {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(l {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(l {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (k:’빌라’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN k.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (k:’빌라’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN k.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (k:’아파트’)-[:HAS_TYPE]-(l {heating : '개별난방'}) RETURN k.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (k:’아파트’)-[:HAS_TYPE]-(l {heating : '개별난방'}) RETURN k.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (k:’아파트’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN k.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (k:’단독주택’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN k.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(l {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(l {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(l {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (k:’빌라’)-[:HAS_TYPE]-(l {heating : '개별난방'}) RETURN k.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(l {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(l {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (k:’아파트’)-[:HAS_TYPE]-(l {heating : '개별난방'}) RETURN k.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (k:’아파트’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN k.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (k:’아파트’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN k.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (k:’빌라’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN k.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(l {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (k:’빌라’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN k.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(l {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(l {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (k:’아파트’)-[:HAS_TYPE]-(l {heating : '개별난방'}) RETURN k.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(l {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(l {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (k:’빌라’)-[:HAS_TYPE]-(l {heating : '개별난방'}) RETURN k.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(l {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(l {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(l {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(l {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(l {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (k:’아파트’)-[:HAS_TYPE]-(l {heating : '개별난방'}) RETURN k.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(l {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (k:’단독주택’)-[:HAS_TYPE]-(l {heating : '개별난방'}) RETURN k.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (k:’아파트’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN k.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(l {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (k:’아파트’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN k.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (k:’빌라’)-[:HAS_TYPE]-(l {heating : '개별난방'}) RETURN k.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(l {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(l {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (k:’단독주택’)-[:HAS_TYPE]-(l {heating : '개별난방'}) RETURN k.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(l {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(l {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (k:’단독주택’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN k.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(l {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(l {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (k:’아파트’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN k.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (k:’아파트’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN k.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(l {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (k:’단독주택’)-[:HAS_TYPE]-(l {heating : '개별난방'}) RETURN k.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (k:’단독주택’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN k.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (k:’아파트’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN k.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(l {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (k:’빌라’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN k.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(l {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (k:’아파트’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN k.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (k:’단독주택’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN k.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (k:’빌라’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN k.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (k:’단독주택’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN k.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (k:’아파트’)-[:HAS_TYPE]-(l {heating : '개별난방'}) RETURN k.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (k:’아파트’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN k.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (k:’아파트’)-[:HAS_TYPE]-(l {heating : '개별난방'}) RETURN k.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(l {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (k:’단독주택’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN k.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(l {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (k:’빌라’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN k.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (k:’아파트’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN k.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (k:’빌라’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN k.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (k:’빌라’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN k.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (k:’아파트’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN k.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(l {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (k:’아파트’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN k.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (k:’아파트’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN k.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(l {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (k:’빌라’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN k.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (k:’빌라’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN k.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (k:’빌라’)-[:HAS_TYPE]-(l {heating : '개별난방'}) RETURN k.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (k:’아파트’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN k.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(l {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (k:’아파트’)-[:HAS_TYPE]-(l {heating : '개별난방'}) RETURN k.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(l {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (k:’아파트’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN k.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(l {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(l {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(l {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (k:’단독주택’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN k.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (k:’아파트’)-[:HAS_TYPE]-(l {heating : '개별난방'}) RETURN k.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (k:’단독주택’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN k.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(l {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (k:’단독주택’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN k.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (k:’단독주택’)-[:HAS_TYPE]-(l {heating : '개별난방'}) RETURN k.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (k:’빌라’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN k.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(l {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(l {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(l {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(l {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (k:’단독주택’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN k.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (k:’빌라’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN k.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(l {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (k:’단독주택’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN k.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (k:’아파트’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN k.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (k:’아파트’)-[:HAS_TYPE]-(l {heating : '개별난방'}) RETURN k.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(l {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (k:’단독주택’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN k.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(l {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(l {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (k:’아파트’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN k.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(l {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (k:’단독주택’)-[:HAS_TYPE]-(l {heating : '개별난방'}) RETURN k.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (k:’빌라’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN k.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(l {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (k:’단독주택’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN k.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(l {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (k:’아파트’)-[:HAS_TYPE]-(l {heating : '개별난방'}) RETURN k.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(l {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(l {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (k:’빌라’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN k.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(l {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (k:’아파트’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN k.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (k:’단독주택’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN k.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (k:’단독주택’)-[:HAS_TYPE]-(l {heating : '개별난방'}) RETURN k.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (k:’아파트’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN k.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(l {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (k:’아파트’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN k.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(l {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(l {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (k:’아파트’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN k.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (k:’아파트’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN k.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (k:’아파트’)-[:HAS_TYPE]-(l {heating : '개별난방'}) RETURN k.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (k:’빌라’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN k.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (k:’아파트’)-[:HAS_TYPE]-(l {heating : '개별난방'}) RETURN k.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(l {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(l {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (k:’단독주택’)-[:HAS_TYPE]-(l {heating : '개별난방'}) RETURN k.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (k:’빌라’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN k.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (k:’단독주택’)-[:HAS_TYPE]-(l {heating : '개별난방'}) RETURN k.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (k:’빌라’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN k.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (k:’빌라’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN k.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(l {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(l {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (k:’빌라’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN k.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(l {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (k:’단독주택’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN k.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’단독주택’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’빌라’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
11,개별난방인 [mask1] 찾아줘,building_type,,개별난방인 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’)-[:HAS_TYPE]-([beta] {heating : '개별난방'}) RETURN [alpha].name,building_type,MATCH (n:’아파트’)-[:HAS_TYPE]-(m {heating : '개별난방'}) RETURN n.name,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,신반포8차아파트,신반포8차아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (k {name:’신반포8차아파트’}) RETURN k.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,더샵서초아파트,더샵서초아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (k {name:’더샵서초아파트’}) RETURN k.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,우면한라아파트,우면한라아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (k {name:’우면한라아파트’}) RETURN k.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,서초교대e편한세상아파트,서초교대e편한세상아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (k {name:’서초교대e편한세상아파트’}) RETURN k.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,LH서초5단지아파트,LH서초5단지아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’LH서초5단지아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,서초네이처힐6단지아파트,서초네이처힐6단지아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (k {name:’서초네이처힐6단지아파트’}) RETURN k.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,롯데캐슬주피터아파트,롯데캐슬주피터아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’롯데캐슬주피터아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,반포센트럴자이아파트,반포센트럴자이아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (k {name:’반포센트럴자이아파트’}) RETURN k.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,르엘신반포파크애비뉴아파트,르엘신반포파크애비뉴아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’르엘신반포파크애비뉴아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,방배래미안타워아파트,방배래미안타워아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’방배래미안타워아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,방배아크로리버아파트,방배아크로리버아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’방배아크로리버아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,신반포20차아파트,신반포20차아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’신반포20차아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,DK밸리뷰서초(주)아파트,DK밸리뷰서초(주)아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’DK밸리뷰서초(주)아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,방배동부센트레빌아파트,방배동부센트레빌아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (k {name:’방배동부센트레빌아파트’}) RETURN k.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,한신서래아파트,한신서래아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’한신서래아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,"임광1,2차아파트","임광1,2차아파트에는 지하주차장이 있어?",MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,"MATCH (n {name:’임광1,2차아파트’}) RETURN n.parking_lot_under",1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,반포힐스테이트아파트,반포힐스테이트아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’반포힐스테이트아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,아크로비스타아파트,아크로비스타아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’아크로비스타아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,삼익아파트,삼익아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (k {name:’삼익아파트’}) RETURN k.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,방배현대홈타운3차아파트,방배현대홈타운3차아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’방배현대홈타운3차아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,래미안리더스원아파트,래미안리더스원아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’래미안리더스원아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,잠원현대아파트,잠원현대아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’잠원현대아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,밀라텔쉐르빌(엠쉐르빌)아파트,밀라텔쉐르빌(엠쉐르빌)아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’밀라텔쉐르빌(엠쉐르빌)아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,서초포레스타6단지아파트,서초포레스타6단지아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’서초포레스타6단지아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,더샵서초아파트,더샵서초아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (k {name:’더샵서초아파트’}) RETURN k.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,삼호2차아파트,삼호2차아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (k {name:’삼호2차아파트’}) RETURN k.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,서초e-편한세상5차아파트,서초e-편한세상5차아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’서초e-편한세상5차아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,방배브라운가아파트,방배브라운가아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (k {name:’방배브라운가아파트’}) RETURN k.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,디에이치라클라스아파트,디에이치라클라스아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’디에이치라클라스아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,방배우성아파트,방배우성아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’방배우성아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,아크로리버뷰신반포아파트,아크로리버뷰신반포아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (k {name:’아크로리버뷰신반포아파트’}) RETURN k.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,방배대우디오빌아파트,방배대우디오빌아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’방배대우디오빌아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,반포미도1차아파트,반포미도1차아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’반포미도1차아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,반포래미안아이파크아파트,반포래미안아이파크아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’반포래미안아이파크아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,잠원한신그린아파트,잠원한신그린아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (k {name:’잠원한신그린아파트’}) RETURN k.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,반포미도1차아파트,반포미도1차아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (k {name:’반포미도1차아파트’}) RETURN k.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,풍림아이원플러스아파트,풍림아이원플러스아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’풍림아이원플러스아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,신반포20차아파트,신반포20차아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (k {name:’신반포20차아파트’}) RETURN k.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,지웰홈스서초아파트,지웰홈스서초아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’지웰홈스서초아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,동원베네스트아파트,동원베네스트아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (k {name:’동원베네스트아파트’}) RETURN k.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,반포리체아파트,반포리체아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’반포리체아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,신반포7차아파트,신반포7차아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’신반포7차아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,롯데캐슬갤럭시1차아파트,롯데캐슬갤럭시1차아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (k {name:’롯데캐슬갤럭시1차아파트’}) RETURN k.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,신반포25차아파트,신반포25차아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’신반포25차아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,신반포21차아파트,신반포21차아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’신반포21차아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,래미안퍼스티지아파트,래미안퍼스티지아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’래미안퍼스티지아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,신반포9차아파트,신반포9차아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’신반포9차아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,잠원한신그린아파트,잠원한신그린아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’잠원한신그린아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,삼호한숲아파트,삼호한숲아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’삼호한숲아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,래미안원베일리아파트,래미안원베일리아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (k {name:’래미안원베일리아파트’}) RETURN k.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,"임광1,2차아파트","임광1,2차아파트에는 지하주차장이 있어?",MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,"MATCH (n {name:’임광1,2차아파트’}) RETURN n.parking_lot_under",1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,방배브라운스톤아파트,방배브라운스톤아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’방배브라운스톤아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,신동아2차아파트,신동아2차아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’신동아2차아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,아남아파트,아남아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’아남아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,현대슈퍼빌아파트,현대슈퍼빌아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (k {name:’현대슈퍼빌아파트’}) RETURN k.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,아크로리버파크아파트,아크로리버파크아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’아크로리버파크아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,반포힐스테이트아파트,반포힐스테이트아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’반포힐스테이트아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,삼호3차아파트,삼호3차아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (k {name:’삼호3차아파트’}) RETURN k.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,삼호2차아파트,삼호2차아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’삼호2차아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,헤센파크힐아파트,헤센파크힐아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (k {name:’헤센파크힐아파트’}) RETURN k.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,동아아파트,동아아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (k {name:’동아아파트’}) RETURN k.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,삼호4차아파트,삼호4차아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’삼호4차아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,삼호2차아파트,삼호2차아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’삼호2차아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,신동아1차아파트,신동아1차아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’신동아1차아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,우성5차아파트,우성5차아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (k {name:’우성5차아파트’}) RETURN k.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,방배현대홈타운3차아파트,방배현대홈타운3차아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (k {name:’방배현대홈타운3차아파트’}) RETURN k.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,방배래미안아트힐아파트,방배래미안아트힐아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’방배래미안아트힐아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,아크로리버뷰신반포아파트,아크로리버뷰신반포아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (k {name:’아크로리버뷰신반포아파트’}) RETURN k.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,신반포7차아파트,신반포7차아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’신반포7차아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,"임광1,2차아파트","임광1,2차아파트에는 지하주차장이 있어?",MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,"MATCH (k {name:’임광1,2차아파트’}) RETURN k.parking_lot_under",1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,서초현대아파트,서초현대아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’서초현대아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,방배현대홈타운3차아파트,방배현대홈타운3차아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’방배현대홈타운3차아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,방배롯데캐슬아르떼아파트,방배롯데캐슬아르떼아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’방배롯데캐슬아르떼아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,서초롯데캐슬리버티아파트,서초롯데캐슬리버티아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’서초롯데캐슬리버티아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,서초더샵포레아파트,서초더샵포레아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’서초더샵포레아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,반포센트럴자이아파트,반포센트럴자이아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (k {name:’반포센트럴자이아파트’}) RETURN k.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,대우효령아파트,대우효령아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (k {name:’대우효령아파트’}) RETURN k.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,래미안서초스위트아파트,래미안서초스위트아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (k {name:’래미안서초스위트아파트’}) RETURN k.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,잠원현대훼밀리아파트,잠원현대훼밀리아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (k {name:’잠원현대훼밀리아파트’}) RETURN k.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,신반포27차아파트,신반포27차아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’신반포27차아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,방배동부센트레빌아파트,방배동부센트레빌아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’방배동부센트레빌아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,르엘신반포아파트,르엘신반포아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (k {name:’르엘신반포아파트’}) RETURN k.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,르엘신반포아파트,르엘신반포아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (k {name:’르엘신반포아파트’}) RETURN k.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,신반포16차아파트,신반포16차아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’신반포16차아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,서초현대4차아파트,서초현대4차아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (k {name:’서초현대4차아파트’}) RETURN k.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,방배롯데캐슬로제아파트,방배롯데캐슬로제아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (k {name:’방배롯데캐슬로제아파트’}) RETURN k.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,신반포2차아파트,신반포2차아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’신반포2차아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,방배아크로리버아파트,방배아크로리버아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’방배아크로리버아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,신동아1차아파트,신동아1차아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (k {name:’신동아1차아파트’}) RETURN k.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,방배자이아파트,방배자이아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’방배자이아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,서초그랑자이아파트,서초그랑자이아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’서초그랑자이아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,잠원한신그린아파트,잠원한신그린아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’잠원한신그린아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,더샵반포리버파크(도시형)아파트,더샵반포리버파크(도시형)아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’더샵반포리버파크(도시형)아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,방배현대홈타운1차아파트,방배현대홈타운1차아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’방배현대홈타운1차아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,방배현대홈타운2차아파트,방배현대홈타운2차아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’방배현대홈타운2차아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,서초LH4단지아파트,서초LH4단지아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’서초LH4단지아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,방배자이아파트,방배자이아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’방배자이아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,임광3차아파트,임광3차아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (k {name:’임광3차아파트’}) RETURN k.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,방배우성아파트,방배우성아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’방배우성아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,반포힐스테이트아파트,반포힐스테이트아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (k {name:’반포힐스테이트아파트’}) RETURN k.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,서초리시온아파트,서초리시온아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’서초리시온아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,서초센트럴아이파크아파트,서초센트럴아이파크아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’서초센트럴아이파크아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,서초한신아파트,서초한신아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’서초한신아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,우성5차아파트,우성5차아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’우성5차아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,서초리시온아파트,서초리시온아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’서초리시온아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,신동아아파트,신동아아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’신동아아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,방배우성아파트,방배우성아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’방배우성아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,방배현대홈타운3차아파트,방배현대홈타운3차아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (k {name:’방배현대홈타운3차아파트’}) RETURN k.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,아크로리버뷰신반포아파트,아크로리버뷰신반포아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’아크로리버뷰신반포아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,신반포25차아파트,신반포25차아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’신반포25차아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,우면한라아파트,우면한라아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (k {name:’우면한라아파트’}) RETURN k.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,강변아파트,강변아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’강변아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,방배브라운가아파트,방배브라운가아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’방배브라운가아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,서초포레스타6단지아파트,서초포레스타6단지아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (k {name:’서초포레스타6단지아파트’}) RETURN k.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,잠원한신아파트,잠원한신아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’잠원한신아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,대림아파트,대림아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’대림아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,녹원한신아파트,녹원한신아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’녹원한신아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,래미안원베일리아파트,래미안원베일리아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (k {name:’래미안원베일리아파트’}) RETURN k.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,롯데캐슬갤럭시1차아파트,롯데캐슬갤럭시1차아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (k {name:’롯데캐슬갤럭시1차아파트’}) RETURN k.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,신동아1차아파트,신동아1차아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’신동아1차아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,방배현대홈타운3차아파트,방배현대홈타운3차아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’방배현대홈타운3차아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,양재우성KBS(113동)아파트,양재우성KBS(113동)아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (k {name:’양재우성KBS(113동)아파트’}) RETURN k.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,신화아파트,신화아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’신화아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,삼호4차아파트,삼호4차아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (k {name:’삼호4차아파트’}) RETURN k.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,우면한라아파트,우면한라아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (k {name:’우면한라아파트’}) RETURN k.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,엠브이아파트,엠브이아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’엠브이아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,서초힐스아파트,서초힐스아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (k {name:’서초힐스아파트’}) RETURN k.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,신반포20차아파트,신반포20차아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’신반포20차아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,래미안신반포팰리스아파트,래미안신반포팰리스아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’래미안신반포팰리스아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,엠브이아파트,엠브이아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (k {name:’엠브이아파트’}) RETURN k.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,더샵반포리버파크(도시형)아파트,더샵반포리버파크(도시형)아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’더샵반포리버파크(도시형)아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,신반포19차아파트,신반포19차아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (k {name:’신반포19차아파트’}) RETURN k.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,유원서초아파트,유원서초아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’유원서초아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,서초래미안아파트,서초래미안아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’서초래미안아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,현대ESA아파트,현대ESA아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’현대ESA아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,서초아트자이아파트,서초아트자이아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’서초아트자이아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,신반포9차아파트,신반포9차아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’신반포9차아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,강남역푸르지오시티(도시형)아파트,강남역푸르지오시티(도시형)아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (k {name:’강남역푸르지오시티(도시형)아파트’}) RETURN k.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,잠원대우아이빌아파트,잠원대우아이빌아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’잠원대우아이빌아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,한신타운아파트,한신타운아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’한신타운아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,신반포자이아파트,신반포자이아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (k {name:’신반포자이아파트’}) RETURN k.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,서초아이파크아파트,서초아이파크아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’서초아이파크아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,삼호가든맨션5차아파트,삼호가든맨션5차아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’삼호가든맨션5차아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,신반포7차아파트,신반포7차아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’신반포7차아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,래미안서초스위트아파트,래미안서초스위트아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’래미안서초스위트아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,서초포레스타3단지아파트,서초포레스타3단지아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (k {name:’서초포레스타3단지아파트’}) RETURN k.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,롯데캐슬클래식아파트,롯데캐슬클래식아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’롯데캐슬클래식아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,신반포17차아파트,신반포17차아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (k {name:’신반포17차아파트’}) RETURN k.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,블루힐하우스아파트,블루힐하우스아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’블루힐하우스아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,한신로얄아파트,한신로얄아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’한신로얄아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,래미안신반포리오센트아파트,래미안신반포리오센트아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’래미안신반포리오센트아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,신반포18차(337동)아파트,신반포18차(337동)아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’신반포18차(337동)아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,서초교대e편한세상아파트,서초교대e편한세상아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’서초교대e편한세상아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,서초자이아파트,서초자이아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (k {name:’서초자이아파트’}) RETURN k.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,신반포7차아파트,신반포7차아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (k {name:’신반포7차아파트’}) RETURN k.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,래미안신반포리오센트아파트,래미안신반포리오센트아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’래미안신반포리오센트아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,방배e-편한세상1차아파트,방배e-편한세상1차아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (k {name:’방배e-편한세상1차아파트’}) RETURN k.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,래미안서초에스티지아파트,래미안서초에스티지아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (k {name:’래미안서초에스티지아파트’}) RETURN k.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,동고아파트,동고아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’동고아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,잠원대우아이빌아파트,잠원대우아이빌아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’잠원대우아이빌아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,방배동부센트레빌아파트,방배동부센트레빌아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (k {name:’방배동부센트레빌아파트’}) RETURN k.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,서초쌍용플래티넘아파트,서초쌍용플래티넘아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’서초쌍용플래티넘아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,롯데캐슬클래식아파트,롯데캐슬클래식아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’롯데캐슬클래식아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,신반포궁전아파트,신반포궁전아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’신반포궁전아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,잠원월드메르디앙아파트,잠원월드메르디앙아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (k {name:’잠원월드메르디앙아파트’}) RETURN k.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,서초한신리빙타워아파트,서초한신리빙타워아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’서초한신리빙타워아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,삼호가든맨션5차아파트,삼호가든맨션5차아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (k {name:’삼호가든맨션5차아파트’}) RETURN k.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,현대ESA2아파트,현대ESA2아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (k {name:’현대ESA2아파트’}) RETURN k.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,반포미도1차아파트,반포미도1차아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’반포미도1차아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,현대슈퍼빌아파트,현대슈퍼빌아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’현대슈퍼빌아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,진흥아파트,진흥아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (k {name:’진흥아파트’}) RETURN k.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,한강아파트,한강아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’한강아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,신반포8차아파트,신반포8차아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’신반포8차아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,현대멤피스아파트,현대멤피스아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (k {name:’현대멤피스아파트’}) RETURN k.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,래미안원베일리아파트,래미안원베일리아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’래미안원베일리아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,방배래미안아파트,방배래미안아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (k {name:’방배래미안아파트’}) RETURN k.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,반포센트레빌아스테리움아파트,반포센트레빌아스테리움아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’반포센트레빌아스테리움아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,래미안서초스위트아파트,래미안서초스위트아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’래미안서초스위트아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,서초교대e편한세상아파트,서초교대e편한세상아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’서초교대e편한세상아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,서초쌍용플래티넘아파트,서초쌍용플래티넘아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’서초쌍용플래티넘아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,서초포레스타3단지아파트,서초포레스타3단지아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’서초포레스타3단지아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,신반포궁전아파트,신반포궁전아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’신반포궁전아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,잠원월드메르디앙아파트,잠원월드메르디앙아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’잠원월드메르디앙아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,반포써밋아파트,반포써밋아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’반포써밋아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,래미안서초에스티지아파트,래미안서초에스티지아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’래미안서초에스티지아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,삼호1차아파트,삼호1차아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’삼호1차아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,한라비발디스튜디오193(도시형)아파트,한라비발디스튜디오193(도시형)아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’한라비발디스튜디오193(도시형)아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,풍림아이원플러스아파트,풍림아이원플러스아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’풍림아이원플러스아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,신반포25차아파트,신반포25차아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’신반포25차아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,방배e-편한세상3차아파트,방배e-편한세상3차아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’방배e-편한세상3차아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,아크로리버파크아파트,아크로리버파크아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’아크로리버파크아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,서초포레스타3단지아파트,서초포레스타3단지아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (k {name:’서초포레스타3단지아파트’}) RETURN k.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,반포르엘아파트,반포르엘아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’반포르엘아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,방배아크로타워아파트,방배아크로타워아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (k {name:’방배아크로타워아파트’}) RETURN k.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,방배우성아파트,방배우성아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (k {name:’방배우성아파트’}) RETURN k.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,서초포레스타7단지아파트,서초포레스타7단지아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (k {name:’서초포레스타7단지아파트’}) RETURN k.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,래미안원베일리아파트,래미안원베일리아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (k {name:’래미안원베일리아파트’}) RETURN k.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,방배아트자이아파트,방배아트자이아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’방배아트자이아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,반포주공1단지아파트,반포주공1단지아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’반포주공1단지아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,신반포7차아파트,신반포7차아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’신반포7차아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,래미안리더스원아파트,래미안리더스원아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (k {name:’래미안리더스원아파트’}) RETURN k.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,래미안리더스원아파트,래미안리더스원아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (k {name:’래미안리더스원아파트’}) RETURN k.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,서초e-편한세상5차아파트,서초e-편한세상5차아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’서초e-편한세상5차아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,신반포2차아파트,신반포2차아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’신반포2차아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,힐스테이트서초젠트리스아파트,힐스테이트서초젠트리스아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (k {name:’힐스테이트서초젠트리스아파트’}) RETURN k.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,신반포자이아파트,신반포자이아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’신반포자이아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,아크로리버뷰신반포아파트,아크로리버뷰신반포아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (k {name:’아크로리버뷰신반포아파트’}) RETURN k.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,반포르엘아파트,반포르엘아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (k {name:’반포르엘아파트’}) RETURN k.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,방배동부센트레빌아파트,방배동부센트레빌아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’방배동부센트레빌아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,서초네이처힐6단지아파트,서초네이처힐6단지아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’서초네이처힐6단지아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,래미안서초에스티지아파트,래미안서초에스티지아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’래미안서초에스티지아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,르엘신반포아파트,르엘신반포아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’르엘신반포아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,잠원현대아파트,잠원현대아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (k {name:’잠원현대아파트’}) RETURN k.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,더샵반포리버파크(도시형)아파트,더샵반포리버파크(도시형)아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’더샵반포리버파크(도시형)아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,방배대우디오빌아파트,방배대우디오빌아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (k {name:’방배대우디오빌아파트’}) RETURN k.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,신동아아파트,신동아아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’신동아아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,서초한빛삼성아파트,서초한빛삼성아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’서초한빛삼성아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,방배대우디오빌아파트,방배대우디오빌아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’방배대우디오빌아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,신반포자이아파트,신반포자이아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’신반포자이아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,서초이오빌아파트,서초이오빌아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (k {name:’서초이오빌아파트’}) RETURN k.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,서초아트자이아파트,서초아트자이아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’서초아트자이아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,잠원한신그린아파트,잠원한신그린아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’잠원한신그린아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,방배래미안아트힐아파트,방배래미안아트힐아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (k {name:’방배래미안아트힐아파트’}) RETURN k.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,유원서초아파트,유원서초아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (k {name:’유원서초아파트’}) RETURN k.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,신반포27차아파트,신반포27차아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’신반포27차아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,신반포11차아파트,신반포11차아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (k {name:’신반포11차아파트’}) RETURN k.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,신반포20차아파트,신반포20차아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’신반포20차아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,코오롱아파트,코오롱아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’코오롱아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,삼호4차아파트,삼호4차아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (k {name:’삼호4차아파트’}) RETURN k.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,디에이치라클라스아파트,디에이치라클라스아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’디에이치라클라스아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,헤센파크힐아파트,헤센파크힐아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’헤센파크힐아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,서초더샵포레아파트,서초더샵포레아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’서초더샵포레아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,래미안서초유니빌아파트,래미안서초유니빌아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (k {name:’래미안서초유니빌아파트’}) RETURN k.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,풍림아이원플러스아파트,풍림아이원플러스아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’풍림아이원플러스아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,서초롯데캐슬프레지던트아파트,서초롯데캐슬프레지던트아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’서초롯데캐슬프레지던트아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,롯데캐슬클래식아파트,롯데캐슬클래식아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (k {name:’롯데캐슬클래식아파트’}) RETURN k.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,더샵반포리버파크(도시형)아파트,더샵반포리버파크(도시형)아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’더샵반포리버파크(도시형)아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,방배현대홈타운1차아파트,방배현대홈타운1차아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (k {name:’방배현대홈타운1차아파트’}) RETURN k.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,잠원훼미리아파트,잠원훼미리아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (k {name:’잠원훼미리아파트’}) RETURN k.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,아크로리버뷰신반포아파트,아크로리버뷰신반포아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’아크로리버뷰신반포아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,방배래미안아트힐아파트,방배래미안아트힐아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (k {name:’방배래미안아트힐아파트’}) RETURN k.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,삼환나띠르빌아파트,삼환나띠르빌아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’삼환나띠르빌아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,한신로얄아파트,한신로얄아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’한신로얄아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,LH서초5단지아파트,LH서초5단지아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’LH서초5단지아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,양재우성KBS(113동)아파트,양재우성KBS(113동)아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (k {name:’양재우성KBS(113동)아파트’}) RETURN k.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,서초롯데캐슬프레지던트아파트,서초롯데캐슬프레지던트아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’서초롯데캐슬프레지던트아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,방배서리풀e-편한세상아파트,방배서리풀e-편한세상아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (k {name:’방배서리풀e-편한세상아파트’}) RETURN k.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,서초포레스타5단지아파트,서초포레스타5단지아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (k {name:’서초포레스타5단지아파트’}) RETURN k.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,방배서리풀e-편한세상아파트,방배서리풀e-편한세상아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’방배서리풀e-편한세상아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,서초호반써밋아파트,서초호반써밋아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’서초호반써밋아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,서초자이아파트,서초자이아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (k {name:’서초자이아파트’}) RETURN k.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,롯데캐슬클래식아파트,롯데캐슬클래식아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’롯데캐슬클래식아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,방배래미안아트힐아파트,방배래미안아트힐아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (k {name:’방배래미안아트힐아파트’}) RETURN k.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,서초그랑자이아파트,서초그랑자이아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’서초그랑자이아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,잠원현대훼밀리아파트,잠원현대훼밀리아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (k {name:’잠원현대훼밀리아파트’}) RETURN k.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,반포한신타워아파트,반포한신타워아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’반포한신타워아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,더샵서초아파트,더샵서초아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (k {name:’더샵서초아파트’}) RETURN k.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,서초힐스아파트,서초힐스아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (k {name:’서초힐스아파트’}) RETURN k.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,현대ESA아파트,현대ESA아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’현대ESA아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,잠원중앙하이츠(B동)아파트,잠원중앙하이츠(B동)아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’잠원중앙하이츠(B동)아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,신반포27차아파트,신반포27차아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’신반포27차아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,서초대우디오빌프라임아파트,서초대우디오빌프라임아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’서초대우디오빌프라임아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,반포자이아파트,반포자이아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’반포자이아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,래미안서초에스티지아파트,래미안서초에스티지아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’래미안서초에스티지아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,진흥아파트,진흥아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’진흥아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,신반포20차아파트,신반포20차아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’신반포20차아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,양재우성아파트,양재우성아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’양재우성아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,반포한신타워아파트,반포한신타워아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (k {name:’반포한신타워아파트’}) RETURN k.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,반포힐스테이트아파트,반포힐스테이트아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’반포힐스테이트아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,신영체르니아파트,신영체르니아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’신영체르니아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,서초더샵포레아파트,서초더샵포레아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (k {name:’서초더샵포레아파트’}) RETURN k.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,더샵서초아파트,더샵서초아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’더샵서초아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,서초한신아파트,서초한신아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’서초한신아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,서초e-편한세상5차아파트,서초e-편한세상5차아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (k {name:’서초e-편한세상5차아파트’}) RETURN k.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,서초리시온아파트,서초리시온아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’서초리시온아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,임광3차아파트,임광3차아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (k {name:’임광3차아파트’}) RETURN k.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,현대성우아파트,현대성우아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’현대성우아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,방배대우디오빌아파트,방배대우디오빌아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’방배대우디오빌아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,래미안퍼스티지아파트,래미안퍼스티지아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’래미안퍼스티지아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,신반포12차아파트,신반포12차아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’신반포12차아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,유원서초아파트,유원서초아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (k {name:’유원서초아파트’}) RETURN k.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,르엘신반포파크애비뉴아파트,르엘신반포파크애비뉴아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’르엘신반포파크애비뉴아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,서초센트럴아이파크아파트,서초센트럴아이파크아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’서초센트럴아이파크아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,방배e-편한세상1차아파트,방배e-편한세상1차아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’방배e-편한세상1차아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,방배현대홈타운3차아파트,방배현대홈타운3차아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (k {name:’방배현대홈타운3차아파트’}) RETURN k.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,서초한신리빙타워아파트,서초한신리빙타워아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’서초한신리빙타워아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,방배한신트리플아파트,방배한신트리플아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’방배한신트리플아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,신동아1차아파트,신동아1차아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (k {name:’신동아1차아파트’}) RETURN k.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,강변아파트,강변아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’강변아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,반포힐스테이트아파트,반포힐스테이트아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (k {name:’반포힐스테이트아파트’}) RETURN k.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,서초호반써밋아파트,서초호반써밋아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’서초호반써밋아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,반포써밋아파트,반포써밋아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’반포써밋아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,신반포19차아파트,신반포19차아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’신반포19차아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,반포미도1차아파트,반포미도1차아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (k {name:’반포미도1차아파트’}) RETURN k.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,방배롯데캐슬아르떼아파트,방배롯데캐슬아르떼아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’방배롯데캐슬아르떼아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,디에이치라클라스아파트,디에이치라클라스아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’디에이치라클라스아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,현대멤피스아파트,현대멤피스아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (k {name:’현대멤피스아파트’}) RETURN k.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,신반포11차아파트,신반포11차아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’신반포11차아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,롯데캐슬갤럭시1차아파트,롯데캐슬갤럭시1차아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’롯데캐슬갤럭시1차아파트’}) RETURN n.parking_lot_under,1,2
12,[mask_1]에는 지하주차장이 있어?,apt_name,서초네이처힐2단지아파트,서초네이처힐2단지아파트에는 지하주차장이 있어?,MATCH ([alpha] {name:’[mask_1]’}) RETURN [alpha].parking_lot_under,apt_name,MATCH (n {name:’서초네이처힐2단지아파트’}) RETURN n.parking_lot_under,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’아파트’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’단독주택’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (k:’빌라’) WHERE k.parking_lot_under = 1 RETURN k.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’빌라’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’아파트’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’아파트’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’빌라’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’빌라’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’아파트’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’아파트’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (k:’아파트’) WHERE k.parking_lot_under = 1 RETURN k.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (k:’빌라’) WHERE k.parking_lot_under = 1 RETURN k.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’아파트’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’빌라’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’아파트’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’아파트’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’단독주택’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (k:’아파트’) WHERE k.parking_lot_under = 1 RETURN k.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’빌라’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’단독주택’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’단독주택’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (k:’빌라’) WHERE k.parking_lot_under = 1 RETURN k.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’단독주택’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (k:’단독주택’) WHERE k.parking_lot_under = 1 RETURN k.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’단독주택’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’빌라’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (k:’단독주택’) WHERE k.parking_lot_under = 1 RETURN k.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (k:’단독주택’) WHERE k.parking_lot_under = 1 RETURN k.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’단독주택’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (k:’빌라’) WHERE k.parking_lot_under = 1 RETURN k.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (k:’아파트’) WHERE k.parking_lot_under = 1 RETURN k.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (k:’단독주택’) WHERE k.parking_lot_under = 1 RETURN k.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’빌라’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’빌라’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (k:’빌라’) WHERE k.parking_lot_under = 1 RETURN k.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (k:’단독주택’) WHERE k.parking_lot_under = 1 RETURN k.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’빌라’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (k:’아파트’) WHERE k.parking_lot_under = 1 RETURN k.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’아파트’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’단독주택’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (k:’아파트’) WHERE k.parking_lot_under = 1 RETURN k.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’단독주택’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’단독주택’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (k:’빌라’) WHERE k.parking_lot_under = 1 RETURN k.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (k:’아파트’) WHERE k.parking_lot_under = 1 RETURN k.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’단독주택’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (k:’아파트’) WHERE k.parking_lot_under = 1 RETURN k.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’빌라’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’단독주택’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’빌라’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (k:’빌라’) WHERE k.parking_lot_under = 1 RETURN k.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’아파트’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’빌라’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’단독주택’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’아파트’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’빌라’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (k:’단독주택’) WHERE k.parking_lot_under = 1 RETURN k.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (k:’아파트’) WHERE k.parking_lot_under = 1 RETURN k.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (k:’빌라’) WHERE k.parking_lot_under = 1 RETURN k.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’단독주택’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (k:’단독주택’) WHERE k.parking_lot_under = 1 RETURN k.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’단독주택’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’아파트’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (k:’빌라’) WHERE k.parking_lot_under = 1 RETURN k.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (k:’빌라’) WHERE k.parking_lot_under = 1 RETURN k.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’아파트’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’빌라’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’아파트’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’단독주택’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’빌라’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’아파트’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’단독주택’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’빌라’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’단독주택’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (k:’아파트’) WHERE k.parking_lot_under = 1 RETURN k.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’빌라’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’단독주택’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’단독주택’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’아파트’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’빌라’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’빌라’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (k:’단독주택’) WHERE k.parking_lot_under = 1 RETURN k.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’빌라’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’단독주택’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’아파트’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (k:’빌라’) WHERE k.parking_lot_under = 1 RETURN k.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (k:’단독주택’) WHERE k.parking_lot_under = 1 RETURN k.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (k:’빌라’) WHERE k.parking_lot_under = 1 RETURN k.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’빌라’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (k:’빌라’) WHERE k.parking_lot_under = 1 RETURN k.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’단독주택’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’빌라’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’단독주택’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’아파트’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (k:’빌라’) WHERE k.parking_lot_under = 1 RETURN k.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’아파트’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’아파트’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’단독주택’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’아파트’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’빌라’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’아파트’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’빌라’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’단독주택’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (k:’단독주택’) WHERE k.parking_lot_under = 1 RETURN k.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’아파트’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (k:’빌라’) WHERE k.parking_lot_under = 1 RETURN k.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’아파트’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (k:’아파트’) WHERE k.parking_lot_under = 1 RETURN k.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (k:’빌라’) WHERE k.parking_lot_under = 1 RETURN k.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’빌라’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (k:’아파트’) WHERE k.parking_lot_under = 1 RETURN k.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (k:’단독주택’) WHERE k.parking_lot_under = 1 RETURN k.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (k:’빌라’) WHERE k.parking_lot_under = 1 RETURN k.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’빌라’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’빌라’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’단독주택’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (k:’단독주택’) WHERE k.parking_lot_under = 1 RETURN k.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (k:’단독주택’) WHERE k.parking_lot_under = 1 RETURN k.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’단독주택’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’단독주택’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’아파트’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’아파트’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (k:’아파트’) WHERE k.parking_lot_under = 1 RETURN k.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’단독주택’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’아파트’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (k:’단독주택’) WHERE k.parking_lot_under = 1 RETURN k.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (k:’빌라’) WHERE k.parking_lot_under = 1 RETURN k.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’아파트’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’빌라’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’아파트’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’빌라’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’단독주택’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’빌라’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’아파트’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’단독주택’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’단독주택’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’단독주택’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (k:’아파트’) WHERE k.parking_lot_under = 1 RETURN k.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (k:’단독주택’) WHERE k.parking_lot_under = 1 RETURN k.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’아파트’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (k:’아파트’) WHERE k.parking_lot_under = 1 RETURN k.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (k:’빌라’) WHERE k.parking_lot_under = 1 RETURN k.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’아파트’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’단독주택’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’단독주택’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (k:’아파트’) WHERE k.parking_lot_under = 1 RETURN k.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’빌라’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (k:’빌라’) WHERE k.parking_lot_under = 1 RETURN k.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’빌라’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (k:’단독주택’) WHERE k.parking_lot_under = 1 RETURN k.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (k:’아파트’) WHERE k.parking_lot_under = 1 RETURN k.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’아파트’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’빌라’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’아파트’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (k:’아파트’) WHERE k.parking_lot_under = 1 RETURN k.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (k:’단독주택’) WHERE k.parking_lot_under = 1 RETURN k.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’아파트’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’아파트’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’빌라’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (k:’빌라’) WHERE k.parking_lot_under = 1 RETURN k.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’단독주택’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’아파트’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (k:’단독주택’) WHERE k.parking_lot_under = 1 RETURN k.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (k:’빌라’) WHERE k.parking_lot_under = 1 RETURN k.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’단독주택’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’단독주택’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’단독주택’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (k:’빌라’) WHERE k.parking_lot_under = 1 RETURN k.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’단독주택’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (k:’단독주택’) WHERE k.parking_lot_under = 1 RETURN k.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (k:’빌라’) WHERE k.parking_lot_under = 1 RETURN k.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’아파트’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (k:’단독주택’) WHERE k.parking_lot_under = 1 RETURN k.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (k:’단독주택’) WHERE k.parking_lot_under = 1 RETURN k.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’빌라’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’아파트’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’단독주택’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’빌라’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (k:’단독주택’) WHERE k.parking_lot_under = 1 RETURN k.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (k:’단독주택’) WHERE k.parking_lot_under = 1 RETURN k.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (k:’단독주택’) WHERE k.parking_lot_under = 1 RETURN k.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’단독주택’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (k:’단독주택’) WHERE k.parking_lot_under = 1 RETURN k.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’빌라’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’단독주택’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’단독주택’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (k:’빌라’) WHERE k.parking_lot_under = 1 RETURN k.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’아파트’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’단독주택’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’빌라’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (k:’빌라’) WHERE k.parking_lot_under = 1 RETURN k.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (k:’아파트’) WHERE k.parking_lot_under = 1 RETURN k.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’빌라’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’빌라’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’단독주택’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (k:’단독주택’) WHERE k.parking_lot_under = 1 RETURN k.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’단독주택’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’단독주택’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’빌라’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’아파트’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (k:’아파트’) WHERE k.parking_lot_under = 1 RETURN k.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’빌라’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’단독주택’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’단독주택’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’아파트’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’단독주택’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’아파트’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’아파트’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’단독주택’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’빌라’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’아파트’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’빌라’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’빌라’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’단독주택’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’빌라’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’단독주택’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’빌라’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’단독주택’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’빌라’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (k:’빌라’) WHERE k.parking_lot_under = 1 RETURN k.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’아파트’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (k:’단독주택’) WHERE k.parking_lot_under = 1 RETURN k.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (k:’빌라’) WHERE k.parking_lot_under = 1 RETURN k.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’빌라’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (k:’아파트’) WHERE k.parking_lot_under = 1 RETURN k.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’빌라’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’아파트’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (k:’단독주택’) WHERE k.parking_lot_under = 1 RETURN k.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’단독주택’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (k:’단독주택’) WHERE k.parking_lot_under = 1 RETURN k.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’단독주택’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’단독주택’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (k:’아파트’) WHERE k.parking_lot_under = 1 RETURN k.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’아파트’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’빌라’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (k:’빌라’) WHERE k.parking_lot_under = 1 RETURN k.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’빌라’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’아파트’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’단독주택’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’아파트’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’단독주택’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (k:’아파트’) WHERE k.parking_lot_under = 1 RETURN k.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (k:’아파트’) WHERE k.parking_lot_under = 1 RETURN k.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’빌라’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (k:’빌라’) WHERE k.parking_lot_under = 1 RETURN k.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’아파트’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (k:’단독주택’) WHERE k.parking_lot_under = 1 RETURN k.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (k:’빌라’) WHERE k.parking_lot_under = 1 RETURN k.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (k:’단독주택’) WHERE k.parking_lot_under = 1 RETURN k.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’단독주택’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’단독주택’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’단독주택’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (k:’단독주택’) WHERE k.parking_lot_under = 1 RETURN k.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’아파트’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (k:’단독주택’) WHERE k.parking_lot_under = 1 RETURN k.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (k:’빌라’) WHERE k.parking_lot_under = 1 RETURN k.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (k:’아파트’) WHERE k.parking_lot_under = 1 RETURN k.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (k:’빌라’) WHERE k.parking_lot_under = 1 RETURN k.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’아파트’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (k:’아파트’) WHERE k.parking_lot_under = 1 RETURN k.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (k:’빌라’) WHERE k.parking_lot_under = 1 RETURN k.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’아파트’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’아파트’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (k:’빌라’) WHERE k.parking_lot_under = 1 RETURN k.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’아파트’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’아파트’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’빌라’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’빌라’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’단독주택’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’아파트’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’빌라’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’단독주택’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’빌라’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’아파트’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’단독주택’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’단독주택’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’빌라’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’아파트’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’빌라’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (k:’아파트’) WHERE k.parking_lot_under = 1 RETURN k.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (k:’단독주택’) WHERE k.parking_lot_under = 1 RETURN k.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’단독주택’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’빌라’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’단독주택’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’단독주택’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’아파트’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’단독주택’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’아파트’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’아파트’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (k:’단독주택’) WHERE k.parking_lot_under = 1 RETURN k.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’단독주택’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’아파트’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’단독주택’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’단독주택’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (k:’단독주택’) WHERE k.parking_lot_under = 1 RETURN k.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’아파트’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (k:’아파트’) WHERE k.parking_lot_under = 1 RETURN k.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’단독주택’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’단독주택’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
13,지하주차장이 있는 [mask1] 찾아줘,building_type,,지하주차장이 있는 [mask1] 찾아줘,MATCH ([alpha]:’[mask_1]’) WHERE [alpha].parking_lot_under = 1 RETURN [alpha].name,building_type,MATCH (n:’단독주택’) WHERE n.parking_lot_under = 1 RETURN n.name,1,2
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","양재1동,",양재1동에서 월세가 가장 저렴한 아파트는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’양재1동’})-[:IN]-(k:’아파트’) RETURN k.name ORDER BY k.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","방배본동,",방배본동에서 월세가 가장 저렴한 아파트는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’방배본동’})-[:IN]-(k:’아파트’) RETURN k.name ORDER BY k.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","서초3동,",서초3동에서 월세가 가장 저렴한 아파트는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’서초3동’})-[:IN]-(n:’아파트’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","방배4동,",방배4동에서 월세가 가장 저렴한 빌라는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’방배4동’})-[:IN]-(n:’빌라’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","방배3동,",방배3동에서 월세가 가장 저렴한 아파트는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’방배3동’})-[:IN]-(k:’아파트’) RETURN k.name ORDER BY k.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","반포본동,",반포본동에서 월세가 가장 저렴한 빌라는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’반포본동’})-[:IN]-(n:’빌라’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","반포본동,",반포본동에서 월세가 가장 저렴한 빌라는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’반포본동’})-[:IN]-(n:’빌라’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","방배1동,",방배1동에서 월세가 가장 저렴한 단독주택는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’방배1동’})-[:IN]-(n:’단독주택’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","서초4동,",서초4동에서 월세가 가장 저렴한 단독주택는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’서초4동’})-[:IN]-(k:’단독주택’) RETURN k.name ORDER BY k.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","반포3동,",반포3동에서 월세가 가장 저렴한 단독주택는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’반포3동’})-[:IN]-(n:’단독주택’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","양재2동,",양재2동에서 월세가 가장 저렴한 단독주택는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’양재2동’})-[:IN]-(n:’단독주택’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","반포3동,",반포3동에서 월세가 가장 저렴한 빌라는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’반포3동’})-[:IN]-(n:’빌라’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","반포본동,",반포본동에서 월세가 가장 저렴한 아파트는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’반포본동’})-[:IN]-(k:’아파트’) RETURN k.name ORDER BY k.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","반포4동,",반포4동에서 월세가 가장 저렴한 단독주택는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’반포4동’})-[:IN]-(n:’단독주택’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","양재2동,",양재2동에서 월세가 가장 저렴한 빌라는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’양재2동’})-[:IN]-(n:’빌라’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","잠원동,",잠원동에서 월세가 가장 저렴한 빌라는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’잠원동’})-[:IN]-(k:’빌라’) RETURN k.name ORDER BY k.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","양재2동,",양재2동에서 월세가 가장 저렴한 빌라는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’양재2동’})-[:IN]-(n:’빌라’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","방배3동,",방배3동에서 월세가 가장 저렴한 단독주택는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’방배3동’})-[:IN]-(n:’단독주택’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","방배3동,",방배3동에서 월세가 가장 저렴한 아파트는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’방배3동’})-[:IN]-(n:’아파트’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","서초2동,",서초2동에서 월세가 가장 저렴한 아파트는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’서초2동’})-[:IN]-(k:’아파트’) RETURN k.name ORDER BY k.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","서초4동,",서초4동에서 월세가 가장 저렴한 빌라는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’서초4동’})-[:IN]-(n:’빌라’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","방배2동,",방배2동에서 월세가 가장 저렴한 아파트는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’방배2동’})-[:IN]-(k:’아파트’) RETURN k.name ORDER BY k.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","방배2동,",방배2동에서 월세가 가장 저렴한 단독주택는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’방배2동’})-[:IN]-(n:’단독주택’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","방배3동,",방배3동에서 월세가 가장 저렴한 단독주택는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’방배3동’})-[:IN]-(k:’단독주택’) RETURN k.name ORDER BY k.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","방배2동,",방배2동에서 월세가 가장 저렴한 단독주택는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’방배2동’})-[:IN]-(n:’단독주택’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","서초4동,",서초4동에서 월세가 가장 저렴한 아파트는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’서초4동’})-[:IN]-(n:’아파트’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","반포1동,",반포1동에서 월세가 가장 저렴한 아파트는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’반포1동’})-[:IN]-(n:’아파트’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","방배3동,",방배3동에서 월세가 가장 저렴한 단독주택는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’방배3동’})-[:IN]-(n:’단독주택’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","반포본동,",반포본동에서 월세가 가장 저렴한 빌라는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’반포본동’})-[:IN]-(k:’빌라’) RETURN k.name ORDER BY k.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","서초2동,",서초2동에서 월세가 가장 저렴한 아파트는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’서초2동’})-[:IN]-(n:’아파트’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","양재2동,",양재2동에서 월세가 가장 저렴한 빌라는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’양재2동’})-[:IN]-(k:’빌라’) RETURN k.name ORDER BY k.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","서초2동,",서초2동에서 월세가 가장 저렴한 빌라는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’서초2동’})-[:IN]-(k:’빌라’) RETURN k.name ORDER BY k.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","방배3동,",방배3동에서 월세가 가장 저렴한 빌라는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’방배3동’})-[:IN]-(k:’빌라’) RETURN k.name ORDER BY k.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","방배3동,",방배3동에서 월세가 가장 저렴한 단독주택는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’방배3동’})-[:IN]-(n:’단독주택’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","양재2동,",양재2동에서 월세가 가장 저렴한 아파트는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’양재2동’})-[:IN]-(k:’아파트’) RETURN k.name ORDER BY k.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","방배3동,",방배3동에서 월세가 가장 저렴한 단독주택는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’방배3동’})-[:IN]-(n:’단독주택’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","방배2동,",방배2동에서 월세가 가장 저렴한 아파트는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’방배2동’})-[:IN]-(k:’아파트’) RETURN k.name ORDER BY k.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","반포2동,",반포2동에서 월세가 가장 저렴한 아파트는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’반포2동’})-[:IN]-(n:’아파트’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","서초4동,",서초4동에서 월세가 가장 저렴한 빌라는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’서초4동’})-[:IN]-(n:’빌라’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","양재2동,",양재2동에서 월세가 가장 저렴한 아파트는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’양재2동’})-[:IN]-(n:’아파트’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","양재2동,",양재2동에서 월세가 가장 저렴한 아파트는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’양재2동’})-[:IN]-(n:’아파트’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","방배2동,",방배2동에서 월세가 가장 저렴한 아파트는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’방배2동’})-[:IN]-(n:’아파트’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","반포본동,",반포본동에서 월세가 가장 저렴한 아파트는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’반포본동’})-[:IN]-(n:’아파트’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","반포1동,",반포1동에서 월세가 가장 저렴한 단독주택는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’반포1동’})-[:IN]-(n:’단독주택’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","양재2동,",양재2동에서 월세가 가장 저렴한 아파트는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’양재2동’})-[:IN]-(k:’아파트’) RETURN k.name ORDER BY k.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","반포1동,",반포1동에서 월세가 가장 저렴한 단독주택는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’반포1동’})-[:IN]-(k:’단독주택’) RETURN k.name ORDER BY k.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","서초4동,",서초4동에서 월세가 가장 저렴한 단독주택는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’서초4동’})-[:IN]-(k:’단독주택’) RETURN k.name ORDER BY k.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","반포3동,",반포3동에서 월세가 가장 저렴한 빌라는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’반포3동’})-[:IN]-(n:’빌라’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","방배4동,",방배4동에서 월세가 가장 저렴한 아파트는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’방배4동’})-[:IN]-(k:’아파트’) RETURN k.name ORDER BY k.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","서초4동,",서초4동에서 월세가 가장 저렴한 빌라는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’서초4동’})-[:IN]-(k:’빌라’) RETURN k.name ORDER BY k.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","방배1동,",방배1동에서 월세가 가장 저렴한 단독주택는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’방배1동’})-[:IN]-(k:’단독주택’) RETURN k.name ORDER BY k.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","반포3동,",반포3동에서 월세가 가장 저렴한 아파트는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’반포3동’})-[:IN]-(n:’아파트’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","잠원동,",잠원동에서 월세가 가장 저렴한 단독주택는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’잠원동’})-[:IN]-(n:’단독주택’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","양재2동,",양재2동에서 월세가 가장 저렴한 단독주택는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’양재2동’})-[:IN]-(n:’단독주택’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","잠원동,",잠원동에서 월세가 가장 저렴한 아파트는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’잠원동’})-[:IN]-(n:’아파트’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","서초2동,",서초2동에서 월세가 가장 저렴한 빌라는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’서초2동’})-[:IN]-(k:’빌라’) RETURN k.name ORDER BY k.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","양재2동,",양재2동에서 월세가 가장 저렴한 아파트는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’양재2동’})-[:IN]-(k:’아파트’) RETURN k.name ORDER BY k.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","방배4동,",방배4동에서 월세가 가장 저렴한 빌라는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’방배4동’})-[:IN]-(n:’빌라’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","방배2동,",방배2동에서 월세가 가장 저렴한 단독주택는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’방배2동’})-[:IN]-(k:’단독주택’) RETURN k.name ORDER BY k.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","반포3동,",반포3동에서 월세가 가장 저렴한 아파트는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’반포3동’})-[:IN]-(n:’아파트’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","양재2동,",양재2동에서 월세가 가장 저렴한 단독주택는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’양재2동’})-[:IN]-(n:’단독주택’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","서초4동,",서초4동에서 월세가 가장 저렴한 빌라는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’서초4동’})-[:IN]-(n:’빌라’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","반포1동,",반포1동에서 월세가 가장 저렴한 빌라는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’반포1동’})-[:IN]-(n:’빌라’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","반포4동,",반포4동에서 월세가 가장 저렴한 아파트는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’반포4동’})-[:IN]-(n:’아파트’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","내곡동,",내곡동에서 월세가 가장 저렴한 단독주택는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’내곡동’})-[:IN]-(k:’단독주택’) RETURN k.name ORDER BY k.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","내곡동,",내곡동에서 월세가 가장 저렴한 빌라는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’내곡동’})-[:IN]-(n:’빌라’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","반포본동,",반포본동에서 월세가 가장 저렴한 아파트는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’반포본동’})-[:IN]-(k:’아파트’) RETURN k.name ORDER BY k.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","양재2동,",양재2동에서 월세가 가장 저렴한 단독주택는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’양재2동’})-[:IN]-(n:’단독주택’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","잠원동,",잠원동에서 월세가 가장 저렴한 아파트는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’잠원동’})-[:IN]-(n:’아파트’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","방배3동,",방배3동에서 월세가 가장 저렴한 단독주택는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’방배3동’})-[:IN]-(k:’단독주택’) RETURN k.name ORDER BY k.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","방배4동,",방배4동에서 월세가 가장 저렴한 빌라는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’방배4동’})-[:IN]-(n:’빌라’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","반포4동,",반포4동에서 월세가 가장 저렴한 단독주택는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’반포4동’})-[:IN]-(k:’단독주택’) RETURN k.name ORDER BY k.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","반포본동,",반포본동에서 월세가 가장 저렴한 아파트는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’반포본동’})-[:IN]-(k:’아파트’) RETURN k.name ORDER BY k.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","방배2동,",방배2동에서 월세가 가장 저렴한 아파트는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’방배2동’})-[:IN]-(n:’아파트’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","양재1동,",양재1동에서 월세가 가장 저렴한 빌라는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’양재1동’})-[:IN]-(n:’빌라’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","서초3동,",서초3동에서 월세가 가장 저렴한 아파트는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’서초3동’})-[:IN]-(n:’아파트’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","잠원동,",잠원동에서 월세가 가장 저렴한 단독주택는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’잠원동’})-[:IN]-(k:’단독주택’) RETURN k.name ORDER BY k.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","반포2동,",반포2동에서 월세가 가장 저렴한 빌라는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’반포2동’})-[:IN]-(n:’빌라’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","방배본동,",방배본동에서 월세가 가장 저렴한 아파트는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’방배본동’})-[:IN]-(n:’아파트’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","내곡동,",내곡동에서 월세가 가장 저렴한 빌라는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’내곡동’})-[:IN]-(n:’빌라’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","반포1동,",반포1동에서 월세가 가장 저렴한 아파트는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’반포1동’})-[:IN]-(n:’아파트’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","반포1동,",반포1동에서 월세가 가장 저렴한 아파트는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’반포1동’})-[:IN]-(n:’아파트’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","방배본동,",방배본동에서 월세가 가장 저렴한 단독주택는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’방배본동’})-[:IN]-(k:’단독주택’) RETURN k.name ORDER BY k.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","반포4동,",반포4동에서 월세가 가장 저렴한 단독주택는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’반포4동’})-[:IN]-(n:’단독주택’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","방배2동,",방배2동에서 월세가 가장 저렴한 단독주택는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’방배2동’})-[:IN]-(n:’단독주택’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","반포2동,",반포2동에서 월세가 가장 저렴한 빌라는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’반포2동’})-[:IN]-(n:’빌라’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","반포2동,",반포2동에서 월세가 가장 저렴한 아파트는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’반포2동’})-[:IN]-(n:’아파트’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","서초2동,",서초2동에서 월세가 가장 저렴한 빌라는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’서초2동’})-[:IN]-(k:’빌라’) RETURN k.name ORDER BY k.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","방배본동,",방배본동에서 월세가 가장 저렴한 단독주택는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’방배본동’})-[:IN]-(k:’단독주택’) RETURN k.name ORDER BY k.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","방배본동,",방배본동에서 월세가 가장 저렴한 아파트는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’방배본동’})-[:IN]-(n:’아파트’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","내곡동,",내곡동에서 월세가 가장 저렴한 아파트는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’내곡동’})-[:IN]-(n:’아파트’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","방배1동,",방배1동에서 월세가 가장 저렴한 아파트는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’방배1동’})-[:IN]-(n:’아파트’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","반포1동,",반포1동에서 월세가 가장 저렴한 단독주택는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’반포1동’})-[:IN]-(n:’단독주택’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","방배1동,",방배1동에서 월세가 가장 저렴한 빌라는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’방배1동’})-[:IN]-(n:’빌라’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","방배2동,",방배2동에서 월세가 가장 저렴한 빌라는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’방배2동’})-[:IN]-(n:’빌라’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","방배2동,",방배2동에서 월세가 가장 저렴한 단독주택는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’방배2동’})-[:IN]-(k:’단독주택’) RETURN k.name ORDER BY k.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","반포3동,",반포3동에서 월세가 가장 저렴한 단독주택는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’반포3동’})-[:IN]-(n:’단독주택’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","방배3동,",방배3동에서 월세가 가장 저렴한 단독주택는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’방배3동’})-[:IN]-(k:’단독주택’) RETURN k.name ORDER BY k.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","서초1동,",서초1동에서 월세가 가장 저렴한 아파트는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’서초1동’})-[:IN]-(n:’아파트’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","양재2동,",양재2동에서 월세가 가장 저렴한 빌라는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’양재2동’})-[:IN]-(n:’빌라’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","반포3동,",반포3동에서 월세가 가장 저렴한 빌라는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’반포3동’})-[:IN]-(n:’빌라’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","반포3동,",반포3동에서 월세가 가장 저렴한 아파트는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’반포3동’})-[:IN]-(k:’아파트’) RETURN k.name ORDER BY k.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","방배3동,",방배3동에서 월세가 가장 저렴한 아파트는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’방배3동’})-[:IN]-(n:’아파트’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","양재1동,",양재1동에서 월세가 가장 저렴한 아파트는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’양재1동’})-[:IN]-(k:’아파트’) RETURN k.name ORDER BY k.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","방배본동,",방배본동에서 월세가 가장 저렴한 단독주택는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’방배본동’})-[:IN]-(k:’단독주택’) RETURN k.name ORDER BY k.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","방배3동,",방배3동에서 월세가 가장 저렴한 단독주택는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’방배3동’})-[:IN]-(n:’단독주택’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","잠원동,",잠원동에서 월세가 가장 저렴한 단독주택는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’잠원동’})-[:IN]-(n:’단독주택’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","방배1동,",방배1동에서 월세가 가장 저렴한 빌라는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’방배1동’})-[:IN]-(n:’빌라’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","양재2동,",양재2동에서 월세가 가장 저렴한 빌라는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’양재2동’})-[:IN]-(n:’빌라’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","잠원동,",잠원동에서 월세가 가장 저렴한 단독주택는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’잠원동’})-[:IN]-(k:’단독주택’) RETURN k.name ORDER BY k.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","방배2동,",방배2동에서 월세가 가장 저렴한 아파트는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’방배2동’})-[:IN]-(n:’아파트’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","반포3동,",반포3동에서 월세가 가장 저렴한 빌라는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’반포3동’})-[:IN]-(n:’빌라’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","반포4동,",반포4동에서 월세가 가장 저렴한 아파트는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’반포4동’})-[:IN]-(n:’아파트’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","방배4동,",방배4동에서 월세가 가장 저렴한 빌라는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’방배4동’})-[:IN]-(n:’빌라’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","방배4동,",방배4동에서 월세가 가장 저렴한 아파트는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’방배4동’})-[:IN]-(n:’아파트’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","반포1동,",반포1동에서 월세가 가장 저렴한 빌라는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’반포1동’})-[:IN]-(n:’빌라’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","반포1동,",반포1동에서 월세가 가장 저렴한 단독주택는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’반포1동’})-[:IN]-(k:’단독주택’) RETURN k.name ORDER BY k.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","반포본동,",반포본동에서 월세가 가장 저렴한 단독주택는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’반포본동’})-[:IN]-(k:’단독주택’) RETURN k.name ORDER BY k.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","반포본동,",반포본동에서 월세가 가장 저렴한 아파트는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’반포본동’})-[:IN]-(k:’아파트’) RETURN k.name ORDER BY k.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","방배2동,",방배2동에서 월세가 가장 저렴한 빌라는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’방배2동’})-[:IN]-(n:’빌라’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","반포3동,",반포3동에서 월세가 가장 저렴한 빌라는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’반포3동’})-[:IN]-(k:’빌라’) RETURN k.name ORDER BY k.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","서초2동,",서초2동에서 월세가 가장 저렴한 단독주택는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’서초2동’})-[:IN]-(k:’단독주택’) RETURN k.name ORDER BY k.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","양재1동,",양재1동에서 월세가 가장 저렴한 빌라는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’양재1동’})-[:IN]-(n:’빌라’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","양재1동,",양재1동에서 월세가 가장 저렴한 빌라는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’양재1동’})-[:IN]-(k:’빌라’) RETURN k.name ORDER BY k.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","방배2동,",방배2동에서 월세가 가장 저렴한 단독주택는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’방배2동’})-[:IN]-(n:’단독주택’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","서초2동,",서초2동에서 월세가 가장 저렴한 단독주택는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’서초2동’})-[:IN]-(n:’단독주택’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","양재2동,",양재2동에서 월세가 가장 저렴한 빌라는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’양재2동’})-[:IN]-(k:’빌라’) RETURN k.name ORDER BY k.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","반포4동,",반포4동에서 월세가 가장 저렴한 아파트는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’반포4동’})-[:IN]-(k:’아파트’) RETURN k.name ORDER BY k.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","방배1동,",방배1동에서 월세가 가장 저렴한 단독주택는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’방배1동’})-[:IN]-(n:’단독주택’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","서초1동,",서초1동에서 월세가 가장 저렴한 빌라는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’서초1동’})-[:IN]-(n:’빌라’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","반포3동,",반포3동에서 월세가 가장 저렴한 아파트는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’반포3동’})-[:IN]-(n:’아파트’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","잠원동,",잠원동에서 월세가 가장 저렴한 단독주택는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’잠원동’})-[:IN]-(k:’단독주택’) RETURN k.name ORDER BY k.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","반포3동,",반포3동에서 월세가 가장 저렴한 단독주택는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’반포3동’})-[:IN]-(n:’단독주택’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","반포2동,",반포2동에서 월세가 가장 저렴한 아파트는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’반포2동’})-[:IN]-(n:’아파트’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","방배1동,",방배1동에서 월세가 가장 저렴한 빌라는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’방배1동’})-[:IN]-(n:’빌라’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","내곡동,",내곡동에서 월세가 가장 저렴한 빌라는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’내곡동’})-[:IN]-(n:’빌라’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","서초3동,",서초3동에서 월세가 가장 저렴한 아파트는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’서초3동’})-[:IN]-(n:’아파트’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","내곡동,",내곡동에서 월세가 가장 저렴한 아파트는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’내곡동’})-[:IN]-(n:’아파트’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","서초4동,",서초4동에서 월세가 가장 저렴한 단독주택는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’서초4동’})-[:IN]-(k:’단독주택’) RETURN k.name ORDER BY k.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","방배3동,",방배3동에서 월세가 가장 저렴한 단독주택는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’방배3동’})-[:IN]-(n:’단독주택’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","방배2동,",방배2동에서 월세가 가장 저렴한 아파트는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’방배2동’})-[:IN]-(n:’아파트’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","잠원동,",잠원동에서 월세가 가장 저렴한 단독주택는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’잠원동’})-[:IN]-(k:’단독주택’) RETURN k.name ORDER BY k.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","반포본동,",반포본동에서 월세가 가장 저렴한 빌라는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’반포본동’})-[:IN]-(k:’빌라’) RETURN k.name ORDER BY k.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","서초2동,",서초2동에서 월세가 가장 저렴한 아파트는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’서초2동’})-[:IN]-(n:’아파트’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","양재2동,",양재2동에서 월세가 가장 저렴한 빌라는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’양재2동’})-[:IN]-(k:’빌라’) RETURN k.name ORDER BY k.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","방배2동,",방배2동에서 월세가 가장 저렴한 단독주택는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’방배2동’})-[:IN]-(n:’단독주택’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","방배3동,",방배3동에서 월세가 가장 저렴한 빌라는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’방배3동’})-[:IN]-(n:’빌라’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","서초1동,",서초1동에서 월세가 가장 저렴한 아파트는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’서초1동’})-[:IN]-(n:’아파트’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","반포3동,",반포3동에서 월세가 가장 저렴한 아파트는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’반포3동’})-[:IN]-(n:’아파트’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","양재1동,",양재1동에서 월세가 가장 저렴한 빌라는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’양재1동’})-[:IN]-(n:’빌라’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","양재1동,",양재1동에서 월세가 가장 저렴한 아파트는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’양재1동’})-[:IN]-(n:’아파트’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","방배4동,",방배4동에서 월세가 가장 저렴한 단독주택는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’방배4동’})-[:IN]-(n:’단독주택’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","반포3동,",반포3동에서 월세가 가장 저렴한 단독주택는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’반포3동’})-[:IN]-(n:’단독주택’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","방배3동,",방배3동에서 월세가 가장 저렴한 빌라는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’방배3동’})-[:IN]-(k:’빌라’) RETURN k.name ORDER BY k.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","방배1동,",방배1동에서 월세가 가장 저렴한 빌라는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’방배1동’})-[:IN]-(n:’빌라’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","내곡동,",내곡동에서 월세가 가장 저렴한 빌라는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’내곡동’})-[:IN]-(n:’빌라’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","양재1동,",양재1동에서 월세가 가장 저렴한 단독주택는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’양재1동’})-[:IN]-(n:’단독주택’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","방배2동,",방배2동에서 월세가 가장 저렴한 빌라는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’방배2동’})-[:IN]-(n:’빌라’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","내곡동,",내곡동에서 월세가 가장 저렴한 아파트는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’내곡동’})-[:IN]-(n:’아파트’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","반포4동,",반포4동에서 월세가 가장 저렴한 아파트는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’반포4동’})-[:IN]-(n:’아파트’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","방배4동,",방배4동에서 월세가 가장 저렴한 아파트는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’방배4동’})-[:IN]-(k:’아파트’) RETURN k.name ORDER BY k.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","반포1동,",반포1동에서 월세가 가장 저렴한 빌라는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’반포1동’})-[:IN]-(n:’빌라’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","방배1동,",방배1동에서 월세가 가장 저렴한 단독주택는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’방배1동’})-[:IN]-(n:’단독주택’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","방배1동,",방배1동에서 월세가 가장 저렴한 단독주택는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’방배1동’})-[:IN]-(k:’단독주택’) RETURN k.name ORDER BY k.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","방배4동,",방배4동에서 월세가 가장 저렴한 빌라는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’방배4동’})-[:IN]-(k:’빌라’) RETURN k.name ORDER BY k.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","방배3동,",방배3동에서 월세가 가장 저렴한 아파트는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’방배3동’})-[:IN]-(k:’아파트’) RETURN k.name ORDER BY k.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","서초1동,",서초1동에서 월세가 가장 저렴한 빌라는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’서초1동’})-[:IN]-(k:’빌라’) RETURN k.name ORDER BY k.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","서초2동,",서초2동에서 월세가 가장 저렴한 아파트는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’서초2동’})-[:IN]-(n:’아파트’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","방배본동,",방배본동에서 월세가 가장 저렴한 빌라는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’방배본동’})-[:IN]-(n:’빌라’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","내곡동,",내곡동에서 월세가 가장 저렴한 단독주택는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’내곡동’})-[:IN]-(n:’단독주택’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","반포2동,",반포2동에서 월세가 가장 저렴한 단독주택는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’반포2동’})-[:IN]-(n:’단독주택’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","내곡동,",내곡동에서 월세가 가장 저렴한 아파트는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’내곡동’})-[:IN]-(n:’아파트’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","방배본동,",방배본동에서 월세가 가장 저렴한 아파트는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’방배본동’})-[:IN]-(n:’아파트’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","양재1동,",양재1동에서 월세가 가장 저렴한 아파트는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’양재1동’})-[:IN]-(n:’아파트’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","방배1동,",방배1동에서 월세가 가장 저렴한 단독주택는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’방배1동’})-[:IN]-(k:’단독주택’) RETURN k.name ORDER BY k.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","방배1동,",방배1동에서 월세가 가장 저렴한 아파트는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’방배1동’})-[:IN]-(n:’아파트’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","방배1동,",방배1동에서 월세가 가장 저렴한 아파트는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’방배1동’})-[:IN]-(n:’아파트’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","서초3동,",서초3동에서 월세가 가장 저렴한 단독주택는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’서초3동’})-[:IN]-(k:’단독주택’) RETURN k.name ORDER BY k.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","서초2동,",서초2동에서 월세가 가장 저렴한 빌라는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’서초2동’})-[:IN]-(k:’빌라’) RETURN k.name ORDER BY k.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","서초1동,",서초1동에서 월세가 가장 저렴한 빌라는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’서초1동’})-[:IN]-(k:’빌라’) RETURN k.name ORDER BY k.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","서초1동,",서초1동에서 월세가 가장 저렴한 아파트는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’서초1동’})-[:IN]-(n:’아파트’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","반포3동,",반포3동에서 월세가 가장 저렴한 단독주택는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’반포3동’})-[:IN]-(n:’단독주택’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","서초1동,",서초1동에서 월세가 가장 저렴한 빌라는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’서초1동’})-[:IN]-(k:’빌라’) RETURN k.name ORDER BY k.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","서초1동,",서초1동에서 월세가 가장 저렴한 단독주택는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’서초1동’})-[:IN]-(n:’단독주택’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","반포2동,",반포2동에서 월세가 가장 저렴한 아파트는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’반포2동’})-[:IN]-(n:’아파트’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","방배본동,",방배본동에서 월세가 가장 저렴한 단독주택는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’방배본동’})-[:IN]-(n:’단독주택’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","서초1동,",서초1동에서 월세가 가장 저렴한 빌라는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’서초1동’})-[:IN]-(k:’빌라’) RETURN k.name ORDER BY k.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","서초3동,",서초3동에서 월세가 가장 저렴한 아파트는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’서초3동’})-[:IN]-(n:’아파트’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","양재2동,",양재2동에서 월세가 가장 저렴한 아파트는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’양재2동’})-[:IN]-(k:’아파트’) RETURN k.name ORDER BY k.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","서초1동,",서초1동에서 월세가 가장 저렴한 단독주택는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’서초1동’})-[:IN]-(n:’단독주택’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","방배본동,",방배본동에서 월세가 가장 저렴한 빌라는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’방배본동’})-[:IN]-(k:’빌라’) RETURN k.name ORDER BY k.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","반포2동,",반포2동에서 월세가 가장 저렴한 아파트는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’반포2동’})-[:IN]-(n:’아파트’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","방배1동,",방배1동에서 월세가 가장 저렴한 아파트는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’방배1동’})-[:IN]-(n:’아파트’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","서초3동,",서초3동에서 월세가 가장 저렴한 아파트는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’서초3동’})-[:IN]-(n:’아파트’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","방배3동,",방배3동에서 월세가 가장 저렴한 단독주택는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’방배3동’})-[:IN]-(k:’단독주택’) RETURN k.name ORDER BY k.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","서초4동,",서초4동에서 월세가 가장 저렴한 빌라는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’서초4동’})-[:IN]-(k:’빌라’) RETURN k.name ORDER BY k.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","양재2동,",양재2동에서 월세가 가장 저렴한 아파트는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’양재2동’})-[:IN]-(n:’아파트’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","서초4동,",서초4동에서 월세가 가장 저렴한 아파트는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’서초4동’})-[:IN]-(n:’아파트’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","반포본동,",반포본동에서 월세가 가장 저렴한 단독주택는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’반포본동’})-[:IN]-(k:’단독주택’) RETURN k.name ORDER BY k.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","잠원동,",잠원동에서 월세가 가장 저렴한 빌라는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’잠원동’})-[:IN]-(n:’빌라’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","방배1동,",방배1동에서 월세가 가장 저렴한 아파트는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’방배1동’})-[:IN]-(n:’아파트’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","방배2동,",방배2동에서 월세가 가장 저렴한 단독주택는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’방배2동’})-[:IN]-(n:’단독주택’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","서초1동,",서초1동에서 월세가 가장 저렴한 아파트는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’서초1동’})-[:IN]-(k:’아파트’) RETURN k.name ORDER BY k.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","서초3동,",서초3동에서 월세가 가장 저렴한 단독주택는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’서초3동’})-[:IN]-(n:’단독주택’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","서초4동,",서초4동에서 월세가 가장 저렴한 단독주택는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’서초4동’})-[:IN]-(n:’단독주택’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","반포본동,",반포본동에서 월세가 가장 저렴한 단독주택는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’반포본동’})-[:IN]-(k:’단독주택’) RETURN k.name ORDER BY k.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","반포3동,",반포3동에서 월세가 가장 저렴한 아파트는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’반포3동’})-[:IN]-(n:’아파트’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","잠원동,",잠원동에서 월세가 가장 저렴한 아파트는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’잠원동’})-[:IN]-(k:’아파트’) RETURN k.name ORDER BY k.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","양재2동,",양재2동에서 월세가 가장 저렴한 빌라는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’양재2동’})-[:IN]-(k:’빌라’) RETURN k.name ORDER BY k.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","방배1동,",방배1동에서 월세가 가장 저렴한 빌라는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’방배1동’})-[:IN]-(n:’빌라’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","방배1동,",방배1동에서 월세가 가장 저렴한 아파트는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’방배1동’})-[:IN]-(n:’아파트’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","양재1동,",양재1동에서 월세가 가장 저렴한 빌라는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’양재1동’})-[:IN]-(n:’빌라’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","반포본동,",반포본동에서 월세가 가장 저렴한 단독주택는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’반포본동’})-[:IN]-(n:’단독주택’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","잠원동,",잠원동에서 월세가 가장 저렴한 아파트는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’잠원동’})-[:IN]-(n:’아파트’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","반포본동,",반포본동에서 월세가 가장 저렴한 아파트는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’반포본동’})-[:IN]-(k:’아파트’) RETURN k.name ORDER BY k.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","방배3동,",방배3동에서 월세가 가장 저렴한 단독주택는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’방배3동’})-[:IN]-(n:’단독주택’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","서초2동,",서초2동에서 월세가 가장 저렴한 아파트는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’서초2동’})-[:IN]-(n:’아파트’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","서초2동,",서초2동에서 월세가 가장 저렴한 빌라는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’서초2동’})-[:IN]-(n:’빌라’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","서초1동,",서초1동에서 월세가 가장 저렴한 빌라는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’서초1동’})-[:IN]-(k:’빌라’) RETURN k.name ORDER BY k.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","양재2동,",양재2동에서 월세가 가장 저렴한 아파트는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’양재2동’})-[:IN]-(n:’아파트’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","서초3동,",서초3동에서 월세가 가장 저렴한 단독주택는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’서초3동’})-[:IN]-(n:’단독주택’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","서초1동,",서초1동에서 월세가 가장 저렴한 단독주택는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’서초1동’})-[:IN]-(k:’단독주택’) RETURN k.name ORDER BY k.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","방배3동,",방배3동에서 월세가 가장 저렴한 단독주택는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’방배3동’})-[:IN]-(k:’단독주택’) RETURN k.name ORDER BY k.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","방배4동,",방배4동에서 월세가 가장 저렴한 단독주택는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’방배4동’})-[:IN]-(n:’단독주택’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","서초1동,",서초1동에서 월세가 가장 저렴한 빌라는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’서초1동’})-[:IN]-(k:’빌라’) RETURN k.name ORDER BY k.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","잠원동,",잠원동에서 월세가 가장 저렴한 빌라는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’잠원동’})-[:IN]-(k:’빌라’) RETURN k.name ORDER BY k.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","잠원동,",잠원동에서 월세가 가장 저렴한 빌라는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’잠원동’})-[:IN]-(k:’빌라’) RETURN k.name ORDER BY k.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","반포3동,",반포3동에서 월세가 가장 저렴한 빌라는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’반포3동’})-[:IN]-(n:’빌라’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","서초3동,",서초3동에서 월세가 가장 저렴한 아파트는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’서초3동’})-[:IN]-(k:’아파트’) RETURN k.name ORDER BY k.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","방배4동,",방배4동에서 월세가 가장 저렴한 단독주택는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’방배4동’})-[:IN]-(n:’단독주택’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","반포본동,",반포본동에서 월세가 가장 저렴한 빌라는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’반포본동’})-[:IN]-(k:’빌라’) RETURN k.name ORDER BY k.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","양재2동,",양재2동에서 월세가 가장 저렴한 빌라는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’양재2동’})-[:IN]-(n:’빌라’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","방배2동,",방배2동에서 월세가 가장 저렴한 단독주택는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’방배2동’})-[:IN]-(n:’단독주택’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","반포4동,",반포4동에서 월세가 가장 저렴한 아파트는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’반포4동’})-[:IN]-(n:’아파트’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","반포3동,",반포3동에서 월세가 가장 저렴한 아파트는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’반포3동’})-[:IN]-(n:’아파트’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","양재2동,",양재2동에서 월세가 가장 저렴한 아파트는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’양재2동’})-[:IN]-(k:’아파트’) RETURN k.name ORDER BY k.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","양재1동,",양재1동에서 월세가 가장 저렴한 빌라는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’양재1동’})-[:IN]-(n:’빌라’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","반포본동,",반포본동에서 월세가 가장 저렴한 빌라는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’반포본동’})-[:IN]-(n:’빌라’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","서초3동,",서초3동에서 월세가 가장 저렴한 빌라는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’서초3동’})-[:IN]-(n:’빌라’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","서초3동,",서초3동에서 월세가 가장 저렴한 빌라는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’서초3동’})-[:IN]-(n:’빌라’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","서초2동,",서초2동에서 월세가 가장 저렴한 단독주택는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’서초2동’})-[:IN]-(k:’단독주택’) RETURN k.name ORDER BY k.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","반포1동,",반포1동에서 월세가 가장 저렴한 아파트는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’반포1동’})-[:IN]-(n:’아파트’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","방배1동,",방배1동에서 월세가 가장 저렴한 빌라는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’방배1동’})-[:IN]-(n:’빌라’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","반포본동,",반포본동에서 월세가 가장 저렴한 단독주택는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’반포본동’})-[:IN]-(k:’단독주택’) RETURN k.name ORDER BY k.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","서초1동,",서초1동에서 월세가 가장 저렴한 아파트는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’서초1동’})-[:IN]-(n:’아파트’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","양재1동,",양재1동에서 월세가 가장 저렴한 빌라는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’양재1동’})-[:IN]-(k:’빌라’) RETURN k.name ORDER BY k.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","방배2동,",방배2동에서 월세가 가장 저렴한 아파트는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’방배2동’})-[:IN]-(n:’아파트’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","서초2동,",서초2동에서 월세가 가장 저렴한 아파트는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’서초2동’})-[:IN]-(n:’아파트’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","반포본동,",반포본동에서 월세가 가장 저렴한 단독주택는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’반포본동’})-[:IN]-(n:’단독주택’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","서초2동,",서초2동에서 월세가 가장 저렴한 단독주택는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’서초2동’})-[:IN]-(k:’단독주택’) RETURN k.name ORDER BY k.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","양재2동,",양재2동에서 월세가 가장 저렴한 아파트는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’양재2동’})-[:IN]-(n:’아파트’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","방배본동,",방배본동에서 월세가 가장 저렴한 빌라는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’방배본동’})-[:IN]-(n:’빌라’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","반포3동,",반포3동에서 월세가 가장 저렴한 단독주택는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’반포3동’})-[:IN]-(k:’단독주택’) RETURN k.name ORDER BY k.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","반포4동,",반포4동에서 월세가 가장 저렴한 아파트는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’반포4동’})-[:IN]-(k:’아파트’) RETURN k.name ORDER BY k.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","양재1동,",양재1동에서 월세가 가장 저렴한 아파트는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’양재1동’})-[:IN]-(n:’아파트’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","서초1동,",서초1동에서 월세가 가장 저렴한 아파트는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’서초1동’})-[:IN]-(n:’아파트’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","방배4동,",방배4동에서 월세가 가장 저렴한 빌라는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’방배4동’})-[:IN]-(k:’빌라’) RETURN k.name ORDER BY k.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","방배4동,",방배4동에서 월세가 가장 저렴한 아파트는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’방배4동’})-[:IN]-(n:’아파트’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","방배4동,",방배4동에서 월세가 가장 저렴한 단독주택는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’방배4동’})-[:IN]-(n:’단독주택’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","양재2동,",양재2동에서 월세가 가장 저렴한 빌라는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’양재2동’})-[:IN]-(n:’빌라’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","방배본동,",방배본동에서 월세가 가장 저렴한 아파트는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’방배본동’})-[:IN]-(n:’아파트’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","방배4동,",방배4동에서 월세가 가장 저렴한 빌라는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’방배4동’})-[:IN]-(n:’빌라’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","내곡동,",내곡동에서 월세가 가장 저렴한 단독주택는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’내곡동’})-[:IN]-(n:’단독주택’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","반포2동,",반포2동에서 월세가 가장 저렴한 단독주택는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’반포2동’})-[:IN]-(n:’단독주택’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","반포3동,",반포3동에서 월세가 가장 저렴한 아파트는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’반포3동’})-[:IN]-(n:’아파트’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","잠원동,",잠원동에서 월세가 가장 저렴한 아파트는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’잠원동’})-[:IN]-(n:’아파트’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","양재1동,",양재1동에서 월세가 가장 저렴한 아파트는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’양재1동’})-[:IN]-(n:’아파트’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","방배본동,",방배본동에서 월세가 가장 저렴한 아파트는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’방배본동’})-[:IN]-(n:’아파트’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","서초4동,",서초4동에서 월세가 가장 저렴한 아파트는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’서초4동’})-[:IN]-(k:’아파트’) RETURN k.name ORDER BY k.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","방배2동,",방배2동에서 월세가 가장 저렴한 단독주택는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’방배2동’})-[:IN]-(n:’단독주택’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","서초3동,",서초3동에서 월세가 가장 저렴한 빌라는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’서초3동’})-[:IN]-(n:’빌라’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","반포4동,",반포4동에서 월세가 가장 저렴한 아파트는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’반포4동’})-[:IN]-(k:’아파트’) RETURN k.name ORDER BY k.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","반포4동,",반포4동에서 월세가 가장 저렴한 빌라는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’반포4동’})-[:IN]-(n:’빌라’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","반포3동,",반포3동에서 월세가 가장 저렴한 빌라는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’반포3동’})-[:IN]-(n:’빌라’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","잠원동,",잠원동에서 월세가 가장 저렴한 아파트는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’잠원동’})-[:IN]-(n:’아파트’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","서초3동,",서초3동에서 월세가 가장 저렴한 단독주택는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’서초3동’})-[:IN]-(k:’단독주택’) RETURN k.name ORDER BY k.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","방배4동,",방배4동에서 월세가 가장 저렴한 빌라는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’방배4동’})-[:IN]-(n:’빌라’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","잠원동,",잠원동에서 월세가 가장 저렴한 빌라는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’잠원동’})-[:IN]-(n:’빌라’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","방배본동,",방배본동에서 월세가 가장 저렴한 단독주택는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’방배본동’})-[:IN]-(n:’단독주택’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","방배3동,",방배3동에서 월세가 가장 저렴한 단독주택는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’방배3동’})-[:IN]-(n:’단독주택’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","서초2동,",서초2동에서 월세가 가장 저렴한 단독주택는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’서초2동’})-[:IN]-(k:’단독주택’) RETURN k.name ORDER BY k.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","내곡동,",내곡동에서 월세가 가장 저렴한 아파트는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’내곡동’})-[:IN]-(n:’아파트’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","방배2동,",방배2동에서 월세가 가장 저렴한 아파트는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’방배2동’})-[:IN]-(k:’아파트’) RETURN k.name ORDER BY k.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","방배4동,",방배4동에서 월세가 가장 저렴한 빌라는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’방배4동’})-[:IN]-(n:’빌라’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","방배2동,",방배2동에서 월세가 가장 저렴한 아파트는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’방배2동’})-[:IN]-(n:’아파트’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","잠원동,",잠원동에서 월세가 가장 저렴한 아파트는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’잠원동’})-[:IN]-(n:’아파트’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","양재2동,",양재2동에서 월세가 가장 저렴한 빌라는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’양재2동’})-[:IN]-(n:’빌라’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","서초4동,",서초4동에서 월세가 가장 저렴한 빌라는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’서초4동’})-[:IN]-(n:’빌라’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","서초3동,",서초3동에서 월세가 가장 저렴한 아파트는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’서초3동’})-[:IN]-(n:’아파트’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","반포3동,",반포3동에서 월세가 가장 저렴한 단독주택는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’반포3동’})-[:IN]-(n:’단독주택’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","서초3동,",서초3동에서 월세가 가장 저렴한 아파트는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’서초3동’})-[:IN]-(n:’아파트’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","서초3동,",서초3동에서 월세가 가장 저렴한 빌라는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’서초3동’})-[:IN]-(n:’빌라’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","반포3동,",반포3동에서 월세가 가장 저렴한 아파트는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’반포3동’})-[:IN]-(n:’아파트’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","반포4동,",반포4동에서 월세가 가장 저렴한 아파트는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’반포4동’})-[:IN]-(k:’아파트’) RETURN k.name ORDER BY k.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","반포본동,",반포본동에서 월세가 가장 저렴한 빌라는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’반포본동’})-[:IN]-(n:’빌라’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","양재1동,",양재1동에서 월세가 가장 저렴한 아파트는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’양재1동’})-[:IN]-(k:’아파트’) RETURN k.name ORDER BY k.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","반포본동,",반포본동에서 월세가 가장 저렴한 아파트는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’반포본동’})-[:IN]-(n:’아파트’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","서초2동,",서초2동에서 월세가 가장 저렴한 빌라는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’서초2동’})-[:IN]-(k:’빌라’) RETURN k.name ORDER BY k.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","양재1동,",양재1동에서 월세가 가장 저렴한 아파트는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (l:DistrictBoundaryDong {name:’양재1동’})-[:IN]-(n:’아파트’) RETURN n.name ORDER BY n.rent ASC,1,1
16,[mask_1]에서 월세가 가장 저렴한 [mask_2]는 어디야?,"emd_name,building_type","방배1동,",방배1동에서 월세가 가장 저렴한 빌라는 어디야?,MATCH ([beta]:DistrictBoundaryDong {name:’[mask_1]’})-[:IN]-([alpha]:’[mask_2]’) RETURN [alpha].name ORDER BY [alpha].rent ASC,"emd_name,building_type",MATCH (m:DistrictBoundaryDong {name:’방배1동’})-[:IN]-(n:’빌라’) RETURN n.name ORDER BY n.rent ASC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (k:’빌라’) RETURN k.name ORDER BY k.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (k:’빌라’) RETURN k.name ORDER BY k.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (k:’빌라’) RETURN k.name ORDER BY k.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (k:’빌라’) RETURN k.name ORDER BY k.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (k:’빌라’) RETURN k.name ORDER BY k.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (k:’빌라’) RETURN k.name ORDER BY k.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (k:’빌라’) RETURN k.name ORDER BY k.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (k:’빌라’) RETURN k.name ORDER BY k.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (k:’빌라’) RETURN k.name ORDER BY k.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (k:’빌라’) RETURN k.name ORDER BY k.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (k:’빌라’) RETURN k.name ORDER BY k.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (k:’빌라’) RETURN k.name ORDER BY k.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (k:’빌라’) RETURN k.name ORDER BY k.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (k:’빌라’) RETURN k.name ORDER BY k.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (k:’빌라’) RETURN k.name ORDER BY k.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (k:’빌라’) RETURN k.name ORDER BY k.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (k:’빌라’) RETURN k.name ORDER BY k.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (k:’빌라’) RETURN k.name ORDER BY k.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (k:’빌라’) RETURN k.name ORDER BY k.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (k:’빌라’) RETURN k.name ORDER BY k.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (k:’빌라’) RETURN k.name ORDER BY k.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (k:’빌라’) RETURN k.name ORDER BY k.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (k:’빌라’) RETURN k.name ORDER BY k.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (k:’빌라’) RETURN k.name ORDER BY k.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (k:’빌라’) RETURN k.name ORDER BY k.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (k:’빌라’) RETURN k.name ORDER BY k.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (k:’빌라’) RETURN k.name ORDER BY k.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (k:’빌라’) RETURN k.name ORDER BY k.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (k:’빌라’) RETURN k.name ORDER BY k.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (k:’빌라’) RETURN k.name ORDER BY k.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (k:’빌라’) RETURN k.name ORDER BY k.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (k:’빌라’) RETURN k.name ORDER BY k.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (k:’빌라’) RETURN k.name ORDER BY k.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (k:’빌라’) RETURN k.name ORDER BY k.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (k:’빌라’) RETURN k.name ORDER BY k.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.pop_ratio_50s DESC,1,1
17,50대 인구 비율이 높은 [mask_1]는?,building_type,,50대 인구 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_50s DESC,building_type,MATCH (k:’빌라’) RETURN k.name ORDER BY k.pop_ratio_50s DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (k:’빌라’) RETURN k.name ORDER BY k.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (k:’빌라’) RETURN k.name ORDER BY k.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (k:’빌라’) RETURN k.name ORDER BY k.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (k:’빌라’) RETURN k.name ORDER BY k.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (k:’빌라’) RETURN k.name ORDER BY k.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (k:’빌라’) RETURN k.name ORDER BY k.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (k:’빌라’) RETURN k.name ORDER BY k.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (k:’빌라’) RETURN k.name ORDER BY k.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (k:’빌라’) RETURN k.name ORDER BY k.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (k:’빌라’) RETURN k.name ORDER BY k.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (k:’빌라’) RETURN k.name ORDER BY k.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (k:’빌라’) RETURN k.name ORDER BY k.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (k:’빌라’) RETURN k.name ORDER BY k.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (k:’빌라’) RETURN k.name ORDER BY k.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (k:’빌라’) RETURN k.name ORDER BY k.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (k:’빌라’) RETURN k.name ORDER BY k.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (k:’빌라’) RETURN k.name ORDER BY k.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (k:’빌라’) RETURN k.name ORDER BY k.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (k:’빌라’) RETURN k.name ORDER BY k.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (k:’빌라’) RETURN k.name ORDER BY k.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (k:’빌라’) RETURN k.name ORDER BY k.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (k:’빌라’) RETURN k.name ORDER BY k.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (k:’빌라’) RETURN k.name ORDER BY k.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (k:’빌라’) RETURN k.name ORDER BY k.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (k:’빌라’) RETURN k.name ORDER BY k.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (k:’빌라’) RETURN k.name ORDER BY k.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (k:’빌라’) RETURN k.name ORDER BY k.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (k:’빌라’) RETURN k.name ORDER BY k.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (k:’빌라’) RETURN k.name ORDER BY k.average_income_year DESC,1,1
18,평균 소득이 높은 [mask_1]는?,building_type,,평균 소득이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].average_income_year DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.average_income_year DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (k:’빌라’) RETURN k.name ORDER BY k.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (k:’빌라’) RETURN k.name ORDER BY k.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (k:’빌라’) RETURN k.name ORDER BY k.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (k:’빌라’) RETURN k.name ORDER BY k.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (k:’빌라’) RETURN k.name ORDER BY k.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (k:’빌라’) RETURN k.name ORDER BY k.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (k:’빌라’) RETURN k.name ORDER BY k.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (k:’빌라’) RETURN k.name ORDER BY k.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (k:’빌라’) RETURN k.name ORDER BY k.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (k:’빌라’) RETURN k.name ORDER BY k.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (k:’빌라’) RETURN k.name ORDER BY k.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (k:’빌라’) RETURN k.name ORDER BY k.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (k:’빌라’) RETURN k.name ORDER BY k.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (k:’빌라’) RETURN k.name ORDER BY k.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (k:’빌라’) RETURN k.name ORDER BY k.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (k:’빌라’) RETURN k.name ORDER BY k.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (k:’빌라’) RETURN k.name ORDER BY k.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (k:’빌라’) RETURN k.name ORDER BY k.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (k:’빌라’) RETURN k.name ORDER BY k.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (k:’빌라’) RETURN k.name ORDER BY k.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (k:’빌라’) RETURN k.name ORDER BY k.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (k:’빌라’) RETURN k.name ORDER BY k.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
19,출근시간에 택시 승차 비율이 높은 [mask_1]는?,building_type,,출근시간에 택시 승차 비율이 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].taxi_dropoff_ratio_morning_peak DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.taxi_dropoff_ratio_morning_peak DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (k:’빌라’) RETURN k.name ORDER BY k.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (k:’빌라’) RETURN k.name ORDER BY k.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (k:’빌라’) RETURN k.name ORDER BY k.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (k:’빌라’) RETURN k.name ORDER BY k.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (k:’빌라’) RETURN k.name ORDER BY k.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (k:’빌라’) RETURN k.name ORDER BY k.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (k:’빌라’) RETURN k.name ORDER BY k.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (k:’빌라’) RETURN k.name ORDER BY k.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (k:’빌라’) RETURN k.name ORDER BY k.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (k:’빌라’) RETURN k.name ORDER BY k.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (k:’빌라’) RETURN k.name ORDER BY k.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (k:’빌라’) RETURN k.name ORDER BY k.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (k:’빌라’) RETURN k.name ORDER BY k.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (k:’빌라’) RETURN k.name ORDER BY k.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (k:’빌라’) RETURN k.name ORDER BY k.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (k:’빌라’) RETURN k.name ORDER BY k.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (k:’빌라’) RETURN k.name ORDER BY k.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (k:’빌라’) RETURN k.name ORDER BY k.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (k:’빌라’) RETURN k.name ORDER BY k.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (k:’빌라’) RETURN k.name ORDER BY k.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (k:’빌라’) RETURN k.name ORDER BY k.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (k:’빌라’) RETURN k.name ORDER BY k.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (k:’빌라’) RETURN k.name ORDER BY k.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (k:’빌라’) RETURN k.name ORDER BY k.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’아파트’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (k:’단독주택’) RETURN k.name ORDER BY k.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (k:’빌라’) RETURN k.name ORDER BY k.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 아파트는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (k:’아파트’) RETURN k.name ORDER BY k.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 단독주택는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’단독주택’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
20,경사도가 높은 [mask_1]는?,building_type,,경사도가 높은 빌라는?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].slope_ratio DESC,building_type,MATCH (n:’빌라’) RETURN n.name ORDER BY n.slope_ratio DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,내곡동,20대가 많이 거주하는 내곡동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’내곡동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,내곡동,20대가 많이 거주하는 내곡동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (k:’내곡동’) RETURN k.name ORDER BY k.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,반포1동,20대가 많이 거주하는 반포1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (k:’반포1동’) RETURN k.name ORDER BY k.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,잠원동,20대가 많이 거주하는 잠원동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’잠원동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,양재2동,20대가 많이 거주하는 양재2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (k:’양재2동’) RETURN k.name ORDER BY k.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,반포2동,20대가 많이 거주하는 반포2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (k:’반포2동’) RETURN k.name ORDER BY k.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,서초4동,20대가 많이 거주하는 서초4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (k:’서초4동’) RETURN k.name ORDER BY k.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,방배1동,20대가 많이 거주하는 방배1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’방배1동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,잠원동,20대가 많이 거주하는 잠원동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’잠원동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,서초3동,20대가 많이 거주하는 서초3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’서초3동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,반포4동,20대가 많이 거주하는 반포4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’반포4동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,서초1동,20대가 많이 거주하는 서초1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (k:’서초1동’) RETURN k.name ORDER BY k.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,반포1동,20대가 많이 거주하는 반포1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (k:’반포1동’) RETURN k.name ORDER BY k.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,양재2동,20대가 많이 거주하는 양재2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’양재2동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,방배2동,20대가 많이 거주하는 방배2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (k:’방배2동’) RETURN k.name ORDER BY k.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,방배3동,20대가 많이 거주하는 방배3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (k:’방배3동’) RETURN k.name ORDER BY k.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,서초3동,20대가 많이 거주하는 서초3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’서초3동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,반포4동,20대가 많이 거주하는 반포4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (k:’반포4동’) RETURN k.name ORDER BY k.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,반포2동,20대가 많이 거주하는 반포2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (k:’반포2동’) RETURN k.name ORDER BY k.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,양재2동,20대가 많이 거주하는 양재2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’양재2동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,반포3동,20대가 많이 거주하는 반포3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’반포3동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,방배2동,20대가 많이 거주하는 방배2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’방배2동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,서초4동,20대가 많이 거주하는 서초4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’서초4동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,반포본동,20대가 많이 거주하는 반포본동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’반포본동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,반포3동,20대가 많이 거주하는 반포3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’반포3동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,양재2동,20대가 많이 거주하는 양재2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’양재2동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,반포1동,20대가 많이 거주하는 반포1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’반포1동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,양재1동,20대가 많이 거주하는 양재1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’양재1동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,내곡동,20대가 많이 거주하는 내곡동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (k:’내곡동’) RETURN k.name ORDER BY k.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,서초3동,20대가 많이 거주하는 서초3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (k:’서초3동’) RETURN k.name ORDER BY k.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,잠원동,20대가 많이 거주하는 잠원동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’잠원동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,반포4동,20대가 많이 거주하는 반포4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’반포4동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,반포1동,20대가 많이 거주하는 반포1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’반포1동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,내곡동,20대가 많이 거주하는 내곡동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’내곡동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,서초1동,20대가 많이 거주하는 서초1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’서초1동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,서초1동,20대가 많이 거주하는 서초1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’서초1동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,서초4동,20대가 많이 거주하는 서초4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’서초4동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,내곡동,20대가 많이 거주하는 내곡동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (k:’내곡동’) RETURN k.name ORDER BY k.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,서초3동,20대가 많이 거주하는 서초3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’서초3동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,방배4동,20대가 많이 거주하는 방배4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (k:’방배4동’) RETURN k.name ORDER BY k.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,반포3동,20대가 많이 거주하는 반포3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (k:’반포3동’) RETURN k.name ORDER BY k.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,서초4동,20대가 많이 거주하는 서초4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’서초4동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,반포1동,20대가 많이 거주하는 반포1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’반포1동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,방배2동,20대가 많이 거주하는 방배2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (k:’방배2동’) RETURN k.name ORDER BY k.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,방배2동,20대가 많이 거주하는 방배2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’방배2동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,방배본동,20대가 많이 거주하는 방배본동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’방배본동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,방배3동,20대가 많이 거주하는 방배3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (k:’방배3동’) RETURN k.name ORDER BY k.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,서초1동,20대가 많이 거주하는 서초1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’서초1동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,방배2동,20대가 많이 거주하는 방배2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (k:’방배2동’) RETURN k.name ORDER BY k.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,잠원동,20대가 많이 거주하는 잠원동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’잠원동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,반포3동,20대가 많이 거주하는 반포3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’반포3동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,방배2동,20대가 많이 거주하는 방배2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’방배2동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,양재1동,20대가 많이 거주하는 양재1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’양재1동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,서초3동,20대가 많이 거주하는 서초3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’서초3동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,양재2동,20대가 많이 거주하는 양재2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’양재2동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,방배2동,20대가 많이 거주하는 방배2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’방배2동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,방배1동,20대가 많이 거주하는 방배1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’방배1동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,양재2동,20대가 많이 거주하는 양재2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’양재2동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,방배4동,20대가 많이 거주하는 방배4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’방배4동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,반포2동,20대가 많이 거주하는 반포2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’반포2동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,서초2동,20대가 많이 거주하는 서초2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’서초2동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,방배1동,20대가 많이 거주하는 방배1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’방배1동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,반포2동,20대가 많이 거주하는 반포2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (k:’반포2동’) RETURN k.name ORDER BY k.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,양재1동,20대가 많이 거주하는 양재1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’양재1동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,반포본동,20대가 많이 거주하는 반포본동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (k:’반포본동’) RETURN k.name ORDER BY k.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,양재1동,20대가 많이 거주하는 양재1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (k:’양재1동’) RETURN k.name ORDER BY k.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,양재1동,20대가 많이 거주하는 양재1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’양재1동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,내곡동,20대가 많이 거주하는 내곡동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’내곡동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,방배본동,20대가 많이 거주하는 방배본동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’방배본동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,반포4동,20대가 많이 거주하는 반포4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’반포4동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,서초2동,20대가 많이 거주하는 서초2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (k:’서초2동’) RETURN k.name ORDER BY k.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,반포3동,20대가 많이 거주하는 반포3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (k:’반포3동’) RETURN k.name ORDER BY k.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,방배1동,20대가 많이 거주하는 방배1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’방배1동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,반포3동,20대가 많이 거주하는 반포3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’반포3동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,방배본동,20대가 많이 거주하는 방배본동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (k:’방배본동’) RETURN k.name ORDER BY k.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,방배4동,20대가 많이 거주하는 방배4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’방배4동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,방배본동,20대가 많이 거주하는 방배본동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’방배본동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,서초2동,20대가 많이 거주하는 서초2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’서초2동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,양재1동,20대가 많이 거주하는 양재1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (k:’양재1동’) RETURN k.name ORDER BY k.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,방배4동,20대가 많이 거주하는 방배4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (k:’방배4동’) RETURN k.name ORDER BY k.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,양재1동,20대가 많이 거주하는 양재1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’양재1동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,반포4동,20대가 많이 거주하는 반포4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’반포4동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,방배2동,20대가 많이 거주하는 방배2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (k:’방배2동’) RETURN k.name ORDER BY k.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,내곡동,20대가 많이 거주하는 내곡동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’내곡동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,방배본동,20대가 많이 거주하는 방배본동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’방배본동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,반포1동,20대가 많이 거주하는 반포1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (k:’반포1동’) RETURN k.name ORDER BY k.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,서초3동,20대가 많이 거주하는 서초3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’서초3동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,양재1동,20대가 많이 거주하는 양재1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (k:’양재1동’) RETURN k.name ORDER BY k.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,방배2동,20대가 많이 거주하는 방배2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (k:’방배2동’) RETURN k.name ORDER BY k.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,반포3동,20대가 많이 거주하는 반포3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (k:’반포3동’) RETURN k.name ORDER BY k.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,방배1동,20대가 많이 거주하는 방배1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (k:’방배1동’) RETURN k.name ORDER BY k.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,양재1동,20대가 많이 거주하는 양재1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’양재1동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,반포3동,20대가 많이 거주하는 반포3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (k:’반포3동’) RETURN k.name ORDER BY k.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,반포1동,20대가 많이 거주하는 반포1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’반포1동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,반포3동,20대가 많이 거주하는 반포3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’반포3동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,반포2동,20대가 많이 거주하는 반포2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’반포2동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,내곡동,20대가 많이 거주하는 내곡동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’내곡동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,서초4동,20대가 많이 거주하는 서초4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (k:’서초4동’) RETURN k.name ORDER BY k.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,반포본동,20대가 많이 거주하는 반포본동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’반포본동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,반포본동,20대가 많이 거주하는 반포본동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (k:’반포본동’) RETURN k.name ORDER BY k.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,서초1동,20대가 많이 거주하는 서초1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (k:’서초1동’) RETURN k.name ORDER BY k.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,반포3동,20대가 많이 거주하는 반포3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (k:’반포3동’) RETURN k.name ORDER BY k.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,양재2동,20대가 많이 거주하는 양재2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’양재2동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,내곡동,20대가 많이 거주하는 내곡동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’내곡동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,내곡동,20대가 많이 거주하는 내곡동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’내곡동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,방배1동,20대가 많이 거주하는 방배1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’방배1동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,반포2동,20대가 많이 거주하는 반포2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’반포2동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,내곡동,20대가 많이 거주하는 내곡동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’내곡동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,방배4동,20대가 많이 거주하는 방배4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’방배4동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,반포3동,20대가 많이 거주하는 반포3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’반포3동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,반포본동,20대가 많이 거주하는 반포본동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’반포본동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,방배2동,20대가 많이 거주하는 방배2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (k:’방배2동’) RETURN k.name ORDER BY k.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,반포2동,20대가 많이 거주하는 반포2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’반포2동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,양재2동,20대가 많이 거주하는 양재2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’양재2동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,방배3동,20대가 많이 거주하는 방배3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’방배3동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,양재2동,20대가 많이 거주하는 양재2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (k:’양재2동’) RETURN k.name ORDER BY k.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,잠원동,20대가 많이 거주하는 잠원동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’잠원동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,반포1동,20대가 많이 거주하는 반포1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’반포1동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,양재2동,20대가 많이 거주하는 양재2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’양재2동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,서초1동,20대가 많이 거주하는 서초1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (k:’서초1동’) RETURN k.name ORDER BY k.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,반포1동,20대가 많이 거주하는 반포1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (k:’반포1동’) RETURN k.name ORDER BY k.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,반포3동,20대가 많이 거주하는 반포3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’반포3동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,양재2동,20대가 많이 거주하는 양재2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (k:’양재2동’) RETURN k.name ORDER BY k.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,서초1동,20대가 많이 거주하는 서초1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’서초1동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,서초1동,20대가 많이 거주하는 서초1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’서초1동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,방배4동,20대가 많이 거주하는 방배4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (k:’방배4동’) RETURN k.name ORDER BY k.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,방배3동,20대가 많이 거주하는 방배3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’방배3동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,반포1동,20대가 많이 거주하는 반포1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’반포1동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,반포본동,20대가 많이 거주하는 반포본동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’반포본동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,방배본동,20대가 많이 거주하는 방배본동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’방배본동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,방배1동,20대가 많이 거주하는 방배1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (k:’방배1동’) RETURN k.name ORDER BY k.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,양재2동,20대가 많이 거주하는 양재2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (k:’양재2동’) RETURN k.name ORDER BY k.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,서초3동,20대가 많이 거주하는 서초3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’서초3동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,반포1동,20대가 많이 거주하는 반포1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (k:’반포1동’) RETURN k.name ORDER BY k.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,서초3동,20대가 많이 거주하는 서초3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’서초3동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,서초4동,20대가 많이 거주하는 서초4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’서초4동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,반포1동,20대가 많이 거주하는 반포1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’반포1동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,서초1동,20대가 많이 거주하는 서초1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’서초1동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,서초2동,20대가 많이 거주하는 서초2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’서초2동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,반포1동,20대가 많이 거주하는 반포1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’반포1동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,내곡동,20대가 많이 거주하는 내곡동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (k:’내곡동’) RETURN k.name ORDER BY k.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,방배2동,20대가 많이 거주하는 방배2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (k:’방배2동’) RETURN k.name ORDER BY k.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,방배2동,20대가 많이 거주하는 방배2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’방배2동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,서초3동,20대가 많이 거주하는 서초3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (k:’서초3동’) RETURN k.name ORDER BY k.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,방배4동,20대가 많이 거주하는 방배4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’방배4동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,반포4동,20대가 많이 거주하는 반포4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (k:’반포4동’) RETURN k.name ORDER BY k.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,서초3동,20대가 많이 거주하는 서초3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’서초3동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,반포4동,20대가 많이 거주하는 반포4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (k:’반포4동’) RETURN k.name ORDER BY k.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,방배1동,20대가 많이 거주하는 방배1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’방배1동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,잠원동,20대가 많이 거주하는 잠원동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (k:’잠원동’) RETURN k.name ORDER BY k.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,반포2동,20대가 많이 거주하는 반포2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (k:’반포2동’) RETURN k.name ORDER BY k.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,잠원동,20대가 많이 거주하는 잠원동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’잠원동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,잠원동,20대가 많이 거주하는 잠원동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (k:’잠원동’) RETURN k.name ORDER BY k.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,양재2동,20대가 많이 거주하는 양재2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’양재2동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,반포3동,20대가 많이 거주하는 반포3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’반포3동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,내곡동,20대가 많이 거주하는 내곡동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’내곡동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,서초3동,20대가 많이 거주하는 서초3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’서초3동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,방배3동,20대가 많이 거주하는 방배3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’방배3동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,방배4동,20대가 많이 거주하는 방배4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (k:’방배4동’) RETURN k.name ORDER BY k.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,내곡동,20대가 많이 거주하는 내곡동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (k:’내곡동’) RETURN k.name ORDER BY k.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,방배4동,20대가 많이 거주하는 방배4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (k:’방배4동’) RETURN k.name ORDER BY k.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,반포본동,20대가 많이 거주하는 반포본동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (k:’반포본동’) RETURN k.name ORDER BY k.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,양재2동,20대가 많이 거주하는 양재2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (k:’양재2동’) RETURN k.name ORDER BY k.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,잠원동,20대가 많이 거주하는 잠원동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’잠원동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,반포2동,20대가 많이 거주하는 반포2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’반포2동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,서초2동,20대가 많이 거주하는 서초2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’서초2동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,방배2동,20대가 많이 거주하는 방배2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (k:’방배2동’) RETURN k.name ORDER BY k.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,방배본동,20대가 많이 거주하는 방배본동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’방배본동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,반포3동,20대가 많이 거주하는 반포3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (k:’반포3동’) RETURN k.name ORDER BY k.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,양재2동,20대가 많이 거주하는 양재2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’양재2동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,잠원동,20대가 많이 거주하는 잠원동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’잠원동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,양재2동,20대가 많이 거주하는 양재2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’양재2동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,내곡동,20대가 많이 거주하는 내곡동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’내곡동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,방배4동,20대가 많이 거주하는 방배4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (k:’방배4동’) RETURN k.name ORDER BY k.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,서초1동,20대가 많이 거주하는 서초1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (k:’서초1동’) RETURN k.name ORDER BY k.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,반포3동,20대가 많이 거주하는 반포3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’반포3동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,서초3동,20대가 많이 거주하는 서초3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (k:’서초3동’) RETURN k.name ORDER BY k.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,양재1동,20대가 많이 거주하는 양재1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’양재1동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,서초1동,20대가 많이 거주하는 서초1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (k:’서초1동’) RETURN k.name ORDER BY k.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,서초4동,20대가 많이 거주하는 서초4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’서초4동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,서초1동,20대가 많이 거주하는 서초1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’서초1동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,양재1동,20대가 많이 거주하는 양재1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (k:’양재1동’) RETURN k.name ORDER BY k.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,방배1동,20대가 많이 거주하는 방배1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’방배1동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,반포본동,20대가 많이 거주하는 반포본동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (k:’반포본동’) RETURN k.name ORDER BY k.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,양재1동,20대가 많이 거주하는 양재1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’양재1동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,반포1동,20대가 많이 거주하는 반포1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’반포1동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,방배3동,20대가 많이 거주하는 방배3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’방배3동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,방배2동,20대가 많이 거주하는 방배2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’방배2동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,내곡동,20대가 많이 거주하는 내곡동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’내곡동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,서초2동,20대가 많이 거주하는 서초2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’서초2동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,서초2동,20대가 많이 거주하는 서초2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (k:’서초2동’) RETURN k.name ORDER BY k.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,서초4동,20대가 많이 거주하는 서초4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’서초4동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,반포3동,20대가 많이 거주하는 반포3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’반포3동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,내곡동,20대가 많이 거주하는 내곡동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’내곡동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,내곡동,20대가 많이 거주하는 내곡동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’내곡동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,서초4동,20대가 많이 거주하는 서초4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (k:’서초4동’) RETURN k.name ORDER BY k.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,서초1동,20대가 많이 거주하는 서초1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’서초1동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,방배본동,20대가 많이 거주하는 방배본동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (k:’방배본동’) RETURN k.name ORDER BY k.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,서초4동,20대가 많이 거주하는 서초4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’서초4동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,반포3동,20대가 많이 거주하는 반포3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’반포3동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,잠원동,20대가 많이 거주하는 잠원동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (k:’잠원동’) RETURN k.name ORDER BY k.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,서초3동,20대가 많이 거주하는 서초3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’서초3동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,방배3동,20대가 많이 거주하는 방배3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (k:’방배3동’) RETURN k.name ORDER BY k.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,서초4동,20대가 많이 거주하는 서초4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (k:’서초4동’) RETURN k.name ORDER BY k.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,서초4동,20대가 많이 거주하는 서초4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’서초4동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,서초3동,20대가 많이 거주하는 서초3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (k:’서초3동’) RETURN k.name ORDER BY k.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,서초1동,20대가 많이 거주하는 서초1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’서초1동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,방배2동,20대가 많이 거주하는 방배2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (k:’방배2동’) RETURN k.name ORDER BY k.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,방배2동,20대가 많이 거주하는 방배2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (k:’방배2동’) RETURN k.name ORDER BY k.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,방배2동,20대가 많이 거주하는 방배2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’방배2동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,반포본동,20대가 많이 거주하는 반포본동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’반포본동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,양재2동,20대가 많이 거주하는 양재2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’양재2동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,방배2동,20대가 많이 거주하는 방배2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’방배2동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,서초2동,20대가 많이 거주하는 서초2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (k:’서초2동’) RETURN k.name ORDER BY k.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,방배3동,20대가 많이 거주하는 방배3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (k:’방배3동’) RETURN k.name ORDER BY k.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,서초3동,20대가 많이 거주하는 서초3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (k:’서초3동’) RETURN k.name ORDER BY k.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,서초3동,20대가 많이 거주하는 서초3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’서초3동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,반포4동,20대가 많이 거주하는 반포4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’반포4동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,서초4동,20대가 많이 거주하는 서초4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’서초4동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,내곡동,20대가 많이 거주하는 내곡동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (k:’내곡동’) RETURN k.name ORDER BY k.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,잠원동,20대가 많이 거주하는 잠원동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (k:’잠원동’) RETURN k.name ORDER BY k.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,서초4동,20대가 많이 거주하는 서초4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (k:’서초4동’) RETURN k.name ORDER BY k.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,방배본동,20대가 많이 거주하는 방배본동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’방배본동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,서초4동,20대가 많이 거주하는 서초4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’서초4동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,방배본동,20대가 많이 거주하는 방배본동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’방배본동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,방배1동,20대가 많이 거주하는 방배1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’방배1동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,서초1동,20대가 많이 거주하는 서초1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’서초1동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,반포3동,20대가 많이 거주하는 반포3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’반포3동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,서초3동,20대가 많이 거주하는 서초3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (k:’서초3동’) RETURN k.name ORDER BY k.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,반포3동,20대가 많이 거주하는 반포3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’반포3동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,서초3동,20대가 많이 거주하는 서초3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (k:’서초3동’) RETURN k.name ORDER BY k.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,서초4동,20대가 많이 거주하는 서초4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (k:’서초4동’) RETURN k.name ORDER BY k.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,반포2동,20대가 많이 거주하는 반포2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’반포2동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,반포1동,20대가 많이 거주하는 반포1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (k:’반포1동’) RETURN k.name ORDER BY k.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,방배3동,20대가 많이 거주하는 방배3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’방배3동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,방배4동,20대가 많이 거주하는 방배4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’방배4동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,서초1동,20대가 많이 거주하는 서초1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (k:’서초1동’) RETURN k.name ORDER BY k.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,반포1동,20대가 많이 거주하는 반포1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (k:’반포1동’) RETURN k.name ORDER BY k.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,방배본동,20대가 많이 거주하는 방배본동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (k:’방배본동’) RETURN k.name ORDER BY k.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,방배2동,20대가 많이 거주하는 방배2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’방배2동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,방배3동,20대가 많이 거주하는 방배3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’방배3동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,방배3동,20대가 많이 거주하는 방배3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’방배3동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,양재2동,20대가 많이 거주하는 양재2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’양재2동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,서초4동,20대가 많이 거주하는 서초4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (k:’서초4동’) RETURN k.name ORDER BY k.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,내곡동,20대가 많이 거주하는 내곡동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (k:’내곡동’) RETURN k.name ORDER BY k.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,방배1동,20대가 많이 거주하는 방배1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’방배1동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,서초3동,20대가 많이 거주하는 서초3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’서초3동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,반포본동,20대가 많이 거주하는 반포본동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’반포본동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,서초2동,20대가 많이 거주하는 서초2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (k:’서초2동’) RETURN k.name ORDER BY k.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,서초3동,20대가 많이 거주하는 서초3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’서초3동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,반포3동,20대가 많이 거주하는 반포3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’반포3동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,반포1동,20대가 많이 거주하는 반포1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (k:’반포1동’) RETURN k.name ORDER BY k.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,방배3동,20대가 많이 거주하는 방배3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’방배3동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,양재1동,20대가 많이 거주하는 양재1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (k:’양재1동’) RETURN k.name ORDER BY k.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,방배3동,20대가 많이 거주하는 방배3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’방배3동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,방배1동,20대가 많이 거주하는 방배1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (k:’방배1동’) RETURN k.name ORDER BY k.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,서초3동,20대가 많이 거주하는 서초3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (k:’서초3동’) RETURN k.name ORDER BY k.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,서초1동,20대가 많이 거주하는 서초1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’서초1동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,반포2동,20대가 많이 거주하는 반포2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’반포2동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,서초2동,20대가 많이 거주하는 서초2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (k:’서초2동’) RETURN k.name ORDER BY k.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,방배2동,20대가 많이 거주하는 방배2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’방배2동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,양재2동,20대가 많이 거주하는 양재2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (k:’양재2동’) RETURN k.name ORDER BY k.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,양재1동,20대가 많이 거주하는 양재1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (k:’양재1동’) RETURN k.name ORDER BY k.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,서초4동,20대가 많이 거주하는 서초4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’서초4동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,반포1동,20대가 많이 거주하는 반포1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (k:’반포1동’) RETURN k.name ORDER BY k.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,반포1동,20대가 많이 거주하는 반포1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (k:’반포1동’) RETURN k.name ORDER BY k.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,반포3동,20대가 많이 거주하는 반포3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (k:’반포3동’) RETURN k.name ORDER BY k.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,서초4동,20대가 많이 거주하는 서초4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’서초4동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,양재1동,20대가 많이 거주하는 양재1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (k:’양재1동’) RETURN k.name ORDER BY k.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,반포1동,20대가 많이 거주하는 반포1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’반포1동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,내곡동,20대가 많이 거주하는 내곡동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (k:’내곡동’) RETURN k.name ORDER BY k.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,방배본동,20대가 많이 거주하는 방배본동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’방배본동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,방배4동,20대가 많이 거주하는 방배4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’방배4동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,반포4동,20대가 많이 거주하는 반포4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’반포4동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,반포본동,20대가 많이 거주하는 반포본동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’반포본동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,반포2동,20대가 많이 거주하는 반포2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’반포2동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,방배2동,20대가 많이 거주하는 방배2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’방배2동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,서초3동,20대가 많이 거주하는 서초3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’서초3동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,반포3동,20대가 많이 거주하는 반포3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’반포3동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,방배2동,20대가 많이 거주하는 방배2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (k:’방배2동’) RETURN k.name ORDER BY k.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,방배3동,20대가 많이 거주하는 방배3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’방배3동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,양재2동,20대가 많이 거주하는 양재2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (k:’양재2동’) RETURN k.name ORDER BY k.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,잠원동,20대가 많이 거주하는 잠원동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’잠원동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,반포4동,20대가 많이 거주하는 반포4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (k:’반포4동’) RETURN k.name ORDER BY k.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,방배본동,20대가 많이 거주하는 방배본동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (k:’방배본동’) RETURN k.name ORDER BY k.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,서초2동,20대가 많이 거주하는 서초2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’서초2동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,양재2동,20대가 많이 거주하는 양재2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’양재2동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,반포1동,20대가 많이 거주하는 반포1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’반포1동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,방배2동,20대가 많이 거주하는 방배2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’방배2동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,반포본동,20대가 많이 거주하는 반포본동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (k:’반포본동’) RETURN k.name ORDER BY k.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,잠원동,20대가 많이 거주하는 잠원동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’잠원동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,방배1동,20대가 많이 거주하는 방배1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (k:’방배1동’) RETURN k.name ORDER BY k.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,방배1동,20대가 많이 거주하는 방배1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (k:’방배1동’) RETURN k.name ORDER BY k.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,반포본동,20대가 많이 거주하는 반포본동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’반포본동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,방배4동,20대가 많이 거주하는 방배4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’방배4동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,서초3동,20대가 많이 거주하는 서초3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’서초3동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,잠원동,20대가 많이 거주하는 잠원동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (k:’잠원동’) RETURN k.name ORDER BY k.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,잠원동,20대가 많이 거주하는 잠원동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’잠원동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,방배본동,20대가 많이 거주하는 방배본동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’방배본동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
21,20대가 많이 거주하는 [mask_1]은?,emd_name,방배3동,20대가 많이 거주하는 방배3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].pop_ratio_20s DESC,emd_name,MATCH (n:’방배3동’) RETURN n.name ORDER BY n.pop_ratio_20s DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,양재1동,교통사고가 많이 나는 양재1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’양재1동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,반포3동,교통사고가 많이 나는 반포3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’반포3동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,방배3동,교통사고가 많이 나는 방배3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (k:’방배3동’) RETURN k.name ORDER BY k.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,양재1동,교통사고가 많이 나는 양재1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’양재1동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,서초4동,교통사고가 많이 나는 서초4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’서초4동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,반포본동,교통사고가 많이 나는 반포본동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’반포본동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,서초3동,교통사고가 많이 나는 서초3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (k:’서초3동’) RETURN k.name ORDER BY k.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,서초2동,교통사고가 많이 나는 서초2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (k:’서초2동’) RETURN k.name ORDER BY k.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,반포본동,교통사고가 많이 나는 반포본동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’반포본동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,내곡동,교통사고가 많이 나는 내곡동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’내곡동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,서초3동,교통사고가 많이 나는 서초3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’서초3동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,방배1동,교통사고가 많이 나는 방배1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’방배1동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,방배1동,교통사고가 많이 나는 방배1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (k:’방배1동’) RETURN k.name ORDER BY k.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,서초2동,교통사고가 많이 나는 서초2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’서초2동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,방배3동,교통사고가 많이 나는 방배3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (k:’방배3동’) RETURN k.name ORDER BY k.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,잠원동,교통사고가 많이 나는 잠원동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’잠원동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,양재1동,교통사고가 많이 나는 양재1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (k:’양재1동’) RETURN k.name ORDER BY k.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,반포4동,교통사고가 많이 나는 반포4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’반포4동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,서초3동,교통사고가 많이 나는 서초3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (k:’서초3동’) RETURN k.name ORDER BY k.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,반포1동,교통사고가 많이 나는 반포1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’반포1동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,서초2동,교통사고가 많이 나는 서초2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’서초2동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,반포3동,교통사고가 많이 나는 반포3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’반포3동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,내곡동,교통사고가 많이 나는 내곡동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (k:’내곡동’) RETURN k.name ORDER BY k.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,양재2동,교통사고가 많이 나는 양재2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (k:’양재2동’) RETURN k.name ORDER BY k.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,양재2동,교통사고가 많이 나는 양재2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’양재2동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,양재2동,교통사고가 많이 나는 양재2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’양재2동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,방배본동,교통사고가 많이 나는 방배본동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’방배본동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,방배2동,교통사고가 많이 나는 방배2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’방배2동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,서초4동,교통사고가 많이 나는 서초4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’서초4동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,방배4동,교통사고가 많이 나는 방배4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’방배4동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,방배1동,교통사고가 많이 나는 방배1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’방배1동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,방배본동,교통사고가 많이 나는 방배본동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’방배본동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,방배2동,교통사고가 많이 나는 방배2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’방배2동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,방배1동,교통사고가 많이 나는 방배1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’방배1동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,잠원동,교통사고가 많이 나는 잠원동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’잠원동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,서초1동,교통사고가 많이 나는 서초1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’서초1동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,방배4동,교통사고가 많이 나는 방배4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (k:’방배4동’) RETURN k.name ORDER BY k.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,방배2동,교통사고가 많이 나는 방배2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (k:’방배2동’) RETURN k.name ORDER BY k.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,방배2동,교통사고가 많이 나는 방배2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (k:’방배2동’) RETURN k.name ORDER BY k.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,서초4동,교통사고가 많이 나는 서초4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’서초4동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,잠원동,교통사고가 많이 나는 잠원동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (k:’잠원동’) RETURN k.name ORDER BY k.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,방배4동,교통사고가 많이 나는 방배4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’방배4동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,양재1동,교통사고가 많이 나는 양재1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’양재1동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,서초4동,교통사고가 많이 나는 서초4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (k:’서초4동’) RETURN k.name ORDER BY k.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,반포2동,교통사고가 많이 나는 반포2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’반포2동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,양재2동,교통사고가 많이 나는 양재2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’양재2동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,양재1동,교통사고가 많이 나는 양재1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (k:’양재1동’) RETURN k.name ORDER BY k.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,방배3동,교통사고가 많이 나는 방배3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’방배3동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,서초4동,교통사고가 많이 나는 서초4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’서초4동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,방배3동,교통사고가 많이 나는 방배3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (k:’방배3동’) RETURN k.name ORDER BY k.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,반포2동,교통사고가 많이 나는 반포2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’반포2동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,방배2동,교통사고가 많이 나는 방배2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’방배2동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,반포3동,교통사고가 많이 나는 반포3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’반포3동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,잠원동,교통사고가 많이 나는 잠원동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (k:’잠원동’) RETURN k.name ORDER BY k.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,반포1동,교통사고가 많이 나는 반포1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (k:’반포1동’) RETURN k.name ORDER BY k.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,방배3동,교통사고가 많이 나는 방배3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’방배3동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,내곡동,교통사고가 많이 나는 내곡동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’내곡동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,잠원동,교통사고가 많이 나는 잠원동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (k:’잠원동’) RETURN k.name ORDER BY k.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,서초3동,교통사고가 많이 나는 서초3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’서초3동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,반포4동,교통사고가 많이 나는 반포4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’반포4동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,방배본동,교통사고가 많이 나는 방배본동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (k:’방배본동’) RETURN k.name ORDER BY k.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,방배3동,교통사고가 많이 나는 방배3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’방배3동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,방배본동,교통사고가 많이 나는 방배본동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’방배본동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,반포4동,교통사고가 많이 나는 반포4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (k:’반포4동’) RETURN k.name ORDER BY k.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,서초4동,교통사고가 많이 나는 서초4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’서초4동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,반포4동,교통사고가 많이 나는 반포4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (k:’반포4동’) RETURN k.name ORDER BY k.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,내곡동,교통사고가 많이 나는 내곡동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’내곡동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,양재1동,교통사고가 많이 나는 양재1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (k:’양재1동’) RETURN k.name ORDER BY k.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,반포2동,교통사고가 많이 나는 반포2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’반포2동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,서초2동,교통사고가 많이 나는 서초2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (k:’서초2동’) RETURN k.name ORDER BY k.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,서초1동,교통사고가 많이 나는 서초1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (k:’서초1동’) RETURN k.name ORDER BY k.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,서초3동,교통사고가 많이 나는 서초3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’서초3동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,방배2동,교통사고가 많이 나는 방배2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’방배2동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,양재1동,교통사고가 많이 나는 양재1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’양재1동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,반포1동,교통사고가 많이 나는 반포1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’반포1동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,서초1동,교통사고가 많이 나는 서초1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’서초1동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,반포본동,교통사고가 많이 나는 반포본동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’반포본동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,방배4동,교통사고가 많이 나는 방배4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’방배4동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,잠원동,교통사고가 많이 나는 잠원동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’잠원동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,방배본동,교통사고가 많이 나는 방배본동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’방배본동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,방배3동,교통사고가 많이 나는 방배3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’방배3동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,서초1동,교통사고가 많이 나는 서초1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’서초1동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,방배본동,교통사고가 많이 나는 방배본동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’방배본동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,반포2동,교통사고가 많이 나는 반포2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’반포2동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,반포1동,교통사고가 많이 나는 반포1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’반포1동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,반포4동,교통사고가 많이 나는 반포4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’반포4동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,서초1동,교통사고가 많이 나는 서초1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’서초1동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,반포1동,교통사고가 많이 나는 반포1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (k:’반포1동’) RETURN k.name ORDER BY k.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,반포2동,교통사고가 많이 나는 반포2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’반포2동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,반포4동,교통사고가 많이 나는 반포4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’반포4동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,서초2동,교통사고가 많이 나는 서초2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’서초2동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,방배1동,교통사고가 많이 나는 방배1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’방배1동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,반포2동,교통사고가 많이 나는 반포2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (k:’반포2동’) RETURN k.name ORDER BY k.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,반포4동,교통사고가 많이 나는 반포4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’반포4동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,방배본동,교통사고가 많이 나는 방배본동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (k:’방배본동’) RETURN k.name ORDER BY k.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,서초3동,교통사고가 많이 나는 서초3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’서초3동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,방배본동,교통사고가 많이 나는 방배본동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’방배본동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,방배2동,교통사고가 많이 나는 방배2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’방배2동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,서초2동,교통사고가 많이 나는 서초2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (k:’서초2동’) RETURN k.name ORDER BY k.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,양재1동,교통사고가 많이 나는 양재1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (k:’양재1동’) RETURN k.name ORDER BY k.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,서초3동,교통사고가 많이 나는 서초3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’서초3동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,반포1동,교통사고가 많이 나는 반포1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’반포1동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,양재1동,교통사고가 많이 나는 양재1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’양재1동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,반포1동,교통사고가 많이 나는 반포1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’반포1동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,방배4동,교통사고가 많이 나는 방배4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’방배4동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,서초3동,교통사고가 많이 나는 서초3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (k:’서초3동’) RETURN k.name ORDER BY k.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,방배3동,교통사고가 많이 나는 방배3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (k:’방배3동’) RETURN k.name ORDER BY k.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,잠원동,교통사고가 많이 나는 잠원동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (k:’잠원동’) RETURN k.name ORDER BY k.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,서초4동,교통사고가 많이 나는 서초4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (k:’서초4동’) RETURN k.name ORDER BY k.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,방배3동,교통사고가 많이 나는 방배3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (k:’방배3동’) RETURN k.name ORDER BY k.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,잠원동,교통사고가 많이 나는 잠원동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’잠원동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,양재2동,교통사고가 많이 나는 양재2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’양재2동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,방배1동,교통사고가 많이 나는 방배1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (k:’방배1동’) RETURN k.name ORDER BY k.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,내곡동,교통사고가 많이 나는 내곡동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’내곡동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,방배4동,교통사고가 많이 나는 방배4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (k:’방배4동’) RETURN k.name ORDER BY k.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,잠원동,교통사고가 많이 나는 잠원동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’잠원동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,방배본동,교통사고가 많이 나는 방배본동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’방배본동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,반포1동,교통사고가 많이 나는 반포1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (k:’반포1동’) RETURN k.name ORDER BY k.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,서초2동,교통사고가 많이 나는 서초2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’서초2동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,서초1동,교통사고가 많이 나는 서초1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (k:’서초1동’) RETURN k.name ORDER BY k.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,양재2동,교통사고가 많이 나는 양재2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’양재2동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,양재1동,교통사고가 많이 나는 양재1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (k:’양재1동’) RETURN k.name ORDER BY k.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,반포본동,교통사고가 많이 나는 반포본동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’반포본동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,서초1동,교통사고가 많이 나는 서초1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’서초1동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,서초2동,교통사고가 많이 나는 서초2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’서초2동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,반포본동,교통사고가 많이 나는 반포본동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’반포본동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,반포1동,교통사고가 많이 나는 반포1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’반포1동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,방배본동,교통사고가 많이 나는 방배본동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’방배본동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,반포본동,교통사고가 많이 나는 반포본동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’반포본동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,방배2동,교통사고가 많이 나는 방배2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’방배2동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,내곡동,교통사고가 많이 나는 내곡동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (k:’내곡동’) RETURN k.name ORDER BY k.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,양재1동,교통사고가 많이 나는 양재1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (k:’양재1동’) RETURN k.name ORDER BY k.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,방배4동,교통사고가 많이 나는 방배4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’방배4동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,서초1동,교통사고가 많이 나는 서초1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (k:’서초1동’) RETURN k.name ORDER BY k.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,방배본동,교통사고가 많이 나는 방배본동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’방배본동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,방배1동,교통사고가 많이 나는 방배1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (k:’방배1동’) RETURN k.name ORDER BY k.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,서초1동,교통사고가 많이 나는 서초1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’서초1동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,서초4동,교통사고가 많이 나는 서초4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (k:’서초4동’) RETURN k.name ORDER BY k.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,서초1동,교통사고가 많이 나는 서초1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’서초1동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,반포1동,교통사고가 많이 나는 반포1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’반포1동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,반포2동,교통사고가 많이 나는 반포2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’반포2동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,방배1동,교통사고가 많이 나는 방배1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (k:’방배1동’) RETURN k.name ORDER BY k.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,양재1동,교통사고가 많이 나는 양재1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’양재1동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,잠원동,교통사고가 많이 나는 잠원동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’잠원동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,반포3동,교통사고가 많이 나는 반포3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’반포3동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,서초2동,교통사고가 많이 나는 서초2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (k:’서초2동’) RETURN k.name ORDER BY k.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,서초4동,교통사고가 많이 나는 서초4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (k:’서초4동’) RETURN k.name ORDER BY k.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,반포4동,교통사고가 많이 나는 반포4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (k:’반포4동’) RETURN k.name ORDER BY k.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,방배2동,교통사고가 많이 나는 방배2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’방배2동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,반포2동,교통사고가 많이 나는 반포2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’반포2동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,양재2동,교통사고가 많이 나는 양재2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’양재2동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,반포3동,교통사고가 많이 나는 반포3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’반포3동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,방배3동,교통사고가 많이 나는 방배3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’방배3동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,서초1동,교통사고가 많이 나는 서초1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’서초1동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,방배2동,교통사고가 많이 나는 방배2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (k:’방배2동’) RETURN k.name ORDER BY k.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,양재2동,교통사고가 많이 나는 양재2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’양재2동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,잠원동,교통사고가 많이 나는 잠원동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (k:’잠원동’) RETURN k.name ORDER BY k.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,서초4동,교통사고가 많이 나는 서초4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’서초4동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,내곡동,교통사고가 많이 나는 내곡동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (k:’내곡동’) RETURN k.name ORDER BY k.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,반포2동,교통사고가 많이 나는 반포2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’반포2동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,방배2동,교통사고가 많이 나는 방배2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’방배2동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,반포2동,교통사고가 많이 나는 반포2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’반포2동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,서초4동,교통사고가 많이 나는 서초4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’서초4동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,서초3동,교통사고가 많이 나는 서초3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (k:’서초3동’) RETURN k.name ORDER BY k.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,방배본동,교통사고가 많이 나는 방배본동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (k:’방배본동’) RETURN k.name ORDER BY k.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,방배1동,교통사고가 많이 나는 방배1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’방배1동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,양재1동,교통사고가 많이 나는 양재1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (k:’양재1동’) RETURN k.name ORDER BY k.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,방배3동,교통사고가 많이 나는 방배3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’방배3동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,서초2동,교통사고가 많이 나는 서초2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’서초2동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,방배3동,교통사고가 많이 나는 방배3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’방배3동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,반포본동,교통사고가 많이 나는 반포본동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (k:’반포본동’) RETURN k.name ORDER BY k.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,서초1동,교통사고가 많이 나는 서초1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’서초1동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,양재1동,교통사고가 많이 나는 양재1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’양재1동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,양재1동,교통사고가 많이 나는 양재1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (k:’양재1동’) RETURN k.name ORDER BY k.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,서초2동,교통사고가 많이 나는 서초2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’서초2동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,반포1동,교통사고가 많이 나는 반포1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (k:’반포1동’) RETURN k.name ORDER BY k.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,방배1동,교통사고가 많이 나는 방배1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’방배1동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,방배4동,교통사고가 많이 나는 방배4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’방배4동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,방배2동,교통사고가 많이 나는 방배2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’방배2동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,방배2동,교통사고가 많이 나는 방배2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’방배2동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,반포4동,교통사고가 많이 나는 반포4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’반포4동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,양재2동,교통사고가 많이 나는 양재2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (k:’양재2동’) RETURN k.name ORDER BY k.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,서초4동,교통사고가 많이 나는 서초4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’서초4동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,서초2동,교통사고가 많이 나는 서초2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’서초2동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,양재2동,교통사고가 많이 나는 양재2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (k:’양재2동’) RETURN k.name ORDER BY k.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,서초3동,교통사고가 많이 나는 서초3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’서초3동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,잠원동,교통사고가 많이 나는 잠원동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (k:’잠원동’) RETURN k.name ORDER BY k.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,반포1동,교통사고가 많이 나는 반포1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’반포1동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,방배2동,교통사고가 많이 나는 방배2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’방배2동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,반포본동,교통사고가 많이 나는 반포본동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (k:’반포본동’) RETURN k.name ORDER BY k.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,반포1동,교통사고가 많이 나는 반포1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’반포1동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,반포본동,교통사고가 많이 나는 반포본동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’반포본동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,반포4동,교통사고가 많이 나는 반포4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’반포4동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,방배1동,교통사고가 많이 나는 방배1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’방배1동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,잠원동,교통사고가 많이 나는 잠원동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’잠원동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,서초2동,교통사고가 많이 나는 서초2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (k:’서초2동’) RETURN k.name ORDER BY k.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,내곡동,교통사고가 많이 나는 내곡동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’내곡동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,양재2동,교통사고가 많이 나는 양재2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (k:’양재2동’) RETURN k.name ORDER BY k.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,방배1동,교통사고가 많이 나는 방배1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (k:’방배1동’) RETURN k.name ORDER BY k.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,방배1동,교통사고가 많이 나는 방배1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’방배1동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,반포본동,교통사고가 많이 나는 반포본동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (k:’반포본동’) RETURN k.name ORDER BY k.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,서초2동,교통사고가 많이 나는 서초2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (k:’서초2동’) RETURN k.name ORDER BY k.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,반포1동,교통사고가 많이 나는 반포1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’반포1동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,반포4동,교통사고가 많이 나는 반포4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’반포4동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,방배1동,교통사고가 많이 나는 방배1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (k:’방배1동’) RETURN k.name ORDER BY k.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,방배2동,교통사고가 많이 나는 방배2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (k:’방배2동’) RETURN k.name ORDER BY k.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,방배3동,교통사고가 많이 나는 방배3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’방배3동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,방배4동,교통사고가 많이 나는 방배4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’방배4동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,방배4동,교통사고가 많이 나는 방배4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’방배4동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,방배3동,교통사고가 많이 나는 방배3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (k:’방배3동’) RETURN k.name ORDER BY k.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,반포본동,교통사고가 많이 나는 반포본동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’반포본동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,방배2동,교통사고가 많이 나는 방배2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’방배2동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,방배4동,교통사고가 많이 나는 방배4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (k:’방배4동’) RETURN k.name ORDER BY k.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,서초4동,교통사고가 많이 나는 서초4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (k:’서초4동’) RETURN k.name ORDER BY k.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,잠원동,교통사고가 많이 나는 잠원동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’잠원동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,서초4동,교통사고가 많이 나는 서초4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’서초4동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,반포4동,교통사고가 많이 나는 반포4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (k:’반포4동’) RETURN k.name ORDER BY k.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,반포4동,교통사고가 많이 나는 반포4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’반포4동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,양재1동,교통사고가 많이 나는 양재1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’양재1동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,내곡동,교통사고가 많이 나는 내곡동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’내곡동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,방배본동,교통사고가 많이 나는 방배본동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (k:’방배본동’) RETURN k.name ORDER BY k.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,잠원동,교통사고가 많이 나는 잠원동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (k:’잠원동’) RETURN k.name ORDER BY k.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,방배2동,교통사고가 많이 나는 방배2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’방배2동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,반포1동,교통사고가 많이 나는 반포1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’반포1동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,반포4동,교통사고가 많이 나는 반포4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’반포4동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,서초1동,교통사고가 많이 나는 서초1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’서초1동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,양재1동,교통사고가 많이 나는 양재1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (k:’양재1동’) RETURN k.name ORDER BY k.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,반포2동,교통사고가 많이 나는 반포2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’반포2동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,방배2동,교통사고가 많이 나는 방배2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (k:’방배2동’) RETURN k.name ORDER BY k.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,방배본동,교통사고가 많이 나는 방배본동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’방배본동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,잠원동,교통사고가 많이 나는 잠원동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (k:’잠원동’) RETURN k.name ORDER BY k.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,방배2동,교통사고가 많이 나는 방배2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’방배2동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,서초4동,교통사고가 많이 나는 서초4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’서초4동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,반포1동,교통사고가 많이 나는 반포1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’반포1동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,반포본동,교통사고가 많이 나는 반포본동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (k:’반포본동’) RETURN k.name ORDER BY k.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,방배3동,교통사고가 많이 나는 방배3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’방배3동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,서초4동,교통사고가 많이 나는 서초4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (k:’서초4동’) RETURN k.name ORDER BY k.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,방배1동,교통사고가 많이 나는 방배1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (k:’방배1동’) RETURN k.name ORDER BY k.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,반포2동,교통사고가 많이 나는 반포2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (k:’반포2동’) RETURN k.name ORDER BY k.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,내곡동,교통사고가 많이 나는 내곡동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’내곡동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,방배본동,교통사고가 많이 나는 방배본동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’방배본동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,양재1동,교통사고가 많이 나는 양재1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (k:’양재1동’) RETURN k.name ORDER BY k.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,반포3동,교통사고가 많이 나는 반포3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’반포3동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,방배1동,교통사고가 많이 나는 방배1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’방배1동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,방배본동,교통사고가 많이 나는 방배본동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’방배본동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,방배본동,교통사고가 많이 나는 방배본동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’방배본동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,잠원동,교통사고가 많이 나는 잠원동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’잠원동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,반포2동,교통사고가 많이 나는 반포2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (k:’반포2동’) RETURN k.name ORDER BY k.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,잠원동,교통사고가 많이 나는 잠원동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (k:’잠원동’) RETURN k.name ORDER BY k.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,방배1동,교통사고가 많이 나는 방배1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (k:’방배1동’) RETURN k.name ORDER BY k.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,반포본동,교통사고가 많이 나는 반포본동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (k:’반포본동’) RETURN k.name ORDER BY k.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,반포3동,교통사고가 많이 나는 반포3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’반포3동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,양재1동,교통사고가 많이 나는 양재1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (k:’양재1동’) RETURN k.name ORDER BY k.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,반포3동,교통사고가 많이 나는 반포3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’반포3동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,반포2동,교통사고가 많이 나는 반포2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’반포2동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,반포4동,교통사고가 많이 나는 반포4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’반포4동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,잠원동,교통사고가 많이 나는 잠원동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’잠원동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,반포3동,교통사고가 많이 나는 반포3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’반포3동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,서초1동,교통사고가 많이 나는 서초1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’서초1동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,서초2동,교통사고가 많이 나는 서초2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’서초2동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,서초3동,교통사고가 많이 나는 서초3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (k:’서초3동’) RETURN k.name ORDER BY k.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,방배본동,교통사고가 많이 나는 방배본동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (k:’방배본동’) RETURN k.name ORDER BY k.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,서초3동,교통사고가 많이 나는 서초3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’서초3동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,방배2동,교통사고가 많이 나는 방배2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (k:’방배2동’) RETURN k.name ORDER BY k.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,내곡동,교통사고가 많이 나는 내곡동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’내곡동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,반포본동,교통사고가 많이 나는 반포본동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (k:’반포본동’) RETURN k.name ORDER BY k.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,방배1동,교통사고가 많이 나는 방배1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (k:’방배1동’) RETURN k.name ORDER BY k.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,잠원동,교통사고가 많이 나는 잠원동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’잠원동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,서초3동,교통사고가 많이 나는 서초3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’서초3동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,방배3동,교통사고가 많이 나는 방배3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’방배3동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,양재1동,교통사고가 많이 나는 양재1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’양재1동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,반포본동,교통사고가 많이 나는 반포본동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’반포본동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,반포1동,교통사고가 많이 나는 반포1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’반포1동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,서초1동,교통사고가 많이 나는 서초1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’서초1동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,방배1동,교통사고가 많이 나는 방배1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (k:’방배1동’) RETURN k.name ORDER BY k.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,잠원동,교통사고가 많이 나는 잠원동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’잠원동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,양재1동,교통사고가 많이 나는 양재1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’양재1동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,양재2동,교통사고가 많이 나는 양재2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’양재2동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,방배3동,교통사고가 많이 나는 방배3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’방배3동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,서초3동,교통사고가 많이 나는 서초3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’서초3동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,방배2동,교통사고가 많이 나는 방배2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’방배2동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,잠원동,교통사고가 많이 나는 잠원동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (k:’잠원동’) RETURN k.name ORDER BY k.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,반포2동,교통사고가 많이 나는 반포2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’반포2동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,양재1동,교통사고가 많이 나는 양재1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (k:’양재1동’) RETURN k.name ORDER BY k.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,방배4동,교통사고가 많이 나는 방배4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’방배4동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,반포3동,교통사고가 많이 나는 반포3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’반포3동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,반포1동,교통사고가 많이 나는 반포1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’반포1동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,방배2동,교통사고가 많이 나는 방배2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’방배2동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,반포4동,교통사고가 많이 나는 반포4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’반포4동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,반포1동,교통사고가 많이 나는 반포1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (k:’반포1동’) RETURN k.name ORDER BY k.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,방배4동,교통사고가 많이 나는 방배4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’방배4동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,잠원동,교통사고가 많이 나는 잠원동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’잠원동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,반포본동,교통사고가 많이 나는 반포본동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (k:’반포본동’) RETURN k.name ORDER BY k.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,방배3동,교통사고가 많이 나는 방배3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (k:’방배3동’) RETURN k.name ORDER BY k.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,양재1동,교통사고가 많이 나는 양재1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (k:’양재1동’) RETURN k.name ORDER BY k.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,잠원동,교통사고가 많이 나는 잠원동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (k:’잠원동’) RETURN k.name ORDER BY k.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,방배3동,교통사고가 많이 나는 방배3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’방배3동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,방배3동,교통사고가 많이 나는 방배3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’방배3동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,방배본동,교통사고가 많이 나는 방배본동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (n:’방배본동’) RETURN n.name ORDER BY n.traffic_accident_ratio DESC,1,1
22,교통사고가 많이 나는 [mask_1]은?,emd_name,서초1동,교통사고가 많이 나는 서초1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].traffic_accident_ratio DESC,emd_name,MATCH (k:’서초1동’) RETURN k.name ORDER BY k.traffic_accident_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,방배본동,범죄율이 높은 방배본동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (k:’방배본동’) RETURN k.name ORDER BY k.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,방배본동,범죄율이 높은 방배본동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’방배본동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,방배4동,범죄율이 높은 방배4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’방배4동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,방배3동,범죄율이 높은 방배3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (k:’방배3동’) RETURN k.name ORDER BY k.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,반포1동,범죄율이 높은 반포1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’반포1동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,서초4동,범죄율이 높은 서초4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (k:’서초4동’) RETURN k.name ORDER BY k.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,서초1동,범죄율이 높은 서초1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’서초1동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,반포3동,범죄율이 높은 반포3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’반포3동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,반포1동,범죄율이 높은 반포1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (k:’반포1동’) RETURN k.name ORDER BY k.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,서초1동,범죄율이 높은 서초1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (k:’서초1동’) RETURN k.name ORDER BY k.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,반포본동,범죄율이 높은 반포본동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’반포본동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,서초1동,범죄율이 높은 서초1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’서초1동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,방배4동,범죄율이 높은 방배4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (k:’방배4동’) RETURN k.name ORDER BY k.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,방배4동,범죄율이 높은 방배4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’방배4동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,반포3동,범죄율이 높은 반포3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’반포3동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,방배1동,범죄율이 높은 방배1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’방배1동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,반포2동,범죄율이 높은 반포2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’반포2동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,서초3동,범죄율이 높은 서초3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’서초3동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,양재2동,범죄율이 높은 양재2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’양재2동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,반포2동,범죄율이 높은 반포2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’반포2동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,반포본동,범죄율이 높은 반포본동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’반포본동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,방배1동,범죄율이 높은 방배1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (k:’방배1동’) RETURN k.name ORDER BY k.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,서초2동,범죄율이 높은 서초2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (k:’서초2동’) RETURN k.name ORDER BY k.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,방배본동,범죄율이 높은 방배본동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’방배본동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,반포4동,범죄율이 높은 반포4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (k:’반포4동’) RETURN k.name ORDER BY k.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,양재2동,범죄율이 높은 양재2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (k:’양재2동’) RETURN k.name ORDER BY k.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,서초2동,범죄율이 높은 서초2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (k:’서초2동’) RETURN k.name ORDER BY k.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,방배4동,범죄율이 높은 방배4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’방배4동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,반포1동,범죄율이 높은 반포1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’반포1동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,반포4동,범죄율이 높은 반포4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (k:’반포4동’) RETURN k.name ORDER BY k.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,반포4동,범죄율이 높은 반포4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (k:’반포4동’) RETURN k.name ORDER BY k.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,서초3동,범죄율이 높은 서초3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (k:’서초3동’) RETURN k.name ORDER BY k.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,반포3동,범죄율이 높은 반포3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’반포3동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,서초2동,범죄율이 높은 서초2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’서초2동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,반포2동,범죄율이 높은 반포2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’반포2동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,방배3동,범죄율이 높은 방배3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’방배3동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,반포1동,범죄율이 높은 반포1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’반포1동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,서초4동,범죄율이 높은 서초4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (k:’서초4동’) RETURN k.name ORDER BY k.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,방배1동,범죄율이 높은 방배1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’방배1동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,서초3동,범죄율이 높은 서초3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (k:’서초3동’) RETURN k.name ORDER BY k.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,반포1동,범죄율이 높은 반포1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (k:’반포1동’) RETURN k.name ORDER BY k.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,방배1동,범죄율이 높은 방배1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (k:’방배1동’) RETURN k.name ORDER BY k.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,서초1동,범죄율이 높은 서초1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’서초1동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,방배3동,범죄율이 높은 방배3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’방배3동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,반포3동,범죄율이 높은 반포3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’반포3동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,반포3동,범죄율이 높은 반포3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’반포3동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,반포3동,범죄율이 높은 반포3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (k:’반포3동’) RETURN k.name ORDER BY k.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,반포1동,범죄율이 높은 반포1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’반포1동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,방배2동,범죄율이 높은 방배2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’방배2동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,잠원동,범죄율이 높은 잠원동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’잠원동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,반포3동,범죄율이 높은 반포3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’반포3동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,내곡동,범죄율이 높은 내곡동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’내곡동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,서초4동,범죄율이 높은 서초4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (k:’서초4동’) RETURN k.name ORDER BY k.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,방배1동,범죄율이 높은 방배1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’방배1동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,방배본동,범죄율이 높은 방배본동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’방배본동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,반포2동,범죄율이 높은 반포2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’반포2동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,방배3동,범죄율이 높은 방배3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’방배3동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,잠원동,범죄율이 높은 잠원동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’잠원동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,반포2동,범죄율이 높은 반포2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’반포2동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,반포4동,범죄율이 높은 반포4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’반포4동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,방배3동,범죄율이 높은 방배3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (k:’방배3동’) RETURN k.name ORDER BY k.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,반포본동,범죄율이 높은 반포본동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’반포본동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,방배2동,범죄율이 높은 방배2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’방배2동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,방배본동,범죄율이 높은 방배본동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (k:’방배본동’) RETURN k.name ORDER BY k.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,서초3동,범죄율이 높은 서초3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (k:’서초3동’) RETURN k.name ORDER BY k.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,방배1동,범죄율이 높은 방배1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’방배1동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,방배본동,범죄율이 높은 방배본동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’방배본동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,방배1동,범죄율이 높은 방배1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (k:’방배1동’) RETURN k.name ORDER BY k.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,서초1동,범죄율이 높은 서초1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (k:’서초1동’) RETURN k.name ORDER BY k.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,방배2동,범죄율이 높은 방배2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’방배2동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,방배4동,범죄율이 높은 방배4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’방배4동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,양재1동,범죄율이 높은 양재1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’양재1동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,양재2동,범죄율이 높은 양재2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’양재2동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,양재2동,범죄율이 높은 양재2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’양재2동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,반포본동,범죄율이 높은 반포본동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (k:’반포본동’) RETURN k.name ORDER BY k.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,반포4동,범죄율이 높은 반포4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’반포4동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,서초2동,범죄율이 높은 서초2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (k:’서초2동’) RETURN k.name ORDER BY k.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,반포본동,범죄율이 높은 반포본동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’반포본동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,서초1동,범죄율이 높은 서초1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’서초1동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,내곡동,범죄율이 높은 내곡동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’내곡동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,방배4동,범죄율이 높은 방배4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’방배4동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,방배2동,범죄율이 높은 방배2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’방배2동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,서초2동,범죄율이 높은 서초2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (k:’서초2동’) RETURN k.name ORDER BY k.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,반포4동,범죄율이 높은 반포4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’반포4동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,내곡동,범죄율이 높은 내곡동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’내곡동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,반포3동,범죄율이 높은 반포3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’반포3동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,서초1동,범죄율이 높은 서초1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’서초1동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,방배2동,범죄율이 높은 방배2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’방배2동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,서초2동,범죄율이 높은 서초2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’서초2동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,방배4동,범죄율이 높은 방배4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (k:’방배4동’) RETURN k.name ORDER BY k.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,내곡동,범죄율이 높은 내곡동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (k:’내곡동’) RETURN k.name ORDER BY k.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,서초1동,범죄율이 높은 서초1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’서초1동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,서초3동,범죄율이 높은 서초3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (k:’서초3동’) RETURN k.name ORDER BY k.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,방배2동,범죄율이 높은 방배2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’방배2동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,서초1동,범죄율이 높은 서초1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (k:’서초1동’) RETURN k.name ORDER BY k.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,서초4동,범죄율이 높은 서초4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’서초4동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,서초1동,범죄율이 높은 서초1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’서초1동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,방배3동,범죄율이 높은 방배3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’방배3동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,반포본동,범죄율이 높은 반포본동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (k:’반포본동’) RETURN k.name ORDER BY k.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,서초2동,범죄율이 높은 서초2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’서초2동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,방배3동,범죄율이 높은 방배3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (k:’방배3동’) RETURN k.name ORDER BY k.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,서초3동,범죄율이 높은 서초3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’서초3동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,서초2동,범죄율이 높은 서초2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’서초2동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,방배3동,범죄율이 높은 방배3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (k:’방배3동’) RETURN k.name ORDER BY k.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,서초2동,범죄율이 높은 서초2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’서초2동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,서초1동,범죄율이 높은 서초1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’서초1동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,내곡동,범죄율이 높은 내곡동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (k:’내곡동’) RETURN k.name ORDER BY k.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,방배본동,범죄율이 높은 방배본동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (k:’방배본동’) RETURN k.name ORDER BY k.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,반포2동,범죄율이 높은 반포2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (k:’반포2동’) RETURN k.name ORDER BY k.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,내곡동,범죄율이 높은 내곡동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’내곡동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,반포본동,범죄율이 높은 반포본동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’반포본동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,서초3동,범죄율이 높은 서초3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’서초3동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,방배본동,범죄율이 높은 방배본동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’방배본동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,방배4동,범죄율이 높은 방배4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (k:’방배4동’) RETURN k.name ORDER BY k.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,서초4동,범죄율이 높은 서초4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’서초4동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,방배3동,범죄율이 높은 방배3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’방배3동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,내곡동,범죄율이 높은 내곡동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (k:’내곡동’) RETURN k.name ORDER BY k.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,서초2동,범죄율이 높은 서초2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’서초2동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,반포2동,범죄율이 높은 반포2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’반포2동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,방배3동,범죄율이 높은 방배3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’방배3동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,반포3동,범죄율이 높은 반포3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (k:’반포3동’) RETURN k.name ORDER BY k.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,양재1동,범죄율이 높은 양재1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’양재1동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,서초2동,범죄율이 높은 서초2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’서초2동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,방배1동,범죄율이 높은 방배1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’방배1동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,서초2동,범죄율이 높은 서초2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’서초2동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,반포4동,범죄율이 높은 반포4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’반포4동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,양재2동,범죄율이 높은 양재2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’양재2동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,내곡동,범죄율이 높은 내곡동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’내곡동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,방배4동,범죄율이 높은 방배4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’방배4동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,방배4동,범죄율이 높은 방배4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (k:’방배4동’) RETURN k.name ORDER BY k.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,서초1동,범죄율이 높은 서초1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (k:’서초1동’) RETURN k.name ORDER BY k.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,방배2동,범죄율이 높은 방배2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (k:’방배2동’) RETURN k.name ORDER BY k.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,방배2동,범죄율이 높은 방배2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’방배2동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,내곡동,범죄율이 높은 내곡동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (k:’내곡동’) RETURN k.name ORDER BY k.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,방배3동,범죄율이 높은 방배3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’방배3동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,방배1동,범죄율이 높은 방배1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’방배1동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,방배3동,범죄율이 높은 방배3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’방배3동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,서초1동,범죄율이 높은 서초1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (k:’서초1동’) RETURN k.name ORDER BY k.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,반포1동,범죄율이 높은 반포1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’반포1동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,반포4동,범죄율이 높은 반포4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (k:’반포4동’) RETURN k.name ORDER BY k.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,서초1동,범죄율이 높은 서초1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’서초1동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,반포3동,범죄율이 높은 반포3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (k:’반포3동’) RETURN k.name ORDER BY k.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,방배4동,범죄율이 높은 방배4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’방배4동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,방배3동,범죄율이 높은 방배3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’방배3동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,반포1동,범죄율이 높은 반포1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’반포1동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,방배3동,범죄율이 높은 방배3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’방배3동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,내곡동,범죄율이 높은 내곡동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’내곡동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,방배3동,범죄율이 높은 방배3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’방배3동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,방배4동,범죄율이 높은 방배4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (k:’방배4동’) RETURN k.name ORDER BY k.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,방배2동,범죄율이 높은 방배2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’방배2동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,방배2동,범죄율이 높은 방배2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’방배2동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,서초2동,범죄율이 높은 서초2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’서초2동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,양재1동,범죄율이 높은 양재1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (k:’양재1동’) RETURN k.name ORDER BY k.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,양재1동,범죄율이 높은 양재1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’양재1동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,방배1동,범죄율이 높은 방배1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’방배1동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,양재1동,범죄율이 높은 양재1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’양재1동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,방배3동,범죄율이 높은 방배3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’방배3동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,양재2동,범죄율이 높은 양재2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’양재2동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,반포4동,범죄율이 높은 반포4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’반포4동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,서초4동,범죄율이 높은 서초4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (k:’서초4동’) RETURN k.name ORDER BY k.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,내곡동,범죄율이 높은 내곡동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (k:’내곡동’) RETURN k.name ORDER BY k.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,방배4동,범죄율이 높은 방배4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (k:’방배4동’) RETURN k.name ORDER BY k.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,내곡동,범죄율이 높은 내곡동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’내곡동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,잠원동,범죄율이 높은 잠원동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’잠원동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,양재1동,범죄율이 높은 양재1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’양재1동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,반포2동,범죄율이 높은 반포2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’반포2동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,반포1동,범죄율이 높은 반포1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’반포1동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,방배3동,범죄율이 높은 방배3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’방배3동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,반포2동,범죄율이 높은 반포2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (k:’반포2동’) RETURN k.name ORDER BY k.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,서초3동,범죄율이 높은 서초3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’서초3동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,서초2동,범죄율이 높은 서초2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’서초2동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,방배4동,범죄율이 높은 방배4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (k:’방배4동’) RETURN k.name ORDER BY k.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,방배본동,범죄율이 높은 방배본동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’방배본동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,방배1동,범죄율이 높은 방배1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (k:’방배1동’) RETURN k.name ORDER BY k.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,방배2동,범죄율이 높은 방배2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (k:’방배2동’) RETURN k.name ORDER BY k.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,반포1동,범죄율이 높은 반포1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’반포1동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,반포본동,범죄율이 높은 반포본동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’반포본동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,잠원동,범죄율이 높은 잠원동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’잠원동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,서초1동,범죄율이 높은 서초1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’서초1동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,잠원동,범죄율이 높은 잠원동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’잠원동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,방배4동,범죄율이 높은 방배4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’방배4동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,반포4동,범죄율이 높은 반포4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’반포4동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,반포2동,범죄율이 높은 반포2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’반포2동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,반포3동,범죄율이 높은 반포3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’반포3동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,내곡동,범죄율이 높은 내곡동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’내곡동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,방배본동,범죄율이 높은 방배본동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (k:’방배본동’) RETURN k.name ORDER BY k.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,내곡동,범죄율이 높은 내곡동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (k:’내곡동’) RETURN k.name ORDER BY k.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,양재2동,범죄율이 높은 양재2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (k:’양재2동’) RETURN k.name ORDER BY k.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,반포1동,범죄율이 높은 반포1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’반포1동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,반포본동,범죄율이 높은 반포본동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’반포본동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,내곡동,범죄율이 높은 내곡동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (k:’내곡동’) RETURN k.name ORDER BY k.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,내곡동,범죄율이 높은 내곡동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (k:’내곡동’) RETURN k.name ORDER BY k.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,방배2동,범죄율이 높은 방배2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’방배2동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,양재1동,범죄율이 높은 양재1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’양재1동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,반포2동,범죄율이 높은 반포2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’반포2동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,양재2동,범죄율이 높은 양재2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (k:’양재2동’) RETURN k.name ORDER BY k.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,내곡동,범죄율이 높은 내곡동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’내곡동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,양재2동,범죄율이 높은 양재2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’양재2동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,양재1동,범죄율이 높은 양재1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’양재1동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,반포1동,범죄율이 높은 반포1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’반포1동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,서초1동,범죄율이 높은 서초1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’서초1동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,반포4동,범죄율이 높은 반포4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (k:’반포4동’) RETURN k.name ORDER BY k.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,잠원동,범죄율이 높은 잠원동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’잠원동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,방배1동,범죄율이 높은 방배1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’방배1동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,반포본동,범죄율이 높은 반포본동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (k:’반포본동’) RETURN k.name ORDER BY k.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,양재1동,범죄율이 높은 양재1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (k:’양재1동’) RETURN k.name ORDER BY k.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,방배3동,범죄율이 높은 방배3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’방배3동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,반포본동,범죄율이 높은 반포본동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’반포본동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,방배2동,범죄율이 높은 방배2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’방배2동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,반포4동,범죄율이 높은 반포4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’반포4동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,반포1동,범죄율이 높은 반포1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’반포1동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,서초2동,범죄율이 높은 서초2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’서초2동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,방배본동,범죄율이 높은 방배본동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (k:’방배본동’) RETURN k.name ORDER BY k.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,방배본동,범죄율이 높은 방배본동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (k:’방배본동’) RETURN k.name ORDER BY k.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,서초3동,범죄율이 높은 서초3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (k:’서초3동’) RETURN k.name ORDER BY k.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,내곡동,범죄율이 높은 내곡동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’내곡동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,잠원동,범죄율이 높은 잠원동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’잠원동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,방배본동,범죄율이 높은 방배본동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’방배본동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,반포본동,범죄율이 높은 반포본동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (k:’반포본동’) RETURN k.name ORDER BY k.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,서초1동,범죄율이 높은 서초1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (k:’서초1동’) RETURN k.name ORDER BY k.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,서초3동,범죄율이 높은 서초3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’서초3동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,반포1동,범죄율이 높은 반포1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’반포1동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,잠원동,범죄율이 높은 잠원동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’잠원동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,서초1동,범죄율이 높은 서초1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’서초1동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,방배1동,범죄율이 높은 방배1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (k:’방배1동’) RETURN k.name ORDER BY k.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,반포2동,범죄율이 높은 반포2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’반포2동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,반포1동,범죄율이 높은 반포1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (k:’반포1동’) RETURN k.name ORDER BY k.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,방배2동,범죄율이 높은 방배2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’방배2동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,서초4동,범죄율이 높은 서초4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (k:’서초4동’) RETURN k.name ORDER BY k.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,양재1동,범죄율이 높은 양재1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’양재1동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,방배1동,범죄율이 높은 방배1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (k:’방배1동’) RETURN k.name ORDER BY k.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,방배4동,범죄율이 높은 방배4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’방배4동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,반포3동,범죄율이 높은 반포3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (k:’반포3동’) RETURN k.name ORDER BY k.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,방배2동,범죄율이 높은 방배2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (k:’방배2동’) RETURN k.name ORDER BY k.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,서초3동,범죄율이 높은 서초3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’서초3동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,반포본동,범죄율이 높은 반포본동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’반포본동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,서초3동,범죄율이 높은 서초3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’서초3동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,서초2동,범죄율이 높은 서초2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’서초2동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,서초1동,범죄율이 높은 서초1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’서초1동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,반포2동,범죄율이 높은 반포2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’반포2동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,서초3동,범죄율이 높은 서초3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (k:’서초3동’) RETURN k.name ORDER BY k.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,서초4동,범죄율이 높은 서초4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (k:’서초4동’) RETURN k.name ORDER BY k.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,방배1동,범죄율이 높은 방배1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (k:’방배1동’) RETURN k.name ORDER BY k.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,방배4동,범죄율이 높은 방배4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’방배4동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,내곡동,범죄율이 높은 내곡동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’내곡동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,방배4동,범죄율이 높은 방배4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’방배4동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,잠원동,범죄율이 높은 잠원동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’잠원동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,양재2동,범죄율이 높은 양재2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’양재2동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,내곡동,범죄율이 높은 내곡동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’내곡동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,방배3동,범죄율이 높은 방배3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’방배3동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,반포4동,범죄율이 높은 반포4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’반포4동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,방배2동,범죄율이 높은 방배2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (k:’방배2동’) RETURN k.name ORDER BY k.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,반포4동,범죄율이 높은 반포4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’반포4동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,반포3동,범죄율이 높은 반포3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (k:’반포3동’) RETURN k.name ORDER BY k.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,방배1동,범죄율이 높은 방배1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (k:’방배1동’) RETURN k.name ORDER BY k.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,방배본동,범죄율이 높은 방배본동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (k:’방배본동’) RETURN k.name ORDER BY k.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,양재2동,범죄율이 높은 양재2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’양재2동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,반포본동,범죄율이 높은 반포본동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’반포본동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,서초4동,범죄율이 높은 서초4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (k:’서초4동’) RETURN k.name ORDER BY k.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,서초2동,범죄율이 높은 서초2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’서초2동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,잠원동,범죄율이 높은 잠원동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’잠원동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,반포본동,범죄율이 높은 반포본동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’반포본동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,방배1동,범죄율이 높은 방배1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’방배1동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,서초2동,범죄율이 높은 서초2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’서초2동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,방배본동,범죄율이 높은 방배본동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’방배본동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,방배3동,범죄율이 높은 방배3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’방배3동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,반포1동,범죄율이 높은 반포1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (k:’반포1동’) RETURN k.name ORDER BY k.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,방배3동,범죄율이 높은 방배3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’방배3동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,반포본동,범죄율이 높은 반포본동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’반포본동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,방배1동,범죄율이 높은 방배1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (k:’방배1동’) RETURN k.name ORDER BY k.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,서초3동,범죄율이 높은 서초3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’서초3동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,반포1동,범죄율이 높은 반포1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (k:’반포1동’) RETURN k.name ORDER BY k.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,내곡동,범죄율이 높은 내곡동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (k:’내곡동’) RETURN k.name ORDER BY k.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,반포1동,범죄율이 높은 반포1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’반포1동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,방배4동,범죄율이 높은 방배4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’방배4동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,방배2동,범죄율이 높은 방배2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (k:’방배2동’) RETURN k.name ORDER BY k.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,반포2동,범죄율이 높은 반포2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (k:’반포2동’) RETURN k.name ORDER BY k.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,반포4동,범죄율이 높은 반포4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’반포4동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,잠원동,범죄율이 높은 잠원동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’잠원동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,방배1동,범죄율이 높은 방배1동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’방배1동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,내곡동,범죄율이 높은 내곡동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (k:’내곡동’) RETURN k.name ORDER BY k.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,서초2동,범죄율이 높은 서초2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’서초2동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,방배3동,범죄율이 높은 방배3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’방배3동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,반포본동,범죄율이 높은 반포본동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’반포본동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,서초3동,범죄율이 높은 서초3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’서초3동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,반포3동,범죄율이 높은 반포3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’반포3동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,서초3동,범죄율이 높은 서초3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’서초3동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,잠원동,범죄율이 높은 잠원동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (k:’잠원동’) RETURN k.name ORDER BY k.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,방배3동,범죄율이 높은 방배3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’방배3동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,반포3동,범죄율이 높은 반포3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’반포3동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,방배2동,범죄율이 높은 방배2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’방배2동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,방배4동,범죄율이 높은 방배4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (k:’방배4동’) RETURN k.name ORDER BY k.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,방배3동,범죄율이 높은 방배3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’방배3동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,반포본동,범죄율이 높은 반포본동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’반포본동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,서초2동,범죄율이 높은 서초2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’서초2동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,반포본동,범죄율이 높은 반포본동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’반포본동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,방배3동,범죄율이 높은 방배3동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (k:’방배3동’) RETURN k.name ORDER BY k.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,방배2동,범죄율이 높은 방배2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (k:’방배2동’) RETURN k.name ORDER BY k.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,서초4동,범죄율이 높은 서초4동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’서초4동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
23,범죄율이 높은 [mask_1]은?,emd_name,반포2동,범죄율이 높은 반포2동은?,MATCH ([alpha]:’[mask_1]’) RETURN [alpha].name ORDER BY [alpha].crime_ratio DESC,emd_name,MATCH (n:’반포2동’) RETURN n.name ORDER BY n.crime_ratio DESC,1,1
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","래미안신반포리오센트아파트,",래미안신반포리오센트아파트에서 가까운 공원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’래미안신반포리오센트아파트’) MATCH (m:’공원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","양재우성아파트,",양재우성아파트에서 가까운 지하철역는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’양재우성아파트’) MATCH (l:’지하철역’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN l.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","서초한신리빙타워아파트,",서초한신리빙타워아파트에서 가까운 지하철역는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’서초한신리빙타워아파트’) MATCH (m:’지하철역’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","신반포15차아파트,",신반포15차아파트에서 가까운 학교는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’신반포15차아파트’) MATCH (m:’학교’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","임광1,2차아파트,","임광1,2차아파트에서 가까운 병원는?","MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’임광1,2차아파트’) MATCH (m:’병원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","삼호한숲아파트,",삼호한숲아파트에서 가까운 공원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’삼호한숲아파트’) MATCH (m:’공원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","서초자이아파트,",서초자이아파트에서 가까운 지하철역는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’서초자이아파트’) MATCH (l:’지하철역’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN l.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","삼호2차아파트,",삼호2차아파트에서 가까운 학교는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’삼호2차아파트’) MATCH (m:’학교’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","방배래미안아파트,",방배래미안아파트에서 가까운 지하철역는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’방배래미안아파트’) MATCH (m:’지하철역’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","강남원효성아파트,",강남원효성아파트에서 가까운 학교는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’강남원효성아파트’) MATCH (m:’학교’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","방배브라운가아파트,",방배브라운가아파트에서 가까운 지하철역는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (k:’방배브라운가아파트’) MATCH (m:’지하철역’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","반포써밋아파트,",반포써밋아파트에서 가까운 공원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’반포써밋아파트’) MATCH (l:’공원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN l.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","잠원훼미리아파트,",잠원훼미리아파트에서 가까운 학교는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’잠원훼미리아파트’) MATCH (l:’학교’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN l.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","한신서래아파트,",한신서래아파트에서 가까운 지하철역는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’한신서래아파트’) MATCH (m:’지하철역’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","롯데캐슬갤럭시1차아파트,",롯데캐슬갤럭시1차아파트에서 가까운 병원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’롯데캐슬갤럭시1차아파트’) MATCH (m:’병원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","래미안퍼스티지아파트,",래미안퍼스티지아파트에서 가까운 공원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’래미안퍼스티지아파트’) MATCH (m:’공원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","방배래미안타워아파트,",방배래미안타워아파트에서 가까운 공원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’방배래미안타워아파트’) MATCH (m:’공원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","반포힐스테이트아파트,",반포힐스테이트아파트에서 가까운 학교는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’반포힐스테이트아파트’) MATCH (m:’학교’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","롯데캐슬갤럭시2차아파트,",롯데캐슬갤럭시2차아파트에서 가까운 병원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (k:’롯데캐슬갤럭시2차아파트’) MATCH (l:’병원’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN l.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","반포써밋아파트,",반포써밋아파트에서 가까운 학교는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’반포써밋아파트’) MATCH (l:’학교’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN l.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","방배현대홈타운2차아파트,",방배현대홈타운2차아파트에서 가까운 공원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (k:’방배현대홈타운2차아파트’) MATCH (m:’공원’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","서초현대아파트,",서초현대아파트에서 가까운 지하철역는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’서초현대아파트’) MATCH (m:’지하철역’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","방배아이파크아파트,",방배아이파크아파트에서 가까운 학교는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’방배아이파크아파트’) MATCH (m:’학교’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","서초대우디오빌프라임아파트,",서초대우디오빌프라임아파트에서 가까운 공원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’서초대우디오빌프라임아파트’) MATCH (m:’공원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","한신타운아파트,",한신타운아파트에서 가까운 학교는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’한신타운아파트’) MATCH (m:’학교’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","래미안원베일리아파트,",래미안원베일리아파트에서 가까운 병원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’래미안원베일리아파트’) MATCH (m:’병원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","대림아파트,",대림아파트에서 가까운 학교는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’대림아파트’) MATCH (l:’학교’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN l.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","신반포15차아파트,",신반포15차아파트에서 가까운 학교는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’신반포15차아파트’) MATCH (m:’학교’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","서초삼성래미안아파트,",서초삼성래미안아파트에서 가까운 공원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’서초삼성래미안아파트’) MATCH (l:’공원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN l.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","신반포15차아파트,",신반포15차아파트에서 가까운 지하철역는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’신반포15차아파트’) MATCH (m:’지하철역’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","방배서리풀e-편한세상아파트,",방배서리풀e-편한세상아파트에서 가까운 지하철역는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’방배서리풀e-편한세상아파트’) MATCH (m:’지하철역’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","서초포레스타6단지아파트,",서초포레스타6단지아파트에서 가까운 지하철역는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (k:’서초포레스타6단지아파트’) MATCH (l:’지하철역’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN l.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","양재우성KBS(113동)아파트,",양재우성KBS(113동)아파트에서 가까운 지하철역는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (k:’양재우성KBS(113동)아파트’) MATCH (l:’지하철역’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN l.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","신반포9차아파트,",신반포9차아파트에서 가까운 지하철역는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’신반포9차아파트’) MATCH (m:’지하철역’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","서초교대e편한세상아파트,",서초교대e편한세상아파트에서 가까운 학교는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’서초교대e편한세상아파트’) MATCH (m:’학교’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","반포센트럴자이아파트,",반포센트럴자이아파트에서 가까운 공원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’반포센트럴자이아파트’) MATCH (m:’공원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","임광1,2차아파트,","임광1,2차아파트에서 가까운 병원는?","MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’임광1,2차아파트’) MATCH (m:’병원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","서초호반써밋아파트,",서초호반써밋아파트에서 가까운 학교는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’서초호반써밋아파트’) MATCH (l:’학교’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN l.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","신반포20차아파트,",신반포20차아파트에서 가까운 병원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’신반포20차아파트’) MATCH (m:’병원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","서초네이처힐4단지아파트,",서초네이처힐4단지아파트에서 가까운 지하철역는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’서초네이처힐4단지아파트’) MATCH (l:’지하철역’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN l.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","강변아파트,",강변아파트에서 가까운 병원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’강변아파트’) MATCH (l:’병원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN l.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","현대슈퍼빌아파트,",현대슈퍼빌아파트에서 가까운 지하철역는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’현대슈퍼빌아파트’) MATCH (m:’지하철역’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","서초네이처힐1단지아파트,",서초네이처힐1단지아파트에서 가까운 학교는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’서초네이처힐1단지아파트’) MATCH (m:’학교’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","삼환나띠르빌아파트,",삼환나띠르빌아파트에서 가까운 학교는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’삼환나띠르빌아파트’) MATCH (l:’학교’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN l.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","방배래미안타워아파트,",방배래미안타워아파트에서 가까운 지하철역는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’방배래미안타워아파트’) MATCH (m:’지하철역’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","신반포궁전아파트,",신반포궁전아파트에서 가까운 학교는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’신반포궁전아파트’) MATCH (m:’학교’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","서초아트자이아파트,",서초아트자이아파트에서 가까운 지하철역는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’서초아트자이아파트’) MATCH (m:’지하철역’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","서초쌍용플래티넘아파트,",서초쌍용플래티넘아파트에서 가까운 공원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’서초쌍용플래티넘아파트’) MATCH (l:’공원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN l.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","삼익아파트,",삼익아파트에서 가까운 공원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’삼익아파트’) MATCH (m:’공원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","서초네이처힐4단지아파트,",서초네이처힐4단지아파트에서 가까운 지하철역는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (k:’서초네이처힐4단지아파트’) MATCH (m:’지하철역’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","코오롱아파트,",코오롱아파트에서 가까운 병원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’코오롱아파트’) MATCH (m:’병원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","방배서리풀e-편한세상아파트,",방배서리풀e-편한세상아파트에서 가까운 공원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (k:’방배서리풀e-편한세상아파트’) MATCH (m:’공원’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","LH서초5단지아파트,",LH서초5단지아파트에서 가까운 공원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (k:’LH서초5단지아파트’) MATCH (l:’공원’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN l.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","한라비발디스튜디오193(도시형)아파트,",한라비발디스튜디오193(도시형)아파트에서 가까운 학교는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’한라비발디스튜디오193(도시형)아파트’) MATCH (m:’학교’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","르엘신반포아파트,",르엘신반포아파트에서 가까운 학교는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’르엘신반포아파트’) MATCH (m:’학교’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","래미안서초스위트아파트,",래미안서초스위트아파트에서 가까운 병원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’래미안서초스위트아파트’) MATCH (l:’병원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN l.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","한신로얄아파트,",한신로얄아파트에서 가까운 학교는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’한신로얄아파트’) MATCH (l:’학교’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN l.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","반포푸르지오아파트,",반포푸르지오아파트에서 가까운 병원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’반포푸르지오아파트’) MATCH (m:’병원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","동고아파트,",동고아파트에서 가까운 병원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’동고아파트’) MATCH (l:’병원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN l.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","아크로리버뷰신반포아파트,",아크로리버뷰신반포아파트에서 가까운 공원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’아크로리버뷰신반포아파트’) MATCH (l:’공원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN l.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","더샵반포리버파크(도시형)아파트,",더샵반포리버파크(도시형)아파트에서 가까운 공원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’더샵반포리버파크(도시형)아파트’) MATCH (l:’공원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN l.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","진흥아파트,",진흥아파트에서 가까운 지하철역는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (k:’진흥아파트’) MATCH (l:’지하철역’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN l.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","방배현대홈타운2차아파트,",방배현대홈타운2차아파트에서 가까운 병원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’방배현대홈타운2차아파트’) MATCH (l:’병원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN l.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","반포래미안아이파크아파트,",반포래미안아이파크아파트에서 가까운 공원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’반포래미안아이파크아파트’) MATCH (m:’공원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","서초포레스타2단지아파트,",서초포레스타2단지아파트에서 가까운 학교는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’서초포레스타2단지아파트’) MATCH (m:’학교’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","현대성우아파트,",현대성우아파트에서 가까운 공원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’현대성우아파트’) MATCH (m:’공원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","현대동궁아파트,",현대동궁아파트에서 가까운 지하철역는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (k:’현대동궁아파트’) MATCH (m:’지하철역’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","신반포19차아파트,",신반포19차아파트에서 가까운 병원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’신반포19차아파트’) MATCH (m:’병원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","서초네이처힐2단지아파트,",서초네이처힐2단지아파트에서 가까운 학교는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’서초네이처힐2단지아파트’) MATCH (m:’학교’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","삼풍아파트,",삼풍아파트에서 가까운 병원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (k:’삼풍아파트’) MATCH (m:’병원’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","서초e-편한세상2차아파트,",서초e-편한세상2차아파트에서 가까운 공원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’서초e-편한세상2차아파트’) MATCH (m:’공원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","서초대우디오빌프라임아파트,",서초대우디오빌프라임아파트에서 가까운 병원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’서초대우디오빌프라임아파트’) MATCH (m:’병원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","서초더샵포레아파트,",서초더샵포레아파트에서 가까운 지하철역는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’서초더샵포레아파트’) MATCH (l:’지하철역’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN l.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","삼호가든맨션5차아파트,",삼호가든맨션5차아파트에서 가까운 공원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’삼호가든맨션5차아파트’) MATCH (m:’공원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","래미안리더스원아파트,",래미안리더스원아파트에서 가까운 학교는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’래미안리더스원아파트’) MATCH (l:’학교’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN l.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","반포주공1단지아파트,",반포주공1단지아파트에서 가까운 지하철역는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’반포주공1단지아파트’) MATCH (m:’지하철역’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","현대멤피스아파트,",현대멤피스아파트에서 가까운 공원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (k:’현대멤피스아파트’) MATCH (m:’공원’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","서초네이처힐4단지아파트,",서초네이처힐4단지아파트에서 가까운 병원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (k:’서초네이처힐4단지아파트’) MATCH (m:’병원’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","녹원한신아파트,",녹원한신아파트에서 가까운 지하철역는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’녹원한신아파트’) MATCH (m:’지하철역’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","서초자이아파트,",서초자이아파트에서 가까운 병원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’서초자이아파트’) MATCH (m:’병원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","현대멤피스아파트,",현대멤피스아파트에서 가까운 공원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’현대멤피스아파트’) MATCH (l:’공원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN l.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","서초호반써밋아파트,",서초호반써밋아파트에서 가까운 학교는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’서초호반써밋아파트’) MATCH (m:’학교’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","잠원훼미리아파트,",잠원훼미리아파트에서 가까운 공원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (k:’잠원훼미리아파트’) MATCH (l:’공원’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN l.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","신동아1차아파트,",신동아1차아파트에서 가까운 병원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’신동아1차아파트’) MATCH (m:’병원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","방배래미안아트힐아파트,",방배래미안아트힐아파트에서 가까운 공원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (k:’방배래미안아트힐아파트’) MATCH (m:’공원’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","잠원한신그린아파트,",잠원한신그린아파트에서 가까운 공원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’잠원한신그린아파트’) MATCH (m:’공원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","서초아이파크아파트,",서초아이파크아파트에서 가까운 공원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’서초아이파크아파트’) MATCH (l:’공원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN l.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","신동아아파트,",신동아아파트에서 가까운 병원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’신동아아파트’) MATCH (m:’병원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","신반포7차아파트,",신반포7차아파트에서 가까운 학교는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (k:’신반포7차아파트’) MATCH (l:’학교’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN l.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","래미안신반포팰리스아파트,",래미안신반포팰리스아파트에서 가까운 지하철역는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’래미안신반포팰리스아파트’) MATCH (l:’지하철역’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN l.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","강남역푸르지오시티(도시형)아파트,",강남역푸르지오시티(도시형)아파트에서 가까운 공원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’강남역푸르지오시티(도시형)아파트’) MATCH (m:’공원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","반포푸르지오아파트,",반포푸르지오아파트에서 가까운 공원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’반포푸르지오아파트’) MATCH (m:’공원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","반포힐스테이트아파트,",반포힐스테이트아파트에서 가까운 병원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (k:’반포힐스테이트아파트’) MATCH (m:’병원’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","우성5차아파트,",우성5차아파트에서 가까운 학교는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’우성5차아파트’) MATCH (l:’학교’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN l.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","방배한신트리플아파트,",방배한신트리플아파트에서 가까운 지하철역는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’방배한신트리플아파트’) MATCH (l:’지하철역’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN l.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","신반포궁전아파트,",신반포궁전아파트에서 가까운 공원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (k:’신반포궁전아파트’) MATCH (m:’공원’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","신반포8차아파트,",신반포8차아파트에서 가까운 지하철역는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (k:’신반포8차아파트’) MATCH (l:’지하철역’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN l.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","방배현대홈타운3차아파트,",방배현대홈타운3차아파트에서 가까운 지하철역는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’방배현대홈타운3차아파트’) MATCH (m:’지하철역’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","롯데캐슬주피터아파트,",롯데캐슬주피터아파트에서 가까운 지하철역는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’롯데캐슬주피터아파트’) MATCH (l:’지하철역’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN l.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","서초e-편한세상2차아파트,",서초e-편한세상2차아파트에서 가까운 지하철역는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’서초e-편한세상2차아파트’) MATCH (l:’지하철역’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN l.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","방배아트자이아파트,",방배아트자이아파트에서 가까운 공원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’방배아트자이아파트’) MATCH (m:’공원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","서초포레스타2단지아파트,",서초포레스타2단지아파트에서 가까운 공원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (k:’서초포레스타2단지아파트’) MATCH (m:’공원’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","서초포레스타3단지아파트,",서초포레스타3단지아파트에서 가까운 병원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’서초포레스타3단지아파트’) MATCH (m:’병원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","한신로얄아파트,",한신로얄아파트에서 가까운 학교는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’한신로얄아파트’) MATCH (m:’학교’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","반포써밋아파트,",반포써밋아파트에서 가까운 지하철역는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (k:’반포써밋아파트’) MATCH (l:’지하철역’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN l.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","동아아파트,",동아아파트에서 가까운 지하철역는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’동아아파트’) MATCH (l:’지하철역’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN l.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","한신로얄아파트,",한신로얄아파트에서 가까운 병원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’한신로얄아파트’) MATCH (l:’병원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN l.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","서초네이처힐4단지아파트,",서초네이처힐4단지아파트에서 가까운 지하철역는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’서초네이처힐4단지아파트’) MATCH (m:’지하철역’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","유원서초아파트,",유원서초아파트에서 가까운 공원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’유원서초아파트’) MATCH (m:’공원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","대림아파트,",대림아파트에서 가까운 지하철역는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’대림아파트’) MATCH (m:’지하철역’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","아크로리버뷰신반포아파트,",아크로리버뷰신반포아파트에서 가까운 지하철역는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’아크로리버뷰신반포아파트’) MATCH (m:’지하철역’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","서초교대e편한세상아파트,",서초교대e편한세상아파트에서 가까운 지하철역는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (k:’서초교대e편한세상아파트’) MATCH (l:’지하철역’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN l.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","서초네이처힐1단지아파트,",서초네이처힐1단지아파트에서 가까운 공원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’서초네이처힐1단지아파트’) MATCH (l:’공원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN l.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","반포한신타워아파트,",반포한신타워아파트에서 가까운 지하철역는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (k:’반포한신타워아파트’) MATCH (l:’지하철역’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN l.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","현대아파트,",현대아파트에서 가까운 공원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’현대아파트’) MATCH (m:’공원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","신반포21차아파트,",신반포21차아파트에서 가까운 학교는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’신반포21차아파트’) MATCH (l:’학교’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN l.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","서초호반써밋아파트,",서초호반써밋아파트에서 가까운 공원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (k:’서초호반써밋아파트’) MATCH (m:’공원’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","한강아파트,",한강아파트에서 가까운 지하철역는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’한강아파트’) MATCH (m:’지하철역’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","강변아파트,",강변아파트에서 가까운 공원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (k:’강변아파트’) MATCH (m:’공원’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","서초대우아이빌아파트,",서초대우아이빌아파트에서 가까운 학교는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (k:’서초대우아이빌아파트’) MATCH (l:’학교’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN l.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","킴스빌리지아파트,",킴스빌리지아파트에서 가까운 병원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (k:’킴스빌리지아파트’) MATCH (l:’병원’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN l.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","아크로비스타아파트,",아크로비스타아파트에서 가까운 공원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (k:’아크로비스타아파트’) MATCH (m:’공원’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","신반포22차아파트,",신반포22차아파트에서 가까운 학교는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (k:’신반포22차아파트’) MATCH (m:’학교’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","신반포자이아파트,",신반포자이아파트에서 가까운 공원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (k:’신반포자이아파트’) MATCH (m:’공원’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","방배래미안아파트,",방배래미안아파트에서 가까운 병원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (k:’방배래미안아파트’) MATCH (l:’병원’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN l.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","동원베네스트아파트,",동원베네스트아파트에서 가까운 지하철역는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’동원베네스트아파트’) MATCH (m:’지하철역’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","힐스테이트서초젠트리스아파트,",힐스테이트서초젠트리스아파트에서 가까운 병원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’힐스테이트서초젠트리스아파트’) MATCH (m:’병원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","롯데캐슬클래식아파트,",롯데캐슬클래식아파트에서 가까운 지하철역는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’롯데캐슬클래식아파트’) MATCH (m:’지하철역’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","우성5차아파트,",우성5차아파트에서 가까운 학교는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’우성5차아파트’) MATCH (l:’학교’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN l.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","신영체르니아파트,",신영체르니아파트에서 가까운 병원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’신영체르니아파트’) MATCH (l:’병원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN l.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","방배래미안아파트,",방배래미안아파트에서 가까운 공원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’방배래미안아파트’) MATCH (m:’공원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","서초네이처힐7단지아파트,",서초네이처힐7단지아파트에서 가까운 공원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (k:’서초네이처힐7단지아파트’) MATCH (l:’공원’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN l.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","방배아크로리버아파트,",방배아크로리버아파트에서 가까운 병원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’방배아크로리버아파트’) MATCH (m:’병원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","신반포20차아파트,",신반포20차아파트에서 가까운 지하철역는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (k:’신반포20차아파트’) MATCH (m:’지하철역’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","래미안원베일리아파트,",래미안원베일리아파트에서 가까운 병원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (k:’래미안원베일리아파트’) MATCH (l:’병원’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN l.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","강변아파트,",강변아파트에서 가까운 공원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (k:’강변아파트’) MATCH (m:’공원’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","현대ESA아파트,",현대ESA아파트에서 가까운 지하철역는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’현대ESA아파트’) MATCH (m:’지하철역’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","방배브라운스톤아파트,",방배브라운스톤아파트에서 가까운 지하철역는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’방배브라운스톤아파트’) MATCH (m:’지하철역’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","잠원중앙하이츠(B동)아파트,",잠원중앙하이츠(B동)아파트에서 가까운 지하철역는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (k:’잠원중앙하이츠(B동)아파트’) MATCH (m:’지하철역’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","신반포12차아파트,",신반포12차아파트에서 가까운 지하철역는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (k:’신반포12차아파트’) MATCH (m:’지하철역’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","방배래미안타워아파트,",방배래미안타워아파트에서 가까운 공원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (k:’방배래미안타워아파트’) MATCH (m:’공원’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","한신서래아파트,",한신서래아파트에서 가까운 공원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’한신서래아파트’) MATCH (m:’공원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","쌍용예가클래식아파트,",쌍용예가클래식아파트에서 가까운 병원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’쌍용예가클래식아파트’) MATCH (l:’병원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN l.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","신동아아파트,",신동아아파트에서 가까운 병원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (k:’신동아아파트’) MATCH (m:’병원’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","서초포레스타2단지아파트,",서초포레스타2단지아파트에서 가까운 학교는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’서초포레스타2단지아파트’) MATCH (l:’학교’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN l.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","잠원대우아이빌아파트,",잠원대우아이빌아파트에서 가까운 공원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (k:’잠원대우아이빌아파트’) MATCH (l:’공원’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN l.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","신반포16차아파트,",신반포16차아파트에서 가까운 공원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (k:’신반포16차아파트’) MATCH (m:’공원’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","방배대우디오빌아파트,",방배대우디오빌아파트에서 가까운 공원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’방배대우디오빌아파트’) MATCH (m:’공원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","서초현대4차아파트,",서초현대4차아파트에서 가까운 학교는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’서초현대4차아파트’) MATCH (m:’학교’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","신반포22차아파트,",신반포22차아파트에서 가까운 병원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (k:’신반포22차아파트’) MATCH (m:’병원’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","방배아크로리버아파트,",방배아크로리버아파트에서 가까운 병원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’방배아크로리버아파트’) MATCH (m:’병원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","신반포11차아파트,",신반포11차아파트에서 가까운 학교는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’신반포11차아파트’) MATCH (m:’학교’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","반포센트럴자이아파트,",반포센트럴자이아파트에서 가까운 공원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’반포센트럴자이아파트’) MATCH (l:’공원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN l.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","LH서초5단지아파트,",LH서초5단지아파트에서 가까운 지하철역는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’LH서초5단지아파트’) MATCH (m:’지하철역’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","서초리시온아파트,",서초리시온아파트에서 가까운 지하철역는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’서초리시온아파트’) MATCH (m:’지하철역’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","롯데캐슬주피터아파트,",롯데캐슬주피터아파트에서 가까운 병원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’롯데캐슬주피터아파트’) MATCH (m:’병원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","동고아파트,",동고아파트에서 가까운 학교는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’동고아파트’) MATCH (m:’학교’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","서초롯데캐슬리버티아파트,",서초롯데캐슬리버티아파트에서 가까운 지하철역는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’서초롯데캐슬리버티아파트’) MATCH (l:’지하철역’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN l.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","서초네이처힐3단지아파트,",서초네이처힐3단지아파트에서 가까운 공원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (k:’서초네이처힐3단지아파트’) MATCH (m:’공원’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","삼호가든맨션5차아파트,",삼호가든맨션5차아파트에서 가까운 병원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (k:’삼호가든맨션5차아파트’) MATCH (m:’병원’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","래미안퍼스티지아파트,",래미안퍼스티지아파트에서 가까운 공원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’래미안퍼스티지아파트’) MATCH (m:’공원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","롯데캐슬갤럭시2차아파트,",롯데캐슬갤럭시2차아파트에서 가까운 공원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (k:’롯데캐슬갤럭시2차아파트’) MATCH (m:’공원’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","신반포청구아파트,",신반포청구아파트에서 가까운 공원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (k:’신반포청구아파트’) MATCH (m:’공원’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","엠브이아파트,",엠브이아파트에서 가까운 학교는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’엠브이아파트’) MATCH (m:’학교’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","힐스테이트서초젠트리스아파트,",힐스테이트서초젠트리스아파트에서 가까운 학교는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (k:’힐스테이트서초젠트리스아파트’) MATCH (m:’학교’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","방배래미안타워아파트,",방배래미안타워아파트에서 가까운 공원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (k:’방배래미안타워아파트’) MATCH (m:’공원’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","서초아이파크아파트,",서초아이파크아파트에서 가까운 지하철역는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (k:’서초아이파크아파트’) MATCH (m:’지하철역’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","신동아2차아파트,",신동아2차아파트에서 가까운 공원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (k:’신동아2차아파트’) MATCH (m:’공원’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","서초네이처힐6단지아파트,",서초네이처힐6단지아파트에서 가까운 학교는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (k:’서초네이처힐6단지아파트’) MATCH (m:’학교’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","우성5차아파트,",우성5차아파트에서 가까운 공원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’우성5차아파트’) MATCH (l:’공원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN l.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","서초대우아이빌아파트,",서초대우아이빌아파트에서 가까운 공원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’서초대우아이빌아파트’) MATCH (m:’공원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","서초삼성래미안아파트,",서초삼성래미안아파트에서 가까운 공원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (k:’서초삼성래미안아파트’) MATCH (m:’공원’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","킴스빌리지아파트,",킴스빌리지아파트에서 가까운 지하철역는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’킴스빌리지아파트’) MATCH (m:’지하철역’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","삼풍아파트,",삼풍아파트에서 가까운 병원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’삼풍아파트’) MATCH (l:’병원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN l.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","현대동궁아파트,",현대동궁아파트에서 가까운 병원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’현대동궁아파트’) MATCH (l:’병원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN l.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","신반포12차아파트,",신반포12차아파트에서 가까운 학교는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (k:’신반포12차아파트’) MATCH (l:’학교’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN l.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","서초네이처힐4단지아파트,",서초네이처힐4단지아파트에서 가까운 병원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (k:’서초네이처힐4단지아파트’) MATCH (l:’병원’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN l.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","아크로리버파크아파트,",아크로리버파크아파트에서 가까운 지하철역는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (k:’아크로리버파크아파트’) MATCH (l:’지하철역’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN l.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","신화아파트,",신화아파트에서 가까운 학교는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (k:’신화아파트’) MATCH (l:’학교’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN l.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","롯데캐슬갤럭시2차아파트,",롯데캐슬갤럭시2차아파트에서 가까운 지하철역는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’롯데캐슬갤럭시2차아파트’) MATCH (m:’지하철역’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","신동아아파트,",신동아아파트에서 가까운 지하철역는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’신동아아파트’) MATCH (m:’지하철역’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","서초한빛삼성아파트,",서초한빛삼성아파트에서 가까운 학교는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’서초한빛삼성아파트’) MATCH (m:’학교’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","아크로비스타아파트,",아크로비스타아파트에서 가까운 병원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’아크로비스타아파트’) MATCH (l:’병원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN l.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","지웰홈스서초아파트,",지웰홈스서초아파트에서 가까운 병원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’지웰홈스서초아파트’) MATCH (m:’병원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","반포리체아파트,",반포리체아파트에서 가까운 지하철역는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’반포리체아파트’) MATCH (l:’지하철역’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN l.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","킴스빌리지아파트,",킴스빌리지아파트에서 가까운 병원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’킴스빌리지아파트’) MATCH (m:’병원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","신반포8차아파트,",신반포8차아파트에서 가까운 병원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (k:’신반포8차아파트’) MATCH (m:’병원’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","래미안퍼스티지아파트,",래미안퍼스티지아파트에서 가까운 지하철역는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’래미안퍼스티지아파트’) MATCH (l:’지하철역’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN l.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","현대아파트,",현대아파트에서 가까운 병원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’현대아파트’) MATCH (m:’병원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","서초롯데캐슬리버티아파트,",서초롯데캐슬리버티아파트에서 가까운 공원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (k:’서초롯데캐슬리버티아파트’) MATCH (m:’공원’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","진흥아파트,",진흥아파트에서 가까운 지하철역는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’진흥아파트’) MATCH (l:’지하철역’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN l.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","신반포17차아파트,",신반포17차아파트에서 가까운 학교는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’신반포17차아파트’) MATCH (m:’학교’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","잠원현대훼밀리아파트,",잠원현대훼밀리아파트에서 가까운 학교는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (k:’잠원현대훼밀리아파트’) MATCH (l:’학교’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN l.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","잠원중앙하이츠(B동)아파트,",잠원중앙하이츠(B동)아파트에서 가까운 병원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (k:’잠원중앙하이츠(B동)아파트’) MATCH (m:’병원’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","서초LH4단지아파트,",서초LH4단지아파트에서 가까운 병원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’서초LH4단지아파트’) MATCH (m:’병원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","금호베스트빌아파트,",금호베스트빌아파트에서 가까운 공원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (k:’금호베스트빌아파트’) MATCH (l:’공원’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN l.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","삼풍아파트,",삼풍아파트에서 가까운 공원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’삼풍아파트’) MATCH (l:’공원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN l.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","강남역푸르지오시티(도시형)아파트,",강남역푸르지오시티(도시형)아파트에서 가까운 병원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’강남역푸르지오시티(도시형)아파트’) MATCH (l:’병원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN l.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","롯데캐슬갤럭시2차아파트,",롯데캐슬갤럭시2차아파트에서 가까운 공원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’롯데캐슬갤럭시2차아파트’) MATCH (l:’공원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN l.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","방배우성아파트,",방배우성아파트에서 가까운 학교는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (k:’방배우성아파트’) MATCH (m:’학교’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","서초래미안아파트,",서초래미안아파트에서 가까운 공원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (k:’서초래미안아파트’) MATCH (l:’공원’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN l.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","삼성서초가든스위트아파트,",삼성서초가든스위트아파트에서 가까운 공원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (k:’삼성서초가든스위트아파트’) MATCH (m:’공원’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","래미안퍼스티지아파트,",래미안퍼스티지아파트에서 가까운 공원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’래미안퍼스티지아파트’) MATCH (m:’공원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","삼풍아파트,",삼풍아파트에서 가까운 지하철역는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’삼풍아파트’) MATCH (m:’지하철역’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","현대동궁아파트,",현대동궁아파트에서 가까운 학교는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (k:’현대동궁아파트’) MATCH (m:’학교’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","신동아1차아파트,",신동아1차아파트에서 가까운 병원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’신동아1차아파트’) MATCH (m:’병원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","서초삼성래미안아파트,",서초삼성래미안아파트에서 가까운 학교는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’서초삼성래미안아파트’) MATCH (m:’학교’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","서초e-편한세상2차아파트,",서초e-편한세상2차아파트에서 가까운 병원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’서초e-편한세상2차아파트’) MATCH (m:’병원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","방배대우디오빌아파트,",방배대우디오빌아파트에서 가까운 병원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’방배대우디오빌아파트’) MATCH (l:’병원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN l.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","신반포22차아파트,",신반포22차아파트에서 가까운 공원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’신반포22차아파트’) MATCH (m:’공원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","롯데캐슬헤론아파트,",롯데캐슬헤론아파트에서 가까운 지하철역는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’롯데캐슬헤론아파트’) MATCH (m:’지하철역’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","신반포25차아파트,",신반포25차아파트에서 가까운 공원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’신반포25차아파트’) MATCH (m:’공원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","잠원현대훼밀리아파트,",잠원현대훼밀리아파트에서 가까운 공원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’잠원현대훼밀리아파트’) MATCH (m:’공원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","동고아파트,",동고아파트에서 가까운 병원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (k:’동고아파트’) MATCH (m:’병원’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","신화아파트,",신화아파트에서 가까운 공원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (k:’신화아파트’) MATCH (l:’공원’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN l.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","서초더샵포레아파트,",서초더샵포레아파트에서 가까운 공원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’서초더샵포레아파트’) MATCH (l:’공원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN l.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","삼성서초가든스위트아파트,",삼성서초가든스위트아파트에서 가까운 공원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’삼성서초가든스위트아파트’) MATCH (l:’공원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN l.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","DK밸리뷰서초(주)아파트,",DK밸리뷰서초(주)아파트에서 가까운 학교는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’DK밸리뷰서초(주)아파트’) MATCH (m:’학교’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","방배브라운가아파트,",방배브라운가아파트에서 가까운 지하철역는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’방배브라운가아파트’) MATCH (m:’지하철역’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","방배롯데캐슬아르떼아파트,",방배롯데캐슬아르떼아파트에서 가까운 병원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (k:’방배롯데캐슬아르떼아파트’) MATCH (m:’병원’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","서초e-편한세상5차아파트,",서초e-편한세상5차아파트에서 가까운 지하철역는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’서초e-편한세상5차아파트’) MATCH (m:’지하철역’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","현대성우아파트,",현대성우아파트에서 가까운 공원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (k:’현대성우아파트’) MATCH (l:’공원’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN l.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","대우효령아파트,",대우효령아파트에서 가까운 공원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (k:’대우효령아파트’) MATCH (l:’공원’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN l.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","헤센파크힐아파트,",헤센파크힐아파트에서 가까운 학교는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (k:’헤센파크힐아파트’) MATCH (m:’학교’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","신반포궁전아파트,",신반포궁전아파트에서 가까운 공원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’신반포궁전아파트’) MATCH (m:’공원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","롯데캐슬갤럭시1차아파트,",롯데캐슬갤럭시1차아파트에서 가까운 공원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’롯데캐슬갤럭시1차아파트’) MATCH (m:’공원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","서초포레스타3단지아파트,",서초포레스타3단지아파트에서 가까운 병원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’서초포레스타3단지아파트’) MATCH (l:’병원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN l.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","서초e-편한세상5차아파트,",서초e-편한세상5차아파트에서 가까운 학교는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (k:’서초e-편한세상5차아파트’) MATCH (m:’학교’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","서초한빛삼성아파트,",서초한빛삼성아파트에서 가까운 공원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’서초한빛삼성아파트’) MATCH (m:’공원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","서초포레스타5단지아파트,",서초포레스타5단지아파트에서 가까운 병원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’서초포레스타5단지아파트’) MATCH (l:’병원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN l.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","양재우성KBS(113동)아파트,",양재우성KBS(113동)아파트에서 가까운 지하철역는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’양재우성KBS(113동)아파트’) MATCH (m:’지하철역’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","신반포17차아파트,",신반포17차아파트에서 가까운 병원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’신반포17차아파트’) MATCH (l:’병원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN l.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","양재우성KBS(113동)아파트,",양재우성KBS(113동)아파트에서 가까운 지하철역는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (k:’양재우성KBS(113동)아파트’) MATCH (m:’지하철역’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","방배e-편한세상3차아파트,",방배e-편한세상3차아파트에서 가까운 공원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’방배e-편한세상3차아파트’) MATCH (m:’공원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","롯데캐슬주피터아파트,",롯데캐슬주피터아파트에서 가까운 공원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (k:’롯데캐슬주피터아파트’) MATCH (m:’공원’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","양재우성아파트,",양재우성아파트에서 가까운 지하철역는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’양재우성아파트’) MATCH (m:’지하철역’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","강남역푸르지오시티(도시형)아파트,",강남역푸르지오시티(도시형)아파트에서 가까운 지하철역는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’강남역푸르지오시티(도시형)아파트’) MATCH (m:’지하철역’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","서초리시온아파트,",서초리시온아파트에서 가까운 지하철역는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (k:’서초리시온아파트’) MATCH (l:’지하철역’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN l.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","더샵서초아파트,",더샵서초아파트에서 가까운 공원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’더샵서초아파트’) MATCH (l:’공원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN l.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","현대멤피스아파트,",현대멤피스아파트에서 가까운 지하철역는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’현대멤피스아파트’) MATCH (m:’지하철역’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","우면한라아파트,",우면한라아파트에서 가까운 공원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’우면한라아파트’) MATCH (m:’공원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","동고아파트,",동고아파트에서 가까운 공원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (k:’동고아파트’) MATCH (l:’공원’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN l.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","서초현대4차아파트,",서초현대4차아파트에서 가까운 지하철역는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’서초현대4차아파트’) MATCH (l:’지하철역’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN l.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","반포미도1차아파트,",반포미도1차아파트에서 가까운 학교는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’반포미도1차아파트’) MATCH (m:’학교’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","방배동부센트레빌아파트,",방배동부센트레빌아파트에서 가까운 공원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (k:’방배동부센트레빌아파트’) MATCH (m:’공원’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","서초삼성래미안아파트,",서초삼성래미안아파트에서 가까운 지하철역는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’서초삼성래미안아파트’) MATCH (l:’지하철역’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN l.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","서초호반써밋아파트,",서초호반써밋아파트에서 가까운 병원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (k:’서초호반써밋아파트’) MATCH (l:’병원’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN l.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","방배아트자이아파트,",방배아트자이아파트에서 가까운 공원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (k:’방배아트자이아파트’) MATCH (l:’공원’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN l.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","서초그랑자이아파트,",서초그랑자이아파트에서 가까운 병원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’서초그랑자이아파트’) MATCH (m:’병원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","신동아1차아파트,",신동아1차아파트에서 가까운 지하철역는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’신동아1차아파트’) MATCH (m:’지하철역’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","롯데캐슬갤럭시2차아파트,",롯데캐슬갤럭시2차아파트에서 가까운 병원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’롯데캐슬갤럭시2차아파트’) MATCH (l:’병원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN l.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","삼호4차아파트,",삼호4차아파트에서 가까운 병원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’삼호4차아파트’) MATCH (m:’병원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","래미안퍼스티지아파트,",래미안퍼스티지아파트에서 가까운 학교는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (k:’래미안퍼스티지아파트’) MATCH (m:’학교’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","신반포궁전아파트,",신반포궁전아파트에서 가까운 병원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’신반포궁전아파트’) MATCH (m:’병원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","방배브라운가아파트,",방배브라운가아파트에서 가까운 지하철역는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (k:’방배브라운가아파트’) MATCH (m:’지하철역’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","서초호반써밋아파트,",서초호반써밋아파트에서 가까운 공원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’서초호반써밋아파트’) MATCH (m:’공원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","서초포레스타2단지아파트,",서초포레스타2단지아파트에서 가까운 병원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’서초포레스타2단지아파트’) MATCH (l:’병원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN l.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","반포자이아파트,",반포자이아파트에서 가까운 학교는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’반포자이아파트’) MATCH (m:’학교’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","잠원중앙하이츠(B동)아파트,",잠원중앙하이츠(B동)아파트에서 가까운 공원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (k:’잠원중앙하이츠(B동)아파트’) MATCH (l:’공원’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN l.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","방배현대홈타운2차아파트,",방배현대홈타운2차아파트에서 가까운 지하철역는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (k:’방배현대홈타운2차아파트’) MATCH (l:’지하철역’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN l.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","방배자이아파트,",방배자이아파트에서 가까운 학교는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’방배자이아파트’) MATCH (m:’학교’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","삼호2차아파트,",삼호2차아파트에서 가까운 공원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (k:’삼호2차아파트’) MATCH (m:’공원’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","서초자이아파트,",서초자이아파트에서 가까운 지하철역는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’서초자이아파트’) MATCH (l:’지하철역’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN l.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","대우효령아파트,",대우효령아파트에서 가까운 학교는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (k:’대우효령아파트’) MATCH (m:’학교’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","잠원한신아파트,",잠원한신아파트에서 가까운 학교는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’잠원한신아파트’) MATCH (l:’학교’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN l.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","현대ESA2아파트,",현대ESA2아파트에서 가까운 공원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’현대ESA2아파트’) MATCH (m:’공원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","서초e-편한세상2차아파트,",서초e-편한세상2차아파트에서 가까운 학교는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (k:’서초e-편한세상2차아파트’) MATCH (m:’학교’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","동고아파트,",동고아파트에서 가까운 학교는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’동고아파트’) MATCH (l:’학교’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN l.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","서초대우아이빌아파트,",서초대우아이빌아파트에서 가까운 공원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’서초대우아이빌아파트’) MATCH (l:’공원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN l.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","서초포레스타3단지아파트,",서초포레스타3단지아파트에서 가까운 공원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (k:’서초포레스타3단지아파트’) MATCH (m:’공원’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","신반포자이아파트,",신반포자이아파트에서 가까운 공원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’신반포자이아파트’) MATCH (m:’공원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","쌍용예가클래식아파트,",쌍용예가클래식아파트에서 가까운 지하철역는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’쌍용예가클래식아파트’) MATCH (m:’지하철역’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","양재우성KBS(113동)아파트,",양재우성KBS(113동)아파트에서 가까운 지하철역는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’양재우성KBS(113동)아파트’) MATCH (l:’지하철역’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN l.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","우면한라아파트,",우면한라아파트에서 가까운 학교는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’우면한라아파트’) MATCH (m:’학교’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","반포주공1단지아파트,",반포주공1단지아파트에서 가까운 병원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’반포주공1단지아파트’) MATCH (m:’병원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","방배동부센트레빌아파트,",방배동부센트레빌아파트에서 가까운 학교는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’방배동부센트레빌아파트’) MATCH (l:’학교’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN l.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","신반포7차아파트,",신반포7차아파트에서 가까운 학교는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’신반포7차아파트’) MATCH (m:’학교’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","래미안서초에스티지S아파트,",래미안서초에스티지S아파트에서 가까운 지하철역는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (k:’래미안서초에스티지S아파트’) MATCH (m:’지하철역’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","잠원한신아파트,",잠원한신아파트에서 가까운 지하철역는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’잠원한신아파트’) MATCH (m:’지하철역’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","반포미도2차아파트,",반포미도2차아파트에서 가까운 지하철역는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’반포미도2차아파트’) MATCH (m:’지하철역’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","서초대우디오빌프라임아파트,",서초대우디오빌프라임아파트에서 가까운 학교는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’서초대우디오빌프라임아파트’) MATCH (m:’학교’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","반포주공1단지아파트,",반포주공1단지아파트에서 가까운 공원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’반포주공1단지아파트’) MATCH (l:’공원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN l.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","LH서초5단지아파트,",LH서초5단지아파트에서 가까운 공원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’LH서초5단지아파트’) MATCH (l:’공원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN l.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","래미안원베일리아파트,",래미안원베일리아파트에서 가까운 병원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’래미안원베일리아파트’) MATCH (m:’병원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","서초호반써밋아파트,",서초호반써밋아파트에서 가까운 지하철역는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’서초호반써밋아파트’) MATCH (m:’지하철역’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","서초현대아파트,",서초현대아파트에서 가까운 공원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’서초현대아파트’) MATCH (m:’공원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","서초한신아파트,",서초한신아파트에서 가까운 학교는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’서초한신아파트’) MATCH (l:’학교’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN l.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","현대동궁아파트,",현대동궁아파트에서 가까운 공원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’현대동궁아파트’) MATCH (l:’공원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN l.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","신반포11차아파트,",신반포11차아파트에서 가까운 병원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (k:’신반포11차아파트’) MATCH (m:’병원’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","서초호반써밋아파트,",서초호반써밋아파트에서 가까운 지하철역는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’서초호반써밋아파트’) MATCH (m:’지하철역’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","서초대우아이빌아파트,",서초대우아이빌아파트에서 가까운 병원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’서초대우아이빌아파트’) MATCH (m:’병원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","서초그랑자이아파트,",서초그랑자이아파트에서 가까운 학교는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (k:’서초그랑자이아파트’) MATCH (l:’학교’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN l.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","엠브이아파트,",엠브이아파트에서 가까운 공원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’엠브이아파트’) MATCH (m:’공원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","래미안퍼스티지아파트,",래미안퍼스티지아파트에서 가까운 병원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (k:’래미안퍼스티지아파트’) MATCH (m:’병원’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","서초네이처힐4단지아파트,",서초네이처힐4단지아파트에서 가까운 공원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’서초네이처힐4단지아파트’) MATCH (m:’공원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","대림아파트,",대림아파트에서 가까운 학교는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (k:’대림아파트’) MATCH (m:’학교’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","서초포레스타6단지아파트,",서초포레스타6단지아파트에서 가까운 지하철역는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’서초포레스타6단지아파트’) MATCH (m:’지하철역’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","서초네이처힐6단지아파트,",서초네이처힐6단지아파트에서 가까운 공원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’서초네이처힐6단지아파트’) MATCH (l:’공원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN l.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","유원서초아파트,",유원서초아파트에서 가까운 학교는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (n:’유원서초아파트’) MATCH (m:’학교’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN m.name",1,3
24,[mask_1]에서 가까운 [mask_2]는?,"apt_name,poi_class","래미안서초에스티지S아파트,",래미안서초에스티지S아파트에서 가까운 병원는?,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN [beta].name","apt_name,poi_class","MATCH (k:’래미안서초에스티지S아파트’) MATCH (l:’병원’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 1000 RETURN l.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",학교이 2km 이내에 있는 공원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’학교’) MATCH (m:’공원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",학교이 2km 이내에 있는 공원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’학교’) MATCH (m:’공원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",학교이 2km 이내에 있는 학교 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’학교’) MATCH (m:’학교’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",지하철역이 2km 이내에 있는 병원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (k:’지하철역’) MATCH (m:’병원’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",공원이 2km 이내에 있는 병원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’공원’) MATCH (m:’병원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",병원이 2km 이내에 있는 학교 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’병원’) MATCH (m:’학교’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",지하철역이 2km 이내에 있는 학교 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (k:’지하철역’) MATCH (m:’학교’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",병원이 2km 이내에 있는 학교 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’병원’) MATCH (l:’학교’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN l.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",병원이 2km 이내에 있는 공원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’병원’) MATCH (m:’공원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",지하철역이 2km 이내에 있는 공원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (k:’지하철역’) MATCH (m:’공원’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",공원이 2km 이내에 있는 학교 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’공원’) MATCH (l:’학교’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN l.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",병원이 2km 이내에 있는 공원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (k:’병원’) MATCH (m:’공원’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",공원이 2km 이내에 있는 병원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (k:’공원’) MATCH (m:’병원’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",학교이 2km 이내에 있는 지하철역 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’학교’) MATCH (m:’지하철역’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",공원이 2km 이내에 있는 지하철역 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’공원’) MATCH (l:’지하철역’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN l.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",공원이 2km 이내에 있는 병원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’공원’) MATCH (m:’병원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",병원이 2km 이내에 있는 공원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (k:’병원’) MATCH (l:’공원’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN l.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",지하철역이 2km 이내에 있는 병원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (k:’지하철역’) MATCH (m:’병원’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",공원이 2km 이내에 있는 공원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’공원’) MATCH (m:’공원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",병원이 2km 이내에 있는 공원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’병원’) MATCH (m:’공원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",학교이 2km 이내에 있는 병원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (k:’학교’) MATCH (m:’병원’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",학교이 2km 이내에 있는 공원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (k:’학교’) MATCH (m:’공원’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",지하철역이 2km 이내에 있는 병원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’지하철역’) MATCH (l:’병원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN l.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",공원이 2km 이내에 있는 병원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’공원’) MATCH (l:’병원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN l.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",병원이 2km 이내에 있는 지하철역 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (k:’병원’) MATCH (m:’지하철역’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",공원이 2km 이내에 있는 지하철역 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’공원’) MATCH (l:’지하철역’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN l.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",학교이 2km 이내에 있는 지하철역 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (k:’학교’) MATCH (l:’지하철역’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN l.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",공원이 2km 이내에 있는 지하철역 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’공원’) MATCH (m:’지하철역’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",지하철역이 2km 이내에 있는 학교 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’지하철역’) MATCH (m:’학교’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",공원이 2km 이내에 있는 지하철역 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’공원’) MATCH (l:’지하철역’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN l.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",병원이 2km 이내에 있는 지하철역 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’병원’) MATCH (m:’지하철역’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",공원이 2km 이내에 있는 지하철역 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (k:’공원’) MATCH (m:’지하철역’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",학교이 2km 이내에 있는 지하철역 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’학교’) MATCH (m:’지하철역’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",공원이 2km 이내에 있는 학교 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’공원’) MATCH (m:’학교’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",공원이 2km 이내에 있는 지하철역 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’공원’) MATCH (l:’지하철역’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN l.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",지하철역이 2km 이내에 있는 지하철역 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (k:’지하철역’) MATCH (l:’지하철역’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN l.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",병원이 2km 이내에 있는 지하철역 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’병원’) MATCH (m:’지하철역’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",학교이 2km 이내에 있는 학교 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’학교’) MATCH (m:’학교’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",병원이 2km 이내에 있는 학교 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’병원’) MATCH (l:’학교’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN l.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",지하철역이 2km 이내에 있는 공원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’지하철역’) MATCH (m:’공원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",공원이 2km 이내에 있는 병원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (k:’공원’) MATCH (m:’병원’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",지하철역이 2km 이내에 있는 공원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (k:’지하철역’) MATCH (m:’공원’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",지하철역이 2km 이내에 있는 병원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’지하철역’) MATCH (m:’병원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",지하철역이 2km 이내에 있는 병원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (k:’지하철역’) MATCH (l:’병원’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN l.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",지하철역이 2km 이내에 있는 학교 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’지하철역’) MATCH (m:’학교’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",공원이 2km 이내에 있는 지하철역 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’공원’) MATCH (l:’지하철역’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN l.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",학교이 2km 이내에 있는 공원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (k:’학교’) MATCH (m:’공원’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",학교이 2km 이내에 있는 병원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (k:’학교’) MATCH (m:’병원’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",공원이 2km 이내에 있는 지하철역 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’공원’) MATCH (m:’지하철역’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",학교이 2km 이내에 있는 공원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’학교’) MATCH (l:’공원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN l.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",학교이 2km 이내에 있는 병원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’학교’) MATCH (l:’병원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN l.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",학교이 2km 이내에 있는 공원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’학교’) MATCH (m:’공원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",병원이 2km 이내에 있는 지하철역 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (k:’병원’) MATCH (m:’지하철역’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",병원이 2km 이내에 있는 학교 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (k:’병원’) MATCH (m:’학교’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",학교이 2km 이내에 있는 지하철역 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’학교’) MATCH (m:’지하철역’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",학교이 2km 이내에 있는 병원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (k:’학교’) MATCH (m:’병원’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",병원이 2km 이내에 있는 병원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (k:’병원’) MATCH (m:’병원’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",공원이 2km 이내에 있는 학교 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’공원’) MATCH (m:’학교’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",병원이 2km 이내에 있는 공원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’병원’) MATCH (m:’공원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",지하철역이 2km 이내에 있는 병원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’지하철역’) MATCH (m:’병원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",병원이 2km 이내에 있는 공원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (k:’병원’) MATCH (m:’공원’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",공원이 2km 이내에 있는 병원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (k:’공원’) MATCH (l:’병원’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN l.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",지하철역이 2km 이내에 있는 지하철역 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’지하철역’) MATCH (l:’지하철역’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN l.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",학교이 2km 이내에 있는 학교 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’학교’) MATCH (m:’학교’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",병원이 2km 이내에 있는 학교 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (k:’병원’) MATCH (l:’학교’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN l.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",지하철역이 2km 이내에 있는 병원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (k:’지하철역’) MATCH (m:’병원’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",공원이 2km 이내에 있는 지하철역 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (k:’공원’) MATCH (m:’지하철역’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",학교이 2km 이내에 있는 공원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’학교’) MATCH (m:’공원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",병원이 2km 이내에 있는 병원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (k:’병원’) MATCH (m:’병원’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",병원이 2km 이내에 있는 공원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (k:’병원’) MATCH (l:’공원’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN l.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",학교이 2km 이내에 있는 공원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’학교’) MATCH (m:’공원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",지하철역이 2km 이내에 있는 학교 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’지하철역’) MATCH (m:’학교’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",공원이 2km 이내에 있는 지하철역 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’공원’) MATCH (m:’지하철역’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",병원이 2km 이내에 있는 지하철역 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’병원’) MATCH (m:’지하철역’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",지하철역이 2km 이내에 있는 학교 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (k:’지하철역’) MATCH (m:’학교’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",병원이 2km 이내에 있는 학교 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’병원’) MATCH (l:’학교’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN l.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",지하철역이 2km 이내에 있는 지하철역 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (k:’지하철역’) MATCH (m:’지하철역’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",학교이 2km 이내에 있는 지하철역 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’학교’) MATCH (m:’지하철역’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",지하철역이 2km 이내에 있는 지하철역 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’지하철역’) MATCH (l:’지하철역’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN l.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",공원이 2km 이내에 있는 학교 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’공원’) MATCH (m:’학교’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",공원이 2km 이내에 있는 지하철역 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’공원’) MATCH (m:’지하철역’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",지하철역이 2km 이내에 있는 병원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (k:’지하철역’) MATCH (m:’병원’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",공원이 2km 이내에 있는 공원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’공원’) MATCH (m:’공원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",학교이 2km 이내에 있는 학교 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (k:’학교’) MATCH (l:’학교’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN l.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",지하철역이 2km 이내에 있는 공원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’지하철역’) MATCH (l:’공원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN l.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",공원이 2km 이내에 있는 공원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’공원’) MATCH (m:’공원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",공원이 2km 이내에 있는 공원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’공원’) MATCH (m:’공원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",학교이 2km 이내에 있는 병원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’학교’) MATCH (l:’병원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN l.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",공원이 2km 이내에 있는 지하철역 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’공원’) MATCH (m:’지하철역’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",지하철역이 2km 이내에 있는 병원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’지하철역’) MATCH (l:’병원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN l.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",병원이 2km 이내에 있는 공원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’병원’) MATCH (m:’공원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",병원이 2km 이내에 있는 공원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (k:’병원’) MATCH (l:’공원’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN l.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",지하철역이 2km 이내에 있는 공원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’지하철역’) MATCH (m:’공원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",학교이 2km 이내에 있는 공원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’학교’) MATCH (m:’공원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",학교이 2km 이내에 있는 지하철역 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (k:’학교’) MATCH (l:’지하철역’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN l.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",공원이 2km 이내에 있는 학교 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’공원’) MATCH (m:’학교’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",공원이 2km 이내에 있는 지하철역 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (k:’공원’) MATCH (m:’지하철역’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",학교이 2km 이내에 있는 병원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’학교’) MATCH (m:’병원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",병원이 2km 이내에 있는 공원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’병원’) MATCH (l:’공원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN l.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",지하철역이 2km 이내에 있는 지하철역 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’지하철역’) MATCH (m:’지하철역’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",공원이 2km 이내에 있는 지하철역 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’공원’) MATCH (l:’지하철역’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN l.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",지하철역이 2km 이내에 있는 병원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (k:’지하철역’) MATCH (m:’병원’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",학교이 2km 이내에 있는 지하철역 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’학교’) MATCH (m:’지하철역’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",공원이 2km 이내에 있는 지하철역 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (k:’공원’) MATCH (l:’지하철역’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN l.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",공원이 2km 이내에 있는 지하철역 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (k:’공원’) MATCH (l:’지하철역’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN l.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",학교이 2km 이내에 있는 공원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’학교’) MATCH (m:’공원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",지하철역이 2km 이내에 있는 공원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’지하철역’) MATCH (m:’공원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",지하철역이 2km 이내에 있는 병원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’지하철역’) MATCH (m:’병원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",공원이 2km 이내에 있는 공원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’공원’) MATCH (m:’공원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",지하철역이 2km 이내에 있는 병원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’지하철역’) MATCH (l:’병원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN l.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",지하철역이 2km 이내에 있는 병원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’지하철역’) MATCH (l:’병원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN l.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",병원이 2km 이내에 있는 학교 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’병원’) MATCH (m:’학교’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",지하철역이 2km 이내에 있는 공원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’지하철역’) MATCH (m:’공원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",병원이 2km 이내에 있는 병원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’병원’) MATCH (m:’병원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",지하철역이 2km 이내에 있는 학교 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (k:’지하철역’) MATCH (m:’학교’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",공원이 2km 이내에 있는 학교 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (k:’공원’) MATCH (l:’학교’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN l.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",학교이 2km 이내에 있는 병원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’학교’) MATCH (m:’병원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",학교이 2km 이내에 있는 지하철역 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’학교’) MATCH (l:’지하철역’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN l.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",학교이 2km 이내에 있는 병원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’학교’) MATCH (m:’병원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",지하철역이 2km 이내에 있는 병원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’지하철역’) MATCH (m:’병원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",병원이 2km 이내에 있는 지하철역 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (k:’병원’) MATCH (m:’지하철역’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",병원이 2km 이내에 있는 학교 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’병원’) MATCH (m:’학교’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",지하철역이 2km 이내에 있는 학교 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’지하철역’) MATCH (m:’학교’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",병원이 2km 이내에 있는 병원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’병원’) MATCH (m:’병원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",지하철역이 2km 이내에 있는 지하철역 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (k:’지하철역’) MATCH (l:’지하철역’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN l.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",공원이 2km 이내에 있는 지하철역 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’공원’) MATCH (m:’지하철역’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",지하철역이 2km 이내에 있는 지하철역 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’지하철역’) MATCH (m:’지하철역’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",병원이 2km 이내에 있는 병원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (k:’병원’) MATCH (l:’병원’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN l.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",공원이 2km 이내에 있는 병원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’공원’) MATCH (m:’병원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",병원이 2km 이내에 있는 병원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’병원’) MATCH (m:’병원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",학교이 2km 이내에 있는 지하철역 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’학교’) MATCH (m:’지하철역’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",공원이 2km 이내에 있는 학교 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’공원’) MATCH (m:’학교’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",병원이 2km 이내에 있는 병원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’병원’) MATCH (m:’병원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",학교이 2km 이내에 있는 병원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’학교’) MATCH (m:’병원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",병원이 2km 이내에 있는 학교 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (k:’병원’) MATCH (m:’학교’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",공원이 2km 이내에 있는 지하철역 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (k:’공원’) MATCH (m:’지하철역’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",병원이 2km 이내에 있는 지하철역 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (k:’병원’) MATCH (m:’지하철역’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",학교이 2km 이내에 있는 병원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (k:’학교’) MATCH (l:’병원’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN l.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",지하철역이 2km 이내에 있는 지하철역 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’지하철역’) MATCH (m:’지하철역’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",지하철역이 2km 이내에 있는 병원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’지하철역’) MATCH (m:’병원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",학교이 2km 이내에 있는 공원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’학교’) MATCH (l:’공원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN l.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",학교이 2km 이내에 있는 병원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’학교’) MATCH (m:’병원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",병원이 2km 이내에 있는 학교 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (k:’병원’) MATCH (m:’학교’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",학교이 2km 이내에 있는 지하철역 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’학교’) MATCH (m:’지하철역’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",학교이 2km 이내에 있는 병원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’학교’) MATCH (m:’병원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",공원이 2km 이내에 있는 학교 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’공원’) MATCH (m:’학교’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",지하철역이 2km 이내에 있는 병원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’지하철역’) MATCH (m:’병원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",병원이 2km 이내에 있는 병원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’병원’) MATCH (m:’병원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",학교이 2km 이내에 있는 학교 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’학교’) MATCH (m:’학교’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",병원이 2km 이내에 있는 학교 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’병원’) MATCH (m:’학교’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",공원이 2km 이내에 있는 공원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’공원’) MATCH (m:’공원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",지하철역이 2km 이내에 있는 병원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’지하철역’) MATCH (m:’병원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",공원이 2km 이내에 있는 지하철역 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’공원’) MATCH (m:’지하철역’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",지하철역이 2km 이내에 있는 공원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’지하철역’) MATCH (m:’공원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",학교이 2km 이내에 있는 병원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’학교’) MATCH (m:’병원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",공원이 2km 이내에 있는 병원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’공원’) MATCH (m:’병원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",학교이 2km 이내에 있는 학교 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’학교’) MATCH (m:’학교’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",학교이 2km 이내에 있는 학교 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’학교’) MATCH (m:’학교’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",공원이 2km 이내에 있는 병원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (k:’공원’) MATCH (m:’병원’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",지하철역이 2km 이내에 있는 학교 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’지하철역’) MATCH (l:’학교’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN l.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",공원이 2km 이내에 있는 지하철역 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (k:’공원’) MATCH (l:’지하철역’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN l.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",공원이 2km 이내에 있는 병원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (k:’공원’) MATCH (m:’병원’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",지하철역이 2km 이내에 있는 학교 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’지하철역’) MATCH (m:’학교’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",지하철역이 2km 이내에 있는 학교 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’지하철역’) MATCH (l:’학교’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN l.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",지하철역이 2km 이내에 있는 병원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (k:’지하철역’) MATCH (m:’병원’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",공원이 2km 이내에 있는 지하철역 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (k:’공원’) MATCH (l:’지하철역’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN l.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",공원이 2km 이내에 있는 병원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’공원’) MATCH (m:’병원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",지하철역이 2km 이내에 있는 지하철역 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’지하철역’) MATCH (m:’지하철역’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",병원이 2km 이내에 있는 병원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (k:’병원’) MATCH (l:’병원’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN l.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",학교이 2km 이내에 있는 공원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (k:’학교’) MATCH (l:’공원’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN l.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",병원이 2km 이내에 있는 학교 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (k:’병원’) MATCH (m:’학교’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",공원이 2km 이내에 있는 공원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’공원’) MATCH (m:’공원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",지하철역이 2km 이내에 있는 지하철역 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’지하철역’) MATCH (l:’지하철역’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN l.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",지하철역이 2km 이내에 있는 지하철역 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (k:’지하철역’) MATCH (l:’지하철역’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN l.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",지하철역이 2km 이내에 있는 학교 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (k:’지하철역’) MATCH (l:’학교’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN l.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",지하철역이 2km 이내에 있는 지하철역 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’지하철역’) MATCH (m:’지하철역’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",학교이 2km 이내에 있는 공원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’학교’) MATCH (m:’공원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",지하철역이 2km 이내에 있는 병원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’지하철역’) MATCH (m:’병원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",공원이 2km 이내에 있는 학교 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’공원’) MATCH (l:’학교’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN l.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",지하철역이 2km 이내에 있는 병원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’지하철역’) MATCH (l:’병원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN l.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",지하철역이 2km 이내에 있는 지하철역 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’지하철역’) MATCH (m:’지하철역’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",학교이 2km 이내에 있는 공원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (k:’학교’) MATCH (m:’공원’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",병원이 2km 이내에 있는 학교 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’병원’) MATCH (m:’학교’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",공원이 2km 이내에 있는 학교 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’공원’) MATCH (m:’학교’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",병원이 2km 이내에 있는 학교 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (k:’병원’) MATCH (l:’학교’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN l.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",병원이 2km 이내에 있는 공원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’병원’) MATCH (m:’공원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",공원이 2km 이내에 있는 공원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’공원’) MATCH (m:’공원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",학교이 2km 이내에 있는 병원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (k:’학교’) MATCH (m:’병원’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",학교이 2km 이내에 있는 학교 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’학교’) MATCH (l:’학교’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN l.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",지하철역이 2km 이내에 있는 병원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (k:’지하철역’) MATCH (m:’병원’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",공원이 2km 이내에 있는 학교 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’공원’) MATCH (l:’학교’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN l.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",지하철역이 2km 이내에 있는 병원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’지하철역’) MATCH (m:’병원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",병원이 2km 이내에 있는 병원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (k:’병원’) MATCH (m:’병원’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",학교이 2km 이내에 있는 학교 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’학교’) MATCH (l:’학교’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN l.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",지하철역이 2km 이내에 있는 병원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’지하철역’) MATCH (m:’병원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",학교이 2km 이내에 있는 학교 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (k:’학교’) MATCH (m:’학교’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",공원이 2km 이내에 있는 병원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’공원’) MATCH (l:’병원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN l.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",지하철역이 2km 이내에 있는 지하철역 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (k:’지하철역’) MATCH (m:’지하철역’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",공원이 2km 이내에 있는 병원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (k:’공원’) MATCH (m:’병원’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",병원이 2km 이내에 있는 학교 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (k:’병원’) MATCH (m:’학교’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",지하철역이 2km 이내에 있는 학교 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’지하철역’) MATCH (m:’학교’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",병원이 2km 이내에 있는 지하철역 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (k:’병원’) MATCH (m:’지하철역’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",병원이 2km 이내에 있는 병원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’병원’) MATCH (l:’병원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN l.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",공원이 2km 이내에 있는 지하철역 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (k:’공원’) MATCH (l:’지하철역’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN l.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",학교이 2km 이내에 있는 병원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’학교’) MATCH (l:’병원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN l.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",지하철역이 2km 이내에 있는 공원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’지하철역’) MATCH (l:’공원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN l.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",병원이 2km 이내에 있는 공원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (k:’병원’) MATCH (m:’공원’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",학교이 2km 이내에 있는 학교 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’학교’) MATCH (l:’학교’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN l.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",병원이 2km 이내에 있는 지하철역 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (k:’병원’) MATCH (l:’지하철역’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN l.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",공원이 2km 이내에 있는 학교 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (k:’공원’) MATCH (l:’학교’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN l.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",병원이 2km 이내에 있는 지하철역 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’병원’) MATCH (l:’지하철역’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN l.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",학교이 2km 이내에 있는 지하철역 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’학교’) MATCH (m:’지하철역’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",학교이 2km 이내에 있는 지하철역 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’학교’) MATCH (m:’지하철역’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",병원이 2km 이내에 있는 지하철역 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’병원’) MATCH (m:’지하철역’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",지하철역이 2km 이내에 있는 병원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’지하철역’) MATCH (l:’병원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN l.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",지하철역이 2km 이내에 있는 병원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’지하철역’) MATCH (m:’병원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",병원이 2km 이내에 있는 지하철역 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’병원’) MATCH (l:’지하철역’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN l.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",학교이 2km 이내에 있는 학교 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’학교’) MATCH (l:’학교’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN l.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",학교이 2km 이내에 있는 학교 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (k:’학교’) MATCH (m:’학교’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",지하철역이 2km 이내에 있는 공원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’지하철역’) MATCH (l:’공원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN l.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",병원이 2km 이내에 있는 지하철역 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’병원’) MATCH (m:’지하철역’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",학교이 2km 이내에 있는 병원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (k:’학교’) MATCH (m:’병원’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",공원이 2km 이내에 있는 지하철역 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (k:’공원’) MATCH (m:’지하철역’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",학교이 2km 이내에 있는 병원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (k:’학교’) MATCH (l:’병원’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN l.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",병원이 2km 이내에 있는 병원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’병원’) MATCH (l:’병원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN l.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",학교이 2km 이내에 있는 공원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (k:’학교’) MATCH (l:’공원’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN l.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",학교이 2km 이내에 있는 지하철역 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’학교’) MATCH (m:’지하철역’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",지하철역이 2km 이내에 있는 공원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’지하철역’) MATCH (l:’공원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN l.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",공원이 2km 이내에 있는 지하철역 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (k:’공원’) MATCH (m:’지하철역’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",학교이 2km 이내에 있는 공원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’학교’) MATCH (l:’공원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN l.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",지하철역이 2km 이내에 있는 공원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’지하철역’) MATCH (l:’공원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN l.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",학교이 2km 이내에 있는 공원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’학교’) MATCH (m:’공원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",공원이 2km 이내에 있는 공원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (k:’공원’) MATCH (l:’공원’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN l.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",병원이 2km 이내에 있는 학교 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’병원’) MATCH (m:’학교’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",지하철역이 2km 이내에 있는 지하철역 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’지하철역’) MATCH (m:’지하철역’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",공원이 2km 이내에 있는 학교 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’공원’) MATCH (m:’학교’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",병원이 2km 이내에 있는 학교 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’병원’) MATCH (m:’학교’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",공원이 2km 이내에 있는 병원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (k:’공원’) MATCH (l:’병원’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN l.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",병원이 2km 이내에 있는 공원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’병원’) MATCH (m:’공원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",학교이 2km 이내에 있는 공원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’학교’) MATCH (l:’공원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN l.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",공원이 2km 이내에 있는 지하철역 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (k:’공원’) MATCH (m:’지하철역’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",지하철역이 2km 이내에 있는 지하철역 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (k:’지하철역’) MATCH (l:’지하철역’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN l.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",지하철역이 2km 이내에 있는 공원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’지하철역’) MATCH (l:’공원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN l.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",공원이 2km 이내에 있는 공원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’공원’) MATCH (l:’공원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN l.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",공원이 2km 이내에 있는 공원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’공원’) MATCH (m:’공원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",병원이 2km 이내에 있는 병원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (k:’병원’) MATCH (m:’병원’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",병원이 2km 이내에 있는 지하철역 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’병원’) MATCH (m:’지하철역’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",병원이 2km 이내에 있는 공원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’병원’) MATCH (m:’공원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",학교이 2km 이내에 있는 공원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (k:’학교’) MATCH (m:’공원’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",지하철역이 2km 이내에 있는 학교 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (k:’지하철역’) MATCH (m:’학교’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",병원이 2km 이내에 있는 학교 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (k:’병원’) MATCH (m:’학교’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",공원이 2km 이내에 있는 지하철역 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’공원’) MATCH (m:’지하철역’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",지하철역이 2km 이내에 있는 학교 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (k:’지하철역’) MATCH (m:’학교’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",공원이 2km 이내에 있는 학교 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (k:’공원’) MATCH (m:’학교’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",지하철역이 2km 이내에 있는 학교 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (k:’지하철역’) MATCH (m:’학교’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",학교이 2km 이내에 있는 공원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (k:’학교’) MATCH (m:’공원’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",학교이 2km 이내에 있는 지하철역 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’학교’) MATCH (l:’지하철역’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN l.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",학교이 2km 이내에 있는 병원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’학교’) MATCH (m:’병원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",지하철역이 2km 이내에 있는 병원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’지하철역’) MATCH (m:’병원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",지하철역이 2km 이내에 있는 공원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (k:’지하철역’) MATCH (m:’공원’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",병원이 2km 이내에 있는 공원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’병원’) MATCH (m:’공원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",지하철역이 2km 이내에 있는 학교 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’지하철역’) MATCH (l:’학교’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN l.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",공원이 2km 이내에 있는 학교 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’공원’) MATCH (m:’학교’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",병원이 2km 이내에 있는 공원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’병원’) MATCH (m:’공원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",병원이 2km 이내에 있는 지하철역 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’병원’) MATCH (l:’지하철역’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN l.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",지하철역이 2km 이내에 있는 병원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’지하철역’) MATCH (l:’병원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN l.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",공원이 2km 이내에 있는 지하철역 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’공원’) MATCH (m:’지하철역’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",병원이 2km 이내에 있는 지하철역 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (k:’병원’) MATCH (l:’지하철역’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN l.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",학교이 2km 이내에 있는 공원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (k:’학교’) MATCH (m:’공원’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",공원이 2km 이내에 있는 병원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (k:’공원’) MATCH (m:’병원’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",병원이 2km 이내에 있는 공원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’병원’) MATCH (m:’공원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",학교이 2km 이내에 있는 병원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’학교’) MATCH (l:’병원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN l.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",병원이 2km 이내에 있는 병원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (k:’병원’) MATCH (m:’병원’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",공원이 2km 이내에 있는 학교 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’공원’) MATCH (m:’학교’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",병원이 2km 이내에 있는 병원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (k:’병원’) MATCH (m:’병원’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",공원이 2km 이내에 있는 병원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’공원’) MATCH (m:’병원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",학교이 2km 이내에 있는 학교 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’학교’) MATCH (m:’학교’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",지하철역이 2km 이내에 있는 학교 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’지하철역’) MATCH (m:’학교’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",공원이 2km 이내에 있는 병원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’공원’) MATCH (m:’병원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",학교이 2km 이내에 있는 학교 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’학교’) MATCH (m:’학교’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",학교이 2km 이내에 있는 공원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’학교’) MATCH (m:’공원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",지하철역이 2km 이내에 있는 공원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (k:’지하철역’) MATCH (l:’공원’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN l.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",학교이 2km 이내에 있는 병원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’학교’) MATCH (l:’병원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN l.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",공원이 2km 이내에 있는 공원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’공원’) MATCH (l:’공원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN l.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",학교이 2km 이내에 있는 지하철역 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’학교’) MATCH (l:’지하철역’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN l.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",병원이 2km 이내에 있는 공원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’병원’) MATCH (m:’공원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",지하철역이 2km 이내에 있는 공원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’지하철역’) MATCH (m:’공원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",병원이 2km 이내에 있는 지하철역 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (k:’병원’) MATCH (l:’지하철역’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN l.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",학교이 2km 이내에 있는 공원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (k:’학교’) MATCH (l:’공원’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN l.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",학교이 2km 이내에 있는 지하철역 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’학교’) MATCH (l:’지하철역’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN l.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",병원이 2km 이내에 있는 지하철역 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’병원’) MATCH (l:’지하철역’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN l.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",학교이 2km 이내에 있는 병원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’학교’) MATCH (m:’병원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",공원이 2km 이내에 있는 병원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’공원’) MATCH (m:’병원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",병원이 2km 이내에 있는 공원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’병원’) MATCH (m:’공원’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",공원이 2km 이내에 있는 지하철역 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’공원’) MATCH (l:’지하철역’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN l.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",병원이 2km 이내에 있는 공원 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (k:’병원’) MATCH (m:’공원’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",공원이 2km 이내에 있는 지하철역 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’공원’) MATCH (m:’지하철역’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",학교이 2km 이내에 있는 지하철역 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’학교’) MATCH (l:’지하철역’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN l.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",병원이 2km 이내에 있는 지하철역 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (n:’병원’) MATCH (m:’지하철역’) WITH point({x:toFloat(n.x),y:toFloat(n.y), crs:'WGS-84'}) as p1, point({x:toFloat(m.x),y:toFloat(m.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN m.name",1,3
25,[mask_1]이 2km 이내에 있는 [mask_2] 알려줘,"poi_class,poi_class",",",병원이 2km 이내에 있는 학교 알려줘,"MATCH ([alpha]:’[mask_1]’) MATCH ([beta]:’[mask_2]’) WITH point({x:toFloat([alpha].x),y:toFloat([alpha].y), crs:'WGS-84'}) as p1, point({x:toFloat([beta].x),y:toFloat([beta].y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN [beta].name","poi_class,poi_class","MATCH (k:’병원’) MATCH (l:’학교’) WITH point({x:toFloat(k.x),y:toFloat(k.y), crs:'WGS-84'}) as p1, point({x:toFloat(l.x),y:toFloat(l.y), crs:'WGS-84'}) as p2 WHERE point.distance(p1,p2) < 2000 RETURN l.name",1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울양재초등학교,서울양재초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울양재초등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,내곡중학교,내곡중학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’내곡중학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울양재초등학교,서울양재초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울양재초등학교’})-[:IN]-(k:Apartment) RETURN k.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,세화여자고등학교,세화여자고등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’세화여자고등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울서일초등학교,서울서일초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울서일초등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,세화고등학교,세화고등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’세화고등학교’})-[:IN]-(k:Apartment) RETURN k.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울신중초등학교,서울신중초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울신중초등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울우솔초등학교,서울우솔초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울우솔초등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서문여자중학교,서문여자중학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서문여자중학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울전자고등학교,서울전자고등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울전자고등학교’})-[:IN]-(k:Apartment) RETURN k.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울잠원초등학교,서울잠원초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울잠원초등학교’})-[:IN]-(k:Apartment) RETURN k.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울방현초등학교,서울방현초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울방현초등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울서일초등학교,서울서일초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울서일초등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울반포초등학교,서울반포초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울반포초등학교’})-[:IN]-(k:Apartment) RETURN k.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울우면초등학교,서울우면초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울우면초등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울서일초등학교,서울서일초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울서일초등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울서초초등학교,서울서초초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울서초초등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울이수초등학교,서울이수초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울이수초등학교’})-[:IN]-(k:Apartment) RETURN k.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울전자고등학교,서울전자고등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울전자고등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서운중학교,서운중학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서운중학교’})-[:IN]-(k:Apartment) RETURN k.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,동덕여자중학교,동덕여자중학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’동덕여자중학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서문여자고등학교,서문여자고등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서문여자고등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,계성초등학교,계성초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’계성초등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서일중학교,서일중학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서일중학교’})-[:IN]-(k:Apartment) RETURN k.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,언남중학교,언남중학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’언남중학교’})-[:IN]-(k:Apartment) RETURN k.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울우암초등학교,서울우암초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울우암초등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울반포초등학교,서울반포초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울반포초등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서일중학교,서일중학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서일중학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서운중학교,서운중학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서운중학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울방배초등학교,서울방배초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울방배초등학교’})-[:IN]-(k:Apartment) RETURN k.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서초고등학교,서초고등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서초고등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,내곡중학교,내곡중학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’내곡중학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,신반포중학교,신반포중학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’신반포중학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울우면초등학교,서울우면초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울우면초등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,신반포중학교,신반포중학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’신반포중학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울잠원초등학교,서울잠원초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울잠원초등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,동덕여자고등학교,동덕여자고등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’동덕여자고등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,원촌중학교,원촌중학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’원촌중학교’})-[:IN]-(k:Apartment) RETURN k.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울방현초등학교,서울방현초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울방현초등학교’})-[:IN]-(k:Apartment) RETURN k.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울이수초등학교,서울이수초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울이수초등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울서이초등학교,서울서이초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울서이초등학교’})-[:IN]-(k:Apartment) RETURN k.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,계성초등학교,계성초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’계성초등학교’})-[:IN]-(k:Apartment) RETURN k.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,계성초등학교,계성초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’계성초등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,세화고등학교,세화고등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’세화고등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울우암초등학교,서울우암초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울우암초등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울신동초등학교,서울신동초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울신동초등학교’})-[:IN]-(k:Apartment) RETURN k.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,언남고등학교,언남고등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’언남고등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,상문고등학교,상문고등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’상문고등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울우솔초등학교,서울우솔초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울우솔초등학교’})-[:IN]-(k:Apartment) RETURN k.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울방현초등학교,서울방현초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울방현초등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서문여자고등학교,서문여자고등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서문여자고등학교’})-[:IN]-(k:Apartment) RETURN k.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,원촌중학교,원촌중학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’원촌중학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울서이초등학교,서울서이초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울서이초등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울서일초등학교,서울서일초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울서일초등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서일중학교,서일중학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서일중학교’})-[:IN]-(k:Apartment) RETURN k.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서문여자중학교,서문여자중학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서문여자중학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서문여자중학교,서문여자중학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서문여자중학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울방일초등학교,서울방일초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울방일초등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울우면초등학교,서울우면초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울우면초등학교’})-[:IN]-(k:Apartment) RETURN k.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울양재초등학교,서울양재초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울양재초등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울반포초등학교,서울반포초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울반포초등학교’})-[:IN]-(k:Apartment) RETURN k.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,신반포중학교,신반포중학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’신반포중학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,경원중학교,경원중학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’경원중학교’})-[:IN]-(k:Apartment) RETURN k.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울원촌초등학교,서울원촌초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울원촌초등학교’})-[:IN]-(k:Apartment) RETURN k.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,신반포중학교,신반포중학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’신반포중학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서문여자고등학교,서문여자고등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서문여자고등학교’})-[:IN]-(k:Apartment) RETURN k.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울서이초등학교,서울서이초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울서이초등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,반포중학교,반포중학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’반포중학교’})-[:IN]-(k:Apartment) RETURN k.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,세화고등학교,세화고등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’세화고등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울잠원초등학교,서울잠원초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울잠원초등학교’})-[:IN]-(k:Apartment) RETURN k.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울서원초등학교,서울서원초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울서원초등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서문여자중학교,서문여자중학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서문여자중학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울신동초등학교,서울신동초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울신동초등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,영동중학교,영동중학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’영동중학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,언남중학교,언남중학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’언남중학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,양재고등학교,양재고등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’양재고등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울이수초등학교,서울이수초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울이수초등학교’})-[:IN]-(k:Apartment) RETURN k.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울언남초등학교,서울언남초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울언남초등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,양재고등학교,양재고등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’양재고등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,세화여자중학교,세화여자중학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’세화여자중학교’})-[:IN]-(k:Apartment) RETURN k.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울방일초등학교,서울방일초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울방일초등학교’})-[:IN]-(k:Apartment) RETURN k.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울서초초등학교,서울서초초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울서초초등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울원촌초등학교,서울원촌초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울원촌초등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서문여자고등학교,서문여자고등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서문여자고등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울언남초등학교,서울언남초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울언남초등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울원촌초등학교,서울원촌초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울원촌초등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울서이초등학교,서울서이초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울서이초등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서운중학교,서운중학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서운중학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서일중학교,서일중학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서일중학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울방일초등학교,서울방일초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울방일초등학교’})-[:IN]-(k:Apartment) RETURN k.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,이수중학교,이수중학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’이수중학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,경원중학교,경원중학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’경원중학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울서초초등학교,서울서초초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울서초초등학교’})-[:IN]-(k:Apartment) RETURN k.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,원촌중학교,원촌중학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’원촌중학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울원명초등학교,서울원명초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울원명초등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울우솔초등학교,서울우솔초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울우솔초등학교’})-[:IN]-(k:Apartment) RETURN k.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,세화여자고등학교,세화여자고등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’세화여자고등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울잠원초등학교,서울잠원초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울잠원초등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,언남중학교,언남중학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’언남중학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울신중초등학교,서울신중초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울신중초등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,동덕여자고등학교,동덕여자고등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’동덕여자고등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울서일초등학교,서울서일초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울서일초등학교’})-[:IN]-(k:Apartment) RETURN k.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,양재고등학교,양재고등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’양재고등학교’})-[:IN]-(k:Apartment) RETURN k.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,내곡중학교,내곡중학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’내곡중학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,계성초등학교,계성초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’계성초등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,반포중학교,반포중학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’반포중학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울서원초등학교,서울서원초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울서원초등학교’})-[:IN]-(k:Apartment) RETURN k.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울전자고등학교,서울전자고등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울전자고등학교’})-[:IN]-(k:Apartment) RETURN k.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,영동중학교,영동중학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’영동중학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,상문고등학교,상문고등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’상문고등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울서래초등학교,서울서래초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울서래초등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울우암초등학교,서울우암초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울우암초등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울고등학교,서울고등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울고등학교’})-[:IN]-(k:Apartment) RETURN k.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,계성초등학교,계성초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’계성초등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울방배초등학교,서울방배초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울방배초등학교’})-[:IN]-(k:Apartment) RETURN k.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,양재고등학교,양재고등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’양재고등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,경원중학교,경원중학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’경원중학교’})-[:IN]-(k:Apartment) RETURN k.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,반포고등학교,반포고등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’반포고등학교’})-[:IN]-(k:Apartment) RETURN k.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,언남중학교,언남중학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’언남중학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서초고등학교,서초고등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서초고등학교’})-[:IN]-(k:Apartment) RETURN k.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서초고등학교,서초고등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서초고등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,이수중학교,이수중학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’이수중학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울전자고등학교,서울전자고등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울전자고등학교’})-[:IN]-(k:Apartment) RETURN k.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,언남중학교,언남중학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’언남중학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울방일초등학교,서울방일초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울방일초등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,이수중학교,이수중학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’이수중학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,언남중학교,언남중학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’언남중학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서운중학교,서운중학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서운중학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울서이초등학교,서울서이초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울서이초등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,신반포중학교,신반포중학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’신반포중학교’})-[:IN]-(k:Apartment) RETURN k.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서운중학교,서운중학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서운중학교’})-[:IN]-(k:Apartment) RETURN k.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서문여자고등학교,서문여자고등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서문여자고등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,이수중학교,이수중학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’이수중학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,동덕여자중학교,동덕여자중학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’동덕여자중학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,신반포중학교,신반포중학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’신반포중학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,신동중학교,신동중학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’신동중학교’})-[:IN]-(k:Apartment) RETURN k.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울이수초등학교,서울이수초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울이수초등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,경원중학교,경원중학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’경원중학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,동덕여자중학교,동덕여자중학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’동덕여자중학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서일중학교,서일중학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서일중학교’})-[:IN]-(k:Apartment) RETURN k.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,언남중학교,언남중학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’언남중학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,경원중학교,경원중학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’경원중학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울우암초등학교,서울우암초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울우암초등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,세화고등학교,세화고등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’세화고등학교’})-[:IN]-(k:Apartment) RETURN k.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울방현초등학교,서울방현초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울방현초등학교’})-[:IN]-(k:Apartment) RETURN k.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,내곡중학교,내곡중학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’내곡중학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,언남중학교,언남중학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’언남중학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,언남중학교,언남중학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’언남중학교’})-[:IN]-(k:Apartment) RETURN k.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,동덕여자고등학교,동덕여자고등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’동덕여자고등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울반원초등학교,서울반원초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울반원초등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울신중초등학교,서울신중초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울신중초등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울이수초등학교,서울이수초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울이수초등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,세화여자중학교,세화여자중학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’세화여자중학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,내곡중학교,내곡중학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’내곡중학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울양재초등학교,서울양재초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울양재초등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울우솔초등학교,서울우솔초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울우솔초등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울방현초등학교,서울방현초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울방현초등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,신동중학교,신동중학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’신동중학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서문여자고등학교,서문여자고등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서문여자고등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,세화여자고등학교,세화여자고등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’세화여자고등학교’})-[:IN]-(k:Apartment) RETURN k.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서일중학교,서일중학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서일중학교’})-[:IN]-(k:Apartment) RETURN k.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,신반포중학교,신반포중학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’신반포중학교’})-[:IN]-(k:Apartment) RETURN k.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울전자고등학교,서울전자고등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울전자고등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울언남초등학교,서울언남초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울언남초등학교’})-[:IN]-(k:Apartment) RETURN k.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서문여자고등학교,서문여자고등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서문여자고등학교’})-[:IN]-(k:Apartment) RETURN k.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,반포중학교,반포중학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’반포중학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,내곡중학교,내곡중학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’내곡중학교’})-[:IN]-(k:Apartment) RETURN k.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울방배초등학교,서울방배초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울방배초등학교’})-[:IN]-(k:Apartment) RETURN k.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서일중학교,서일중학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서일중학교’})-[:IN]-(k:Apartment) RETURN k.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,세화고등학교,세화고등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’세화고등학교’})-[:IN]-(k:Apartment) RETURN k.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,양재고등학교,양재고등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’양재고등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서초중학교,서초중학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서초중학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울방현초등학교,서울방현초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울방현초등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,원촌중학교,원촌중학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’원촌중학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서일중학교,서일중학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서일중학교’})-[:IN]-(k:Apartment) RETURN k.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울방현초등학교,서울방현초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울방현초등학교’})-[:IN]-(k:Apartment) RETURN k.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울고등학교,서울고등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울고등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,방배중학교,방배중학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’방배중학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울반원초등학교,서울반원초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울반원초등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울반포초등학교,서울반포초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울반포초등학교’})-[:IN]-(k:Apartment) RETURN k.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울신중초등학교,서울신중초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울신중초등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,세화여자중학교,세화여자중학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’세화여자중학교’})-[:IN]-(k:Apartment) RETURN k.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울원명초등학교,서울원명초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울원명초등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,세화고등학교,세화고등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’세화고등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,양재고등학교,양재고등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’양재고등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울우솔초등학교,서울우솔초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울우솔초등학교’})-[:IN]-(k:Apartment) RETURN k.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,세화여자고등학교,세화여자고등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’세화여자고등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울방배초등학교,서울방배초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울방배초등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울방현초등학교,서울방현초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울방현초등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울이수초등학교,서울이수초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울이수초등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울잠원초등학교,서울잠원초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울잠원초등학교’})-[:IN]-(k:Apartment) RETURN k.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,세화고등학교,세화고등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’세화고등학교’})-[:IN]-(k:Apartment) RETURN k.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,동덕여자중학교,동덕여자중학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’동덕여자중학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울언남초등학교,서울언남초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울언남초등학교’})-[:IN]-(k:Apartment) RETURN k.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울우면초등학교,서울우면초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울우면초등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울신중초등학교,서울신중초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울신중초등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울신중초등학교,서울신중초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울신중초등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울언남초등학교,서울언남초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울언남초등학교’})-[:IN]-(k:Apartment) RETURN k.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,신동중학교,신동중학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’신동중학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울신중초등학교,서울신중초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울신중초등학교’})-[:IN]-(k:Apartment) RETURN k.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서일중학교,서일중학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서일중학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,원촌중학교,원촌중학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’원촌중학교’})-[:IN]-(k:Apartment) RETURN k.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울고등학교,서울고등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울고등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,세화고등학교,세화고등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’세화고등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울서래초등학교,서울서래초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울서래초등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서일중학교,서일중학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서일중학교’})-[:IN]-(k:Apartment) RETURN k.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울서이초등학교,서울서이초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울서이초등학교’})-[:IN]-(k:Apartment) RETURN k.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울방일초등학교,서울방일초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울방일초등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울우면초등학교,서울우면초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울우면초등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울양재초등학교,서울양재초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울양재초등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,세화여자중학교,세화여자중학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’세화여자중학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울신동초등학교,서울신동초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울신동초등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,동덕여자고등학교,동덕여자고등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’동덕여자고등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울언남초등학교,서울언남초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울언남초등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서일중학교,서일중학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서일중학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울전자고등학교,서울전자고등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울전자고등학교’})-[:IN]-(k:Apartment) RETURN k.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울서이초등학교,서울서이초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울서이초등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울서일초등학교,서울서일초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울서일초등학교’})-[:IN]-(k:Apartment) RETURN k.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울서초초등학교,서울서초초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울서초초등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서초중학교,서초중학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서초중학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울고등학교,서울고등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울고등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울이수초등학교,서울이수초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울이수초등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,세화고등학교,세화고등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’세화고등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울반원초등학교,서울반원초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울반원초등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울반원초등학교,서울반원초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울반원초등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울언남초등학교,서울언남초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울언남초등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,방배중학교,방배중학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’방배중학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,언남고등학교,언남고등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’언남고등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서초고등학교,서초고등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서초고등학교’})-[:IN]-(k:Apartment) RETURN k.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,세화고등학교,세화고등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’세화고등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울서이초등학교,서울서이초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울서이초등학교’})-[:IN]-(k:Apartment) RETURN k.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울양재초등학교,서울양재초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울양재초등학교’})-[:IN]-(k:Apartment) RETURN k.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울방배초등학교,서울방배초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울방배초등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서운중학교,서운중학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서운중학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울신중초등학교,서울신중초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울신중초등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울언남초등학교,서울언남초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울언남초등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울서원초등학교,서울서원초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울서원초등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,원촌중학교,원촌중학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’원촌중학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울원촌초등학교,서울원촌초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울원촌초등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,내곡중학교,내곡중학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’내곡중학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,신반포중학교,신반포중학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’신반포중학교’})-[:IN]-(k:Apartment) RETURN k.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,계성초등학교,계성초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’계성초등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울신동초등학교,서울신동초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울신동초등학교’})-[:IN]-(k:Apartment) RETURN k.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울고등학교,서울고등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울고등학교’})-[:IN]-(k:Apartment) RETURN k.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서일중학교,서일중학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서일중학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,세화고등학교,세화고등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’세화고등학교’})-[:IN]-(k:Apartment) RETURN k.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울방배초등학교,서울방배초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울방배초등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,경원중학교,경원중학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’경원중학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울반원초등학교,서울반원초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울반원초등학교’})-[:IN]-(k:Apartment) RETURN k.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울잠원초등학교,서울잠원초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울잠원초등학교’})-[:IN]-(k:Apartment) RETURN k.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서문여자고등학교,서문여자고등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서문여자고등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울전자고등학교,서울전자고등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울전자고등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,동덕여자고등학교,동덕여자고등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’동덕여자고등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서초고등학교,서초고등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서초고등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울신중초등학교,서울신중초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울신중초등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울방배초등학교,서울방배초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울방배초등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,반포고등학교,반포고등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’반포고등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울서일초등학교,서울서일초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울서일초등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,원촌중학교,원촌중학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’원촌중학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울서이초등학교,서울서이초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울서이초등학교’})-[:IN]-(k:Apartment) RETURN k.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울우면초등학교,서울우면초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울우면초등학교’})-[:IN]-(k:Apartment) RETURN k.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울방일초등학교,서울방일초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울방일초등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,신반포중학교,신반포중학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’신반포중학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,내곡중학교,내곡중학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’내곡중학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,언남고등학교,언남고등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’언남고등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서운중학교,서운중학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서운중학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,반포고등학교,반포고등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’반포고등학교’})-[:IN]-(k:Apartment) RETURN k.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서초중학교,서초중학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서초중학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,상문고등학교,상문고등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’상문고등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,언남중학교,언남중학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’언남중학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울고등학교,서울고등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울고등학교’})-[:IN]-(k:Apartment) RETURN k.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,동덕여자고등학교,동덕여자고등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’동덕여자고등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,영동중학교,영동중학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’영동중학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울서일초등학교,서울서일초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울서일초등학교’})-[:IN]-(k:Apartment) RETURN k.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울우솔초등학교,서울우솔초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울우솔초등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,계성초등학교,계성초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’계성초등학교’})-[:IN]-(k:Apartment) RETURN k.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,영동중학교,영동중학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’영동중학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,내곡중학교,내곡중학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’내곡중학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,계성초등학교,계성초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’계성초등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,원촌중학교,원촌중학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’원촌중학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울잠원초등학교,서울잠원초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울잠원초등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,신동중학교,신동중학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’신동중학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,언남고등학교,언남고등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’언남고등학교’})-[:IN]-(k:Apartment) RETURN k.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울원명초등학교,서울원명초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울원명초등학교’})-[:IN]-(k:Apartment) RETURN k.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울우솔초등학교,서울우솔초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울우솔초등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,세화고등학교,세화고등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’세화고등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,방배중학교,방배중학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’방배중학교’})-[:IN]-(k:Apartment) RETURN k.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서문여자고등학교,서문여자고등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서문여자고등학교’})-[:IN]-(k:Apartment) RETURN k.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울고등학교,서울고등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울고등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울고등학교,서울고등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울고등학교’})-[:IN]-(k:Apartment) RETURN k.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울방현초등학교,서울방현초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울방현초등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,상문고등학교,상문고등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’상문고등학교’})-[:IN]-(k:Apartment) RETURN k.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울원명초등학교,서울원명초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울원명초등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,세화고등학교,세화고등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’세화고등학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,이수중학교,이수중학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’이수중학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서초중학교,서초중학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서초중학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울방일초등학교,서울방일초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울방일초등학교’})-[:IN]-(k:Apartment) RETURN k.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,경원중학교,경원중학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’경원중학교’})-[:IN]-(n:Apartment) RETURN n.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,서울서일초등학교,서울서일초등학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’서울서일초등학교’})-[:IN]-(k:Apartment) RETURN k.name,1,3
26,[mask_1]에 배정받을 수 있는 아파트 알려줘,school_name,신반포중학교,신반포중학교에 배정받을 수 있는 아파트 알려줘,MATCH (s:SchoolAssignDistrict {name:’[mask_1]’})-[:IN]-([alpha]:Apartment) RETURN [alpha].name,school_name,MATCH (s:SchoolAssignDistrict {name:’신반포중학교’})-[:IN]-(k:Apartment) RETURN k.name,1,3
